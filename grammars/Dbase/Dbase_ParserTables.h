
////////////////////////////////////////////////////////////////////////////////
//
//    Dbase_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once

      #undef  GRAMMAR
      #undef  PARSER
      #undef  PARSER_TABLES
      #undef  LEXER
      #undef  ACTIONS
      #undef  TERM_ACTIONS
      #undef  NODE_ACTIONS
      #undef  INSENSITIVE
      #undef  LOOKAHEADS
      #undef  DEBUG_PARSER
      #undef  DEBUG_TRACE
      #undef  MAKE_AST
      #undef  EXPECTING
      #undef  REVERSABLE
      #undef  SEMANTICS
      #undef  ND_PARSING
      #undef  ND_THREADS

      #define GRAMMAR      "Dbase"
      #define PARSER        Dbase_Parser
      #define PARSER_TABLES Dbase_ParserTables
      #define LEXER         Dbase_Lexer
      #define ACTIONS       Dbase_Actions
      #define TERM_ACTIONS  Dbase_TermActions
      #define LOOKAHEADS    1
      #define EXPECTING


      #define TOP_DOWN  0
      #define PASS_OVER 1
      #define BOTTOM_UP 2

      class Dbase_ParserTables
      {
         friend class Dbase_Parser;
         public:
         static const char *term_symb[   280]; // Terminal symbols of the grammar.
         static const char *head_symb[   174]; // Nonterminal symbols of the grammar.
         static const char *tact_name[     2]; // Terminal action names found in the grammar.
         static const uchar  head_numb[   618]; // Head symbol number for a production.
         static const ushort f_tail   [   619]; // First tail in a production.
         static const short  tail     [  1265]; // Tail symbol number.
         static const char   arga     [   280]; // Arguments for terminal actions.

         private:
         static const uchar  Bm[   785]       ; // Boolean matrix.
         static const ushort Br[   635]       ; // Boolean matrix row.
         static const uchar  Bc[   280]       ; // Boolean matrix column.
         static const uchar Bf[   280]       ; // Boolean matrix filter/mask.
         static const short  Tm[  1996]       ; // Terminal transition matrix.
         static const ushort Tr[   635]       ; // Terminal transition matrix row.
         static const uchar  Tc[   280]       ; // Terminal transition matrix column.
         static const short  Nm[  1094]       ; // Nonterminal transition matrix.
         static const ushort Nr[   635]       ; // Nonterminal transition matrix row.
         static const uchar  Nc[   618]       ; // Nonterminal transition matrix column.
         static const ushort Rm[    13]       ; // Reduction matrix.
         static const short  Rr[   635]       ; // Reduction matrix row.
         static const uchar  Rc[   280]       ; // Reduction matrix column.
         static const char   PL[   618]       ; // Production length minus one.

         static const char   tact_numb[   280]; // Terminal action numbers.

         static void   (*init_func[    2]) ()       ; // Init action function pointers.
         static int    (*tact_func[    2]) (int& t) ; // Terminal action function pointers.
      };

//
////////////////////////////////////////////////////////////////////////////////


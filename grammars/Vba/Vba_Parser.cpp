#include "lrstar_basic_defs.h"
#include "lrstar_parser_tables.h"
#include "Vba_LexerTables_typedef.h"
#include "Vba_ParserTables_typedef.h"
#include "Vba_Parser.h"
#include "Vba_Actions.h"

template<>
const int Vba_parser_tables_t::n_term_symb = 139;

template<>
const int Vba_parser_tables_t::n_head_symb = 181;

template<>
const int Vba_parser_tables_t::n_tact_name = 2;

template<>
const int Vba_parser_tables_t::n_node_name = 81;

template<>
const int Vba_parser_tables_t::n_head_numb = 405;

template<>
const int Vba_parser_tables_t::n_f_tail = 406;

template<>
const int Vba_parser_tables_t::n_tail = 830;

template<>
const int Vba_parser_tables_t::n_arga = 139;

template<>
const int Vba_parser_tables_t::n_argx = 405;

template<>
const int Vba_parser_tables_t::n_argy = 405;

template<>
const int Vba_parser_tables_t::n_Bm = 892;

template<>
const int Vba_parser_tables_t::n_Br = 453;

template<>
const int Vba_parser_tables_t::n_Bc = 139;

template<>
const int Vba_parser_tables_t::n_Bf = 139;

template<>
const int Vba_parser_tables_t::n_Tm = 1439;

template<>
const int Vba_parser_tables_t::n_Tr = 453;

template<>
const int Vba_parser_tables_t::n_Tc = 139;

template<>
const int Vba_parser_tables_t::n_Nm = 4121;

template<>
const int Vba_parser_tables_t::n_Nr = 453;

template<>
const int Vba_parser_tables_t::n_Nc = 405;

template<>
const int Vba_parser_tables_t::n_Rm = 265;

template<>
const int Vba_parser_tables_t::n_Rr = 453;

template<>
const int Vba_parser_tables_t::n_Rc = 139;

template<>
const int Vba_parser_tables_t::n_PL = 405;

template<>
const int Vba_parser_tables_t::n_nd_fterm = 0;

template<>
const int Vba_parser_tables_t::n_nd_term = 0;

template<>
const int Vba_parser_tables_t::n_nd_faction = 0;

template<>
const int Vba_parser_tables_t::n_nd_action = 0;

template<>
const int Vba_parser_tables_t::n_tact_numb = 139;

template<>
const int Vba_parser_tables_t::n_node_numb = 405;

template<>
const int Vba_parser_tables_t::n_nact_numb = 405;

template<>
const int Vba_parser_tables_t::n_reverse = 0;

template<>
const int Vba_parser_tables_t::n_terms = 139; // Number of terminals.

template<>
const int Vba_parser_tables_t::n_heads = 181; // Number of nonterminals.

template<>
const int Vba_parser_tables_t::n_prods = 405; // Number of productions.

template<>
const int Vba_parser_tables_t::n_states = 453; // Number of states.

template<>
const int Vba_parser_tables_t::accept_state = 452; // Accept state.

template<>
const int Vba_parser_tables_t::n_termactns = 2; // Number of terminal actions.

template<>
const int Vba_parser_tables_t::n_nodenames = 81; // Number of node names.

template<>
const int Vba_parser_tables_t::n_nodeactns = 81; // Number of node actions.

template<>
const int Vba_parser_tables_t::eof_symb = 1; // <eof> symbol number.

template<>
const int Vba_parser_tables_t::err_used = 1; // <error> used in grammar?


// Terminal symbols of the grammar.
static const char *term_symb_[139] = {
   "<error>",
   "<eof>",
   "<ident0>",
   "<ident>",
   "<integer>",
   "<hex>",
   "<real>",
   "<string>",
   "\'OR\'",
   "\'AND\'",
   "\'=\'",
   "\'<>\'",
   "\'<\'",
   "\'>\'",
   "\'<=\'",
   "\'>=\'",
   "\'+\'",
   "\'-\'",
   "\'&\'",
   "\'MOD\'",
   "\'*\'",
   "\'/\'",
   "\'^\'",
   "<eol>",
   "\':\'",
   "{LabelName}",
   "{Qualifier}",
   "\'PUBLIC\'",
   "\'PRIVATE\'",
   "\'GLOBAL\'",
   "\'BEGIN\'",
   "\'DIALOG\'",
   "\',\'",
   "\'END\'",
   "\'OPTIONGROUP\'",
   "\'OKBUTTON\'",
   "\'CANCELBUTTON\'",
   "\'GROUPBOX\'",
   "\'PUSHBUTTON\'",
   "\'TEXT\'",
   "\'CHECKBOX\'",
   "\'TEXTBOX\'",
   "\'COMBOBOX\'",
   "{ArrayName}",
   "\'DROPLISTBOX\'",
   "\'LISTBOX\'",
   "\'OPTIONBUTTON\'",
   "\'.\'",
   "\'CALL\'",
   "\'(\'",
   "\')\'",
   "\':=\'",
   "{Ident}",
   "{keyword}",
   "\'CONST\'",
   "{TypedConstName}",
   "\'CLOSE\'",
   "\'#\'",
   "\'DECLARE\'",
   "\'SUB\'",
   "\'LIB\'",
   "\'APX\'",
   "\'ALIAS\'",
   "\'FUNCTION\'",
   "\'DIM\'",
   "\'DCL\'",
   "\'AS\'",
   "\'OBJECT\'",
   "\'INTEGER\'",
   "\'LONG\'",
   "\'SINGLE\'",
   "\'DOUBLE\'",
   "\'STRING\'",
   "\'BOOLEAN\'",
   "\'VARIANT\'",
   "{TypeName}",
   "{DlgTypeName}",
   "\'TO\'",
   "\'DO\'",
   "\'LOOP\'",
   "\'UNTIL\'",
   "\'WHILE\'",
   "\'EXIT\'",
   "\'FOR\'",
   "\'STEP\'",
   "{Iterator}",
   "\'EACH\'",
   "\'IN\'",
   "\'NEXT\'",
   "\'BYREF\'",
   "\'BYVAL\'",
   "{CurrFuncName}",
   "\'GOTO\'",
   "\'GOSUB\'",
   "\'IF\'",
   "\'THEN\'",
   "\'ELSE\'",
   "\'ELSEIF\'",
   "\'ENDIF\'",
   "\'LET\'",
   "\'LINE\'",
   "\'INPUT\'",
   "\'NAME\'",
   "\'ON\'",
   "\'ERROR\'",
   "\'RESUME\'",
   "\'OPEN\'",
   "\'OUTPUT\'",
   "\'APPEND\'",
   "\'OPTION\'",
   "\'BASE\'",
   "\'EXPLICIT\'",
   "\'PRINT\'",
   "\'REM\'",
   "\'RETURN\'",
   "\'SEEK\'",
   "\'SELECT\'",
   "\'CASE\'",
   "\'SET\'",
   "\'NOTHING\'",
   "\'STATIC\'",
   "\'STOP\'",
   "{CurrSubName}",
   "\'TYPE\'",
   "\'WEND\'",
   "\'WITH\'",
   "{ObjectName}",
   "\'WRITE\'",
   "\'NOT\'",
   "<keyword>",
   "{Member}",
   "{ConstName}",
   "{SubName}",
   "\';\'",
   "{AppName}",
   "{AliasName}",
   "{FuncName}",
   "{DLLSubName}",
   "{DLLFuncName}",
};

template<>
const char * const *Vba_parser_tables_t::term_symb = &term_symb_[0];

// Nonterminal symbols of the grammar.
static const char *head_symb_[181] = {
   "ScriptFile",
   "GlobalStmtEOL",
   "StmtEOL",
   "Stmt",
   "Label",
   "NewLabelName",
   "GlobalStmt",
   "Q",
   "P",
   "G",
   "ComplexStmt",
   "SimpleStmt",
   "BeginDlgStmt",
   "DialogThing",
   "Area",
   "OptionButton",
   "DlgIdent",
   "CallStmt",
   "MethodParamList",
   "ParamList",
   "NamedParamList",
   "Param",
   "ArrayNameParam",
   "NamedParam",
   "ParamName",
   "ConstStmt",
   "ConstPrimary",
   "CloseStmt",
   "DeclareStmt",
   "LibName",
   "ArgumentList",
   "Arg",
   "AsArray",
   "DialogStmt",
   "DimStmt",
   "VarAsTypeStmt",
   "VarAsType",
   "AsType",
   "AsObject",
   "PrimType",
   "ExtType",
   "Subscripts",
   "Bounds",
   "StrSize",
   "DoStmt",
   "ExitStmt",
   "ExitType",
   "ForStmt",
   "StartVal",
   "EndVal",
   "StepVal",
   "Iterator",
   "ForEachStmt",
   "NextStmt",
   "FuncStmt",
   "CurrFuncName",
   "VList",
   "FuncVarList",
   "ByRefOrVal",
   "FuncVarAsType",
   "FuncVar",
   "EndFunc",
   "GotoStmt",
   "LabelName",
   "GoSubStmt",
   "IfStmtSimple",
   "IfStmtComplex",
   "Then",
   "ElseIfExp",
   "Else",
   "ElseIf",
   "EndIf",
   "LetStmt",
   "LineInputStmt",
   "NameStmt",
   "OnErrorStmt",
   "OpenStmt",
   "InOutApp",
   "OptionStmt",
   "PrintStmt",
   "RemStmt",
   "ResumeStmt",
   "ReturnStmt",
   "SeekStmt",
   "SelectStmt",
   "CaseExp",
   "CaseStmt",
   "CaseElse",
   "EndSelect",
   "SetStmt",
   "StaticStmt",
   "StopStmt",
   "SubStmt",
   "CurrSubName",
   "EndSub",
   "TypeStmt",
   "TypeElemList",
   "MemberAsType",
   "EndType",
   "WhileStmt",
   "EndWhile",
   "WithStmt",
   "WithObject",
   "EndWith",
   "WriteStmt",
   "Exp",
   "RValue",
   "LValue",
   "ArrayRef",
   "SubList",
   "DlgMember",
   "Dlg",
   "UserType",
   "UserTypeDot",
   "GetProp",
   "Object",
   "ObjectDotMember",
   "ObjectDot",
   "Member",
   "NumConst",
   "Constant",
   "StrConst",
   "StrFunc",
   "AnyName",
   "TypedIdent",
   "ArrayName",
   "SubName",
   "TypeName",
   "AppName",
   "AliasName",
   "FuncName",
   "DlgTypeName",
   "ConstName",
   "DLLSubName",
   "DLLFuncName",
   "cs",
   "Comma",
   "GlobalStmtEOL*",
   "<eol>+",
   "{Qualifier}?",
   "(PUBLIC | PRIVATE)?",
   "(GLOBAL | PUBLIC | PRIVATE)?",
   "(',' DlgIdent)?",
   "DialogThing*",
   "OptionButton+",
   "MethodParamList?",
   "('(' MethodParamList? ')')?",
   "ParamList?",
   "('(' ParamList? ')')?",
   "AsType?",
   "'#'?",
   "('#'? Exp)",
   "('#'? Exp)/Comma*",
   "(LIB LibName | APX AppName)",
   "(ALIAS AliasName)?",
   "ArgumentList?",
   "Arg/Comma*",
   "ByRefOrVal?",
   "AsArray?",
   "VarAsType/Comma+",
   "('*' StrSize)?",
   "Bounds/','*",
   "(TO NumConst)?",
   "StmtEOL+",
   "(STEP StepVal)?",
   "VList?",
   "FuncVarList?",
   "(ByRefOrVal? FuncVarAsType)",
   "(ByRefOrVal? FuncVarAsType)/Comma+",
   "ElseIfExp+",
   "(FOR InOutApp)?",
   "Exp/cs+",
   "<error>+",
   "CaseStmt+",
   "StmtEOL*",
   "MemberAsType?",
   "(MemberAsType? <eol>)",
   "(MemberAsType? <eol>)+",
   "Exp/Comma+",
   "Exp/','+",
   "(<ident> | <keyword> | {Member})",
};

template<>
const char * const *Vba_parser_tables_t::head_symb = &head_symb_[0];

// Terninal action names found in the grammar ...
static const char *tact_name_[2] = {
   "error",
   "lookup",
};

template<>
const char * const *Vba_parser_tables_t::tact_name = &tact_name_[0];

// Node names found in the grammar.
static const char * node_name_[81] = {
   "label,"   "RemStmt,"   "DimStmt,"   "OptionStmt,"   "ConstStmt,"   "DeclareStmt,"   "VarStmt,"   "TypeStmt,"   "SubDef,"   "FuncDef,"   "BeginDlgStmt,"   "DoStmt,"   "ForStmt,"   "ForEachStmt,"   "IfStmtComplex,"   "SelectStmt,"   "WhileStmt,"   "WithStmt,"   "CloseStmt,"   "DialogStmt,"   "ExitStmt,"   "GotoStmt,"   "GoSubStmt,"   "IfStmtSimple,"   "LetStmt,"   "LineInputStmt,"   "NameStmt,"   "OnErrorStmt,"   "OpenStmt,"   "PrintStmt,"   "ResumeStmt,"   "WriteStmt,"   "ReturnStmt,"   "SeekStmt,"   "SetStmt,"   "StaticStmt,"   "StopStmt,"   "CallObj,"   "CallSub,"   "param,"   "array,"   "paramname,"   "var,"   "type,"   "subscripts,"   "size,"   "start,"   "end,"   "step,"   "ident,"   "next,"   "endfunc,"   "goto,"   "gosub,"   "endsub,"   "add,"   "sub,"   "mul,"   "div,"   "pow,"   "mod,"   "concat,"   "is_eq,"   "is_ne,"   "is_lt,"   "is_gt,"   "is_le,"   "is_ge,"   "and,"   "or,"   "object,"   "name,"   "member,"   "constant,"   "sub_name,"   "func_name,"   "const_name,"   "array_name,"   "type_name,"   "object_name,"   "string,"
};

template<>
const char * const *Vba_parser_tables_t::node_name = &node_name_[0];

// Head symbol numbers for the productions.
static const uint8 head_numb_[405] = {
       0,     1,     1,     2,     2,     2,     3,     3,     4,     4, 
       5,     6,     6,     6,     6,     6,     6,     6,     6,     6, 
       7,     8,     9,    10,    10,    10,    10,    10,    10,    10, 
      10,    11,    11,    11,    11,    11,    11,    11,    11,    11, 
      11,    11,    11,    11,    11,    11,    11,    11,    11,    11, 
      11,    11,    11,    11,    12,    13,    13,    13,    13,    13, 
      13,    13,    13,    13,    13,    13,    14,    15,    16,    17, 
      17,    17,    17,    18,    18,    19,    19,    20,    20,    21, 
      21,    22,    23,    24,    24,    25,    25,    26,    26,    27, 
      28,    28,    29,    30,    31,    31,    32,    33,    34,    34, 
      35,    35,    36,    36,    36,    36,    36,    37,    37,    37, 
      38,    38,    39,    39,    39,    39,    39,    39,    39,    40, 
      40,    40,    41,    42,    43,    44,    44,    44,    44,    44, 
      45,    46,    46,    46,    46,    47,    48,    49,    50,    50, 
      51,    51,    51,    52,    53,    53,    54,    55,    56,    57, 
      58,    58,    59,    60,    60,    60,    61,    61,    62,    63, 
      63,    64,    65,    65,    66,    66,    66,    67,    67,    67, 
      68,    69,    70,    70,    71,    71,    72,    72,    72,    73, 
      74,    75,    75,    76,    77,    77,    77,    78,    78,    79, 
      79,    80,    80,    81,    81,    82,    83,    84,    84,    84, 
      84,    85,    86,    87,    88,    89,    89,    89,    90,    91, 
      92,    93,    94,    94,    95,    96,    97,    98,    99,   100, 
     100,   101,   102,   102,   102,   103,   104,   105,   105,   105, 
     105,   105,   105,   105,   105,   105,   105,   105,   105,   105, 
     105,   105,   105,   106,   106,   106,   106,   106,   106,   106, 
     106,   106,   106,   106,   106,   106,   106,   106,   107,   107, 
     107,   107,   107,   108,   109,   110,   111,   112,   113,   113, 
     114,   115,   116,   116,   116,   116,   117,   118,   119,   119, 
     119,   119,   119,   120,   120,   120,   120,   121,   122,   123, 
     123,   123,   123,   123,   123,   124,   125,   126,   126,   127, 
     128,   129,   130,   131,   132,   133,   134,   135,   135,   135, 
     135,   136,   136,   137,   137,   138,   138,   139,   139,   140, 
     140,   140,   141,   141,   141,   141,   142,   142,   143,   143, 
     144,   144,   145,   145,   146,   146,   147,   147,   148,   148, 
     149,   149,   150,   150,   151,   152,   152,   152,   153,   153, 
     154,   154,   155,   155,   156,   156,   156,   157,   157,   158, 
     158,   159,   159,   160,   160,   161,   161,   161,   162,   162, 
     163,   163,   164,   164,   165,   165,   166,   166,   167,   168, 
     168,   169,   169,   170,   170,   171,   171,   172,   172,   173, 
     173,   174,   174,   175,   175,   176,   177,   177,   178,   178, 
     179,   179,   180,   180,   180, 
};

template<>
const uint8 *Vba_parser_tables_t::head_numb = &head_numb_[0];

// First tail symbol index into the tail list ...
static const uint16 f_tail_[406] = {
       0,     2,     3,     5,     6,     8,    11,    12,    13,    15, 
      18,    19,    20,    21,    22,    24,    26,    28,    30,    33, 
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45, 
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55, 
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65, 
      66,    67,    68,    69,    70,    81,    85,    89,    93,    99, 
     105,   111,   118,   123,   130,   137,   144,   151,   157,   159, 
     162,   166,   169,   173,   174,   175,   176,   179,   180,   183, 
     184,   185,   186,   189,   190,   191,   196,   200,   201,   202, 
     204,   210,   217,   218,   221,   225,   228,   230,   232,   234, 
     236,   237,   239,   240,   242,   244,   247,   248,   249,   251, 
     253,   254,   256,   257,   258,   259,   260,   262,   263,   264, 
     265,   266,   267,   270,   272,   273,   277,   283,   289,   295, 
     301,   303,   304,   305,   306,   307,   317,   318,   319,   319, 
     320,   321,   322,   323,   331,   332,   334,   340,   341,   344, 
     345,   346,   347,   349,   350,   351,   354,   356,   358,   360, 
     361,   362,   364,   368,   374,   378,   383,   389,   391,   394, 
     398,   401,   404,   405,   407,   409,   410,   414,   417,   420, 
     426,   430,   434,   438,   444,   445,   446,   447,   450,   452, 
     454,   459,   460,   462,   464,   466,   467,   472,   475,   479, 
     483,   488,   491,   495,   499,   501,   505,   509,   512,   514, 
     515,   520,   521,   523,   525,   529,   530,   532,   534,   539, 
     540,   542,   547,   548,   549,   550,   552,   555,   556,   559, 
     562,   565,   568,   571,   574,   577,   580,   583,   586,   589, 
     592,   595,   598,   601,   602,   604,   606,   608,   609,   610, 
     611,   612,   613,   617,   621,   625,   629,   636,   639,   640, 
     641,   642,   643,   644,   648,   649,   652,   653,   655,   657, 
     660,   664,   665,   667,   669,   672,   675,   677,   678,   679, 
     682,   685,   688,   691,   692,   693,   694,   695,   696,   697, 
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707, 
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717, 
     719,   721,   722,   724,   724,   726,   727,   729,   729,   730, 
     730,   731,   732,   732,   733,   734,   735,   735,   737,   737, 
     739,   740,   742,   742,   743,   743,   746,   746,   747,   747, 
     750,   750,   751,   751,   752,   754,   754,   755,   758,   760, 
     762,   762,   764,   764,   765,   765,   766,   769,   769,   770, 
     770,   771,   772,   775,   775,   777,   777,   778,   781,   781, 
     783,   784,   786,   786,   788,   788,   789,   789,   790,   792, 
     793,   796,   797,   799,   799,   801,   802,   805,   806,   808, 
     809,   811,   811,   813,   813,   814,   816,   817,   819,   820, 
     823,   824,   827,   828,   829,   830, 
};

template<>
const uint16 *Vba_parser_tables_t::f_tail = &f_tail_[0];

// Tail symbol numbers ...
static const int16 tail_[830] = {
    -137,     1,    23,    -6,    23,    23,    -3,    23,    -4,    -3, 
      23,   -11,   -10,    -5,    24,    -5,    24,  -138,     3,   -80, 
     -34,   -78,    -9,   -25,    -8,   -28,    -8,   -35,    -8,   -95, 
      -8,    -7,   -92,    -8,    -7,   -54,  -139,  -140,  -141,   -12, 
     -44,   -47,   -52,   -66,   -84,   -99,  -101,   -17,   -27,   -25, 
     -33,   -34,   -45,   -62,   -64,   -65,   -72,   -73,   -74,   -75, 
     -76,   -79,   -81,  -104,   -80,   -82,   -83,   -89,   -90,   -91, 
      30,    31,  -131,   -14,    32,  -121,  -142,  -138,  -143,    33, 
      31,    34,   -16,  -138,  -144,    35,   -14,  -142,  -138,    36, 
     -14,  -142,  -138,    37,   -14,    32,  -121,  -142,  -138,    38, 
     -14,    32,  -121,  -142,  -138,    39,   -14,    32,  -121,  -142, 
    -138,    40,   -14,    32,  -121,    32,   -16,  -138,    41,   -14, 
      32,   -16,  -138,    42,   -14,    32,    43,    32,   -16,  -138, 
      44,   -14,    32,    43,    32,   -16,  -138,    45,   -14,    32, 
      43,    32,   -16,  -138,  -120,    32,  -120,    32,  -120,    32, 
    -120,    46,   -14,    32,  -121,  -142,  -138,    47,     3,    48, 
    -115,  -146,  -115,    49,  -145,    50,    48,  -126,  -148,  -126, 
      49,  -147,    50,   -19,   -20,   -21,   -19,  -136,   -21,   -23, 
     -20,  -136,   -23,  -105,   -22,    43,   -24,    51,  -105,    52, 
      53,    54,  -132,  -149,    10,   -26,    54,    55,    10,   -26, 
    -121,  -119,    56,  -152,    58,    59,  -133,  -153,  -154,  -155, 
      58,    63,  -134,  -153,  -154,  -155,  -149,     7,    49,  -156, 
      50,  -157,     3,  -158,  -149,  -157,     2,  -158,    49,    50, 
      31,  -111,    64,  -159,    65,  -159,   -36,   -36,   -35,  -124, 
       3,   -37,     3,   -38,  -125,   -41,  -149,  -123,   -39,    66, 
     -39,    66,   -40,    67,    66,    67,    68,    69,    70,    71, 
      72,  -160,    73,    74,    75,    76,    52,    49,  -161,    50, 
    -119,  -162,     4,    78,    23,  -163,    79,    78,    23,  -163, 
      79,    80,  -105,    78,    23,  -163,    79,    81,  -105,    78, 
      80,  -105,    23,  -163,    79,    78,    81,  -105,    23,  -163, 
      79,    82,   -46,    78,    83,    63,    59,    83,   -51,    10, 
     -48,    77,   -49,  -164,    23,  -163,   -53,  -105,  -105,  -105, 
       3,    52,    85,    83,    86,  -105,    87,  -105,    23,  -163, 
     -53,    88,    88,    85,    63,   -55,  -165,  -149,  -163,   -61, 
       3,    49,  -166,    50,  -168,    89,    90,   -60,  -149,     3, 
    -123,    43,    49,    50,    33,    63,    33,    91,    92,   -63, 
       3,    25,    93,  -126,    94,  -105,    95,   -11,    94,  -105, 
      95,   -11,    96,   -11,    94,  -105,   -67,   -71,    94,  -105, 
     -67,   -69,   -71,    94,  -105,   -67,  -169,   -69,   -71,    23, 
    -163,    95,    23,  -163,    23,    95,    23,  -163,   -70,  -105, 
     -67,    96,    23,  -163,    97,    96,    94,    33,    94,    98, 
      99,  -107,    10,  -105,  -107,    10,  -105,  -130,    10,  -105, 
     100,   101,    57,  -105,  -136,  -105,   102,  -105,    66,  -105, 
     103,   104,    92,   -63,   103,   104,   105,    88,   106,  -105, 
    -170,    66,  -150,  -105,   101,   107,   108,   109,   110,     4, 
     109,   111,   112,  -171,   112,    57,  -105,  -136,  -171,   113, 
     113,  -172,   105,    88,   105,   -63,   114,   115,  -150,  -105, 
    -136,  -105,   116,   -85,   -88,   116,   -85,   -87,   -88,   116, 
     -85,  -173,   -88,   116,   -85,  -173,   -87,   -88,   117,  -105, 
    -138,   117,  -105,    23,  -174,   117,    96,    23,  -174,    33, 
     116,   118,  -115,    10,  -106,   118,  -115,    10,   119,  -115, 
      10,  -106,   120,  -159,   121,    59,   -93,  -165,  -163,   -94, 
       3,    33,    59,    33,   122,   123,  -127,   -96,   -98,  -177, 
    -118,   -37,    33,   123,    81,  -105,    23,  -163,  -100,   124, 
      33,    81,   125,  -102,    23,  -163,  -103,   126,  -115,    75, 
      33,   125,   127,    57,  -178,  -106,  -105,    16,  -105,  -105, 
      17,  -105,  -105,    20,  -105,  -105,    21,  -105,  -105,    22, 
    -105,  -105,    19,  -105,  -105,    18,  -105,  -105,    10,  -105, 
    -105,    11,  -105,  -105,    12,  -105,  -105,    13,  -105,  -105, 
      14,  -105,  -105,    15,  -105,  -105,     9,  -105,  -105,     8, 
    -105,  -107,   128,  -106,    17,  -106,    16,  -106,     7,  -120, 
    -115,  -114,    75,   115,    49,  -105,    50,    31,    49,  -111, 
      50,  -130,    49,  -147,    50,  -122,    49,  -147,    50,   101, 
      49,  -105,  -136,  -150,  -105,    50,    49,  -105,    50,    52, 
      85,  -108,  -110,  -112,    43,    49,  -109,    50,  -179,  -111, 
      47,  -118,    76,  -113,  -118,    75,    47,  -113,  -118,    47, 
    -115,    49,  -145,    50,  -116,    47,  -118,  -117,  -118,  -114, 
      47,  -118,  -116,    47,  -118,   126,    47,  -180,  -120,  -119, 
      16,  -119,  -119,    17,  -119,  -119,    20,  -119,  -119,    21, 
    -119,     5,     6,     4,   131,     7,    72,   132,  -130,   131, 
      43,    75,   126,     2,     3,     3,   132,     3,     3,     7, 
       3,     3,     3,     3,     3,    32,   133,    32,    23,   133, 
      23,    32,    32,    23,  -137,    -1,    23,  -138,    23,    26, 
      27,    28,    29,    27,    28,    32,   -16,  -143,   -13,   -15, 
    -144,   -15,   -18,    49,  -145,    50,   -19,    49,  -147,    50, 
     -37,    57,  -150,  -105,  -151,  -152,  -136,  -151,    60,   -29, 
      61,  -128,    62,  -129,   -30,   -31,  -156,  -136,   -31,   -58, 
     -32,   -36,  -159,  -136,   -36,    20,   -43,   -42,  -161,    32, 
     -42,    77,  -119,    -2,  -163,    -2,    84,   -50,   -56,   -57, 
    -157,   -59,  -167,  -168,  -136,  -167,   -68,  -169,   -68,    83, 
     -77,  -105,  -171,  -135,  -105,     0,  -172,     0,   -86,  -173, 
     -86,  -174,    -2,   -97,  -175,    23,  -176,  -177,  -176,  -105, 
    -178,  -136,  -105,  -105,  -179,    32,  -105,     3,   129,   130, 
};

template<>
const int16 *Vba_parser_tables_t::tail = &tail_[0];

// Arguments for token actions ...
static const int8 arga_[139] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
};

template<>
const int8 *Vba_parser_tables_t::arga = &arga_[0];

// First arguments for productions ...
static const int8 argx_[405] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
       0,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,     0,    -1,     0,     0,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,     0,     0,    -1,    -1,    -1,    -1,    -1, 
       0,     1,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    -1,    -1,     0,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
       0,     0,     0,    -1,    -1,     1,    -1,     0,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,     0,     1,    -1,     0, 
       0,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,     0,     0,    -1,    -1, 
      -1,    -1,    -1,     0,     0,     0,     0,    -1,    -1,     0, 
       0,     0,     0,     0,     0,    -1,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1, 
};

template<>
const int8 *Vba_parser_tables_t::argx = &argx_[0];

// Second arguments for productions ...
static const int16 argy_[405] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
       1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,     1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,     1,     1,    -1,     1, 
       1,     1,     1,     1,     1,     1,   138,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1, 
};

template<>
const int16 *Vba_parser_tables_t::argy = &argy_[0];

// Boolean matrix ...
static const uint8 Bm_[892] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     2,     0,     2,     0,     0,     4,     0,     0,     0, 
       0,     0,     2,     0,     0,     0,     0,     0,     0,     0, 
       0,     8,     0,     0,     0,     0,     0,     0,    12,     0, 
      16,     4,     0,   128,     0,     0,     0,    32,    25,     1, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
      12,     0,     0,     4,     0,   128,     0,     0,     0,     0, 
      25,     0,     0,     0,     0,     0,     0,     0,     0,   128, 
       0,     0,     8,     0,     0,     0,    16,     0,     0,     0, 
       0,     0,     0,    64,     0,     0,     0,     0,     0,     0, 
       0,    64,     2,     0,     0,     0,     0,     0,   120,     0, 
       0,     0,     0,     0,     8,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   128,     0,     0,     0,     0,     0, 
       0,     0,     0,    16,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   104,     0,     0,     0,     0,     0, 
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
      48,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       8,     0,    64,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     2,   240,     1,     0,     0,     0,     0,     8, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     4, 
       0,     0,     0,     0,     2,   224,     1,     0,     0,     0, 
       0,   112,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     8,     0,     0,   128,   128,     0,     0,     0,     0, 
       0,     0,     0,   200,     0,     0,     0,     0,     2,     0, 
       0,     0,     0,     1,     0,     0,     0,     0,     0,     0, 
       0,   200,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     8,     0,    98,    52,    10,   132,   101,   193,     0, 
     131,    17,     0,     0,     0,     0,     0,     1,     0,     0, 
       0,     0,     0,    64,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    32,     0,   192,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     8,     0,    98,    53, 
      10,   132,   101,   193,     0,   131,    17,     0,     2,     0, 
      64,     0,     0,     0,     0,     0,     0,     0,     8,     0, 
      96,    52,    10,   132,   101,   193,     0,   131,    17,     0, 
       0,     4,     0,     0,     0,     0,     0,     0,     0,     0, 
       8,     0,     0,    16,     0,     0,     0,     0,     0,     0, 
      17,     0,     0,     0,     0,    32,     0,     0,     0,     0, 
       0,     0,     1,     0,     0,     0,     0,    64,     2,    68, 
       0,     0,     0,     0,     8,     0,     8,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    16,   120,     8,    64, 
      84,     2,   192,     1,     1,    16,     1,    11,     0,     0, 
       0,     4,     2,   128,     1,     1,     0,     0,     0,     0, 
       0,     0,     0,     0,    32,     0,     0,   120,     8,    64, 
      84,    34,   192,     1,     1,    16,     1,    11,     8,     0, 
       8,     0,     0,     0,     0,     8,     0,     0,     0,    16, 
       0,     0,     0,     0,     0,     0,     1,     0,     0,     2, 
       0,     0,     0,    48,     0,     0,     0,     0,     8,     0, 
       0,     0,     2,     0,     0,     3,     0,     0,     0,    16, 
       0,   128,     0,     0,     0,     0,     1,     8,     0,     0, 
       4,     0,   128,     0,     0,     0,     0,    25,     0,     0, 
       0,     0,    64,     0,     0,     0,     0,    16,     0,   120, 
       8,    64,    84,     6,   192,     1,     1,    16,     1,    11, 
     128,   255,     3,     0,     0,     0,     0,     0,     1,     0, 
     128,   255,     1,     0,     0,     8,     0,     0,     0,     0, 
       0,     0,     0,    64,     0,     0,   128,   255,     1,     0, 
       0,     0,    64,     0,     0,     0,   128,     0,     0,     0, 
       0,     0,     0,     0,    32,   128,   255,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,     1,     0,     0,     0, 
       0,     0,     4,   128,   255,     3,     0,     0,     0,     0, 
       0,     0,     0,     0,     1,     0,     0,     0,     0,    14, 
       0,     0,     8,     0,    66,    52,    10,   132,     1,   193, 
       0,     1,    17,     8,     0,    98,    52,    10,   132,   101, 
     193,     1,   131,    17,   128,   255,     1,   128,     0,     0, 
       0,     0,     0,     0,     0,     0,    80,     0,   128,   255, 
     129,     0,     0,     0,     0,     0,     0,     0,     0,   120, 
       8,    64,    84,     2,   192,     1,     1,    16,     9,    11, 
       8,     0,    98,    52,    10,   132,   109,   193,     0,   131, 
      17,   128,   255,     1,     0,     0,     0,     0,     4,     0, 
       0,     0,   120,     8,    64,    84,     2,   192,     1,     1, 
      18,     1,    11,     0,     0,     0,     0,     0,     2,     0, 
      32,     0,     0,     0,    12,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     6,     0,     0,     0,     0, 
       0,     0,     1,     0,     0,     0,     0,     8,     0,     0, 
       2,     0,     0,     0,     0,   128,     0,     0,     0,     0, 
       0,     0,     0,     0,     2,     0,     0,   224,     1,     0, 
       0,     0,     0,     0,     0,     0,     0,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,   192,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,   248,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,   254,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,   255,     1,     0,     0, 
       0,     0,     0,     0,     0,     0,     2,     0,     0,     0, 
       0,     8,     0,    98,    53,    10,   132,   101,   193,     0, 
     195,    17,     8,     0,    64,    52,    10,   132,     1,   193, 
       0,     1,    17,   128,   255,     1,     0,     0,     0,     0, 
       0,     1,     0,     0,     0,     0,     0,     0,    32,     0, 
       0,     0,     0,     8,     0,    98,    52,    10,   132,   101, 
     201,     0,   131,    17,     0,     0,     0,     3,     0,     0, 
       0,     0,     0,     0,     0,     2,     8,     0,     0,     0, 
       0,     0,     0,     0,     4,     0,     0,     0,     0,     0, 
       0,     0, 
};

template<>
const uint8 *Vba_parser_tables_t::Bm = &Bm_[0];

// Boolean matrix row (for state)...
static const uint16 Br_[453] = {
       0,    11,    20,    27,    38,    49,    60,    60,    71,     0, 
       0,    82,    60,    90,    97,    97,   103,   114,    49,   122, 
     122,   133,   139,   149,   139,   160,   114,   114,   114,   114, 
     171,   178,   189,    60,    20,   149,   200,   211,   222,   232, 
      90,    90,   120,   120,   133,   240,   189,    20,   139,   211, 
     250,   160,   160,   160,   160,   160,   160,   261,   126,   139, 
     272,   283,   114,   272,   285,   250,   295,   295,     0,     0, 
     306,    20,   317,   130,   189,   130,    90,   149,   130,   189, 
     149,   328,   339,   350,   189,   130,     0,   361,   366,   373, 
     384,   386,   397,   408,    90,   130,   125,   397,   416,   397, 
     427,   438,   361,   361,   446,    60,   281,   457,   468,   190, 
     397,   476,   121,   122,   487,   261,    90,   283,    90,   498, 
     509,   397,   189,   189,   397,   397,   189,   130,   397,    20, 
       0,    20,    90,    90,   122,   397,   520,    90,   130,    90, 
      90,   130,   397,   397,   397,    90,    90,    90,   397,   149, 
     397,   361,   530,   536,   546,   554,   565,   397,   397,   397, 
     317,   122,   114,   261,   397,   397,   149,   397,   573,   397, 
     583,    20,    90,   130,   126,   139,     0,    90,   306,   126, 
     139,   121,   122,   565,   122,   239,     0,    90,   121,   122, 
     565,   565,    20,   509,   397,   361,   565,   591,   602,   613, 
     397,   397,   397,   397,   397,   397,   397,   397,   397,   397, 
     397,   397,   397,   397,   397,   509,   397,   397,   397,   366, 
     397,   624,   397,   121,   122,   565,   397,   397,   384,    24, 
      26,   628,   397,    20,    20,   638,   122,   565,   638,   649, 
     160,   660,   583,   583,   397,   671,   240,   573,     2,   682, 
     583,   261,   261,   121,   693,   222,   704,     0,   397,   711, 
     397,   121,   121,   719,   707,   397,   117,   728,   736,   397, 
     261,   261,    20,   746,   746,   755,   755,   755,   765,   746, 
     775,   775,   775,   775,   775,   775,   785,   795,   121,   121, 
     121,   624,   121,   638,   565,   397,   638,   565,   361,   565, 
     397,   397,   397,   122,   122,   154,   261,   261,   800,   565, 
     397,   240,   583,    20,    20,   811,   306,   126,    90,    90, 
     565,     0,   719,   520,   261,   822,   833,   261,   261,   361, 
     565,   397,   397,   554,   565,   565,   283,   160,   397,   397, 
     660,   660,   397,   583,     0,     0,   842,   115,   139,   121, 
      20,   261,   822,   261,   397,   565,   565,   122,   122,   565, 
     565,   118,   565,   261,   261,   261,   624,    20,   130,   160, 
      20,   397,   853,    20,   114,   122,   261,   565,   569,   864, 
     160,   853,   281,   130,   160,   160,   160,   160,   160,   160, 
     160,   160,   160,   160,    20,   122,   122,   122,   122,   122, 
     122,   122,   122,   122,   122,   873,    20,    20,   283,   283, 
     283,   283,   130,   881,   881,   881,   111,   160,    20,    20, 
     122,   122,   122,   122,    20,   122,   122,   122,   122,    20, 
      20,    20,   130,    20,   130,   130,   130,   283,    20,    20, 
      20,    20,    20,    20,    20,   122,    20,    20,    20,    20, 
      20,    20,     0, 
      };

template<>
const uint16 *Vba_parser_tables_t::Br = &Br_[0];

// Boolean matrix column (displacement) ...
static const uint8 Bc_[139] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     1, 
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
       1,     1,     2,     2,     2,     2,     2,     0,     0,     0, 
       2,     2,     2,     3,     3,     3,     3,     3,     3,     3, 
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
       3,     4,     4,     4,     4,     4,     3,     4,     2,     4, 
       4,     4,     5,     5,     5,     5,     5,     5,     5,     5, 
       5,     5,     5,     5,     5,     5,     6,     6,     6,     6, 
       6,     6,     3,     6,     6,     7,     7,     7,     7,     7, 
       7,     7,     7,     3,     7,     8,     8,     8,     8,     3, 
       3,     8,     3,     3,     8,     7,     3,     8,     8,     0, 
       8,     8,     3,     5,     3,     9,     9,     9,     3,     9, 
       3,     3,     9,     9,     9,     9,    10,     3,    10,    10, 
      10,    10,    10,    10,    10,    10,    10,    10,    10, 
      };

template<>
const uint8 *Vba_parser_tables_t::Bc = &Bc_[0];

// Boolean matrix filter/mask value ...
static const uint8 Bf_[139] = {
       1,     2,     4,     8,    16,    32,    32,    64,   128,     1, 
       2,     4,     4,     4,     4,     4,     8,     8,    16,    32, 
      64,   128,     1,     2,     4,     8,    16,     2,     2,     2, 
      32,    64,   128,     1,     2,     2,     2,     2,     2,     2, 
       2,     2,     2,     4,     2,     2,     8,    16,    32,    64, 
     128,     1,     2,     4,     8,    16,    32,    32,    16,    64, 
     128,   128,     1,     2,     4,     4,     8,    16,    32,    32, 
      32,    32,    64,    32,    32,   128,     1,     2,     4,     8, 
      16,    32,    32,    64,   128,     1,     2,     4,     8,    16, 
      16,    32,    64,    32,   128,     1,     2,     4,     8,    32, 
      32,    16,    32,    32,    32,    64,    32,    64,    64,     2, 
     128,   128,    32,     4,    32,     1,     2,     4,    32,     8, 
      32,    32,    16,    32,    64,   128,     1,    32,     2,     4, 
       4,     8,    16,    32,    64,    64,    64,    64,    64, 
};

template<>
const uint8 *Vba_parser_tables_t::Bf = &Bf_[0];

// Terminal transition matrix ...
static const int16 Tm_[1439] = {
       0,     0,     0,     0,  -268,   150,  -263,     0,     0,    84, 
     218,  -254,     0,     0,     0,   417,     0,   219,  -255,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,  -269,   194, 
     -93,     0,     0,     0,     0,  -160,     0,  -193,     0,     0, 
      84,   179,  -155,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   165,   128,     0,     0,   437, 
       0,   336,     0,     0,     0,     0,   408,     0,    85,   376, 
     345,  -147,    -4,   409,  -298,   427,  -297,   252,     0,     0, 
     244,     0,     0,  -159,  -316,    34,     0,     0,     0,     0, 
    -403,  -404,   222,     0,   164,  -402,  -315,   337,   206,    85, 
       0,     0,   205,   203,     0,   212,     0,  -305,   163,     0, 
       0,     0,     0,   200,     0,     0,     0,   206,     0,     0, 
       0,   205,   203,   201,   212,     0,     0,     0,     0,     0, 
     214,     0,   200,     0,     0,     0,     0,     0,     0,   204, 
     210,     0,   201,     0,     0,     0,   350,     0,     0,   214, 
       0,   207,     0,     0,     0,     0,     0,     0,   204,   210, 
       0,   213,   208,     0,     0,   211,     0,   363,   209,   202, 
     207,     0,     0,     0,     0,     0,     0,     0,   206,     0, 
     213,   208,   205,   203,   211,   212,   199,   209,   202,     0, 
       0,     0,     0,   200,     0,     0,     0,   206,     0,     0, 
       0,   205,   203,   201,   212,     0,     0,     0,     0,     0, 
     214,     0,   200,     0,     0,     0,     0,   319,     0,   204, 
     210,     0,   201,     0,     0,     0,     0,     0,     0,   214, 
       0,   207,     0,     0,     0,     0,   436,     0,   204,   210, 
       0,   213,   208,     0,     0,   211,   -68,   344,   209,   202, 
     207,     0,     0,     0,     0,   435,     0,     0,     0,     0, 
     213,   208,     0,     0,   211,   318,  -315,   209,   202,   206, 
       0,   349,  -256,   205,   203,     0,   212,     0,     0,     0, 
       0,     0,     0,     0,   200,     0,     0,     0,   206,   374, 
     216,  -339,   205,   203,   201,   212,     0,     0,     0,     0, 
       0,   214,     0,   200,     0,     0,     0,     0,     0,     0, 
     204,   210,     0,   201,     0,     0,     0,   198,     0,     0, 
     214,     0,   207,     0,     0,     0,     0,   415,     0,   204, 
     210,     0,   213,   208,     0,     0,   211,  -303,   307,   209, 
     202,   207,     0,     0,     0,     0,   369,     0,     0,     0, 
       0,   213,   208,     0,     0,   211,  -300,   199,   209,   202, 
     206,     0,   220,  -252,   205,   203,     0,   212,     0,     0, 
       0,     0,     0,     0,     0,   200,     0,     0,     0,  -142, 
     167,     0,     0,     0,     0,   201,    84,   148,     0,     0, 
       0,     0,   214,     0,     0,     0,     0,   141,  -266,     0, 
     144,   204,   210,     0,  -259,  -284,   146,     0,     0,     0, 
     143,     0,     0,   207,     0,     0,  -141,     0,   411,     0, 
     147,     0,     0,   213,   208,     0,     0,   211,  -140,  -310, 
     209,   202,     0,  -288,   145,   387,  -276,   124,   -72,   388, 
     390,  -258,     0,   414,     0,    85,     0,   142,  -285,  -283, 
    -286,     0,  -212,  -302,   328,  -247,     0,   187,     0,     0, 
    -157,     0,     0,     0,  -156,     0,     0,   383,     0,     0, 
       0,     0,     0,     0,     0,     0,   391,   392,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   125,     0, 
       0,  -213,     0,   295,     0,     0,     0,   382,   384,   385, 
       0,     0,   393,  -211,  -395,   386,   389,   426,   206,     0, 
     253,   -96,   205,   203,     0,   212,     0,     0,     0,     0, 
    -293,     0,     0,   200,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   201,     0,     0,     0,     0,     0,     0, 
     214,     0,     0,     0,     0,     0,     0,     0,     0,   204, 
     210,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   207,     0,     0,     0,     0,   412,     0,  -294,     0, 
       0,   213,   208,  -291,  -289,   211,   176,   306,   209,   202, 
     177,    84,   148,     0,     0,   -84,     0,     0,     0,     0, 
       0,     0,   141,  -266,     0,   144,     0,     0,     0,  -259, 
    -284,   146,     0,     0,     0,   143,     0,     0,  -173,     0, 
       0,     0,     0,     0,     0,   147,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,  -288,   145, 
       0,     0,     0,     0,     0,     0,   186,     0,   413,     0, 
      85,     0,   142,  -285,  -283,  -286,     0,     0,  -302,   324, 
    -247,     0,   187,   206,    84,   193,  -257,   205,   203,     0, 
     212,     0,     0,     0,     0,  -224,     0,     0,   200,     0, 
       0,   231,     0,     0,   310,     0,     0,     0,   201,     0, 
       0,     0,   352,     0,     0,   214,   227,     0,     0,     0, 
       0,     0,     0,     0,   204,   210,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   207,     0,     0,     0, 
       0,    34,     0,   173,     0,     0,   213,   208,     0,     0, 
     211,  -306,    -5,   209,   202,    84,   148,  -253,     0,     0, 
       0,     0,   157,     0,     0,     0,   141,  -266,     0,   144, 
       0,     0,     0,  -259,  -284,   146,     0,     0,     0,   143, 
       0,     0,     0,     0,   313,     0,     0,     0,     0,   147, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,  -288,   145,     0,     0,     0,  -206,     0,     0, 
    -258,     0,   410,     0,    85,     0,   142,  -285,  -283,  -286, 
       0,     0,  -302,  -309,  -247,     0,    94,   206,   126,   120, 
     257,   205,   203,     0,     0,   226,     0,     0,     0,    95, 
    -266,  -131,   200,     0,  -134,  -132,  -259,     0,     0,     0, 
       0,     0,   201,     0,     0,     0,  -133,   267,  -172,  -175, 
     298,     0,     0,     0,     0,     0,     0,     0,   204,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     121,     0,     0,  -258,     0,   233,     0,     0,     0,   266, 
    -124,     0,     0,     0,   234,  -299,  -312,  -301,   202,    94, 
      84,     0,     0,     0,     0,    11,     0,    83,    87,     6, 
       7,    95,  -266,     0,     0,     0,    89,     0,  -259,     0, 
      88,     0,     0,     0,     0,    90,    91,   269,     0,     0, 
       0,     0,    93,    96,     0,    97,    98,     0,   101,    99, 
       0,     0,     0,     0,     0,   100,     5,  -195,   103,     0, 
       0,   104,     0,   105,  -209,  -258,     0,   434,     0,    85, 
     102,     0,     0,     0,     0,  -298,     0,   130,   270,    84, 
       0,    94,     0,     0,    11,     0,    83,    87,     6,     7, 
      95,  -266,   107,     0,   110,    89,   108,  -259,   106,    88, 
       0,     0,     0,     0,    90,    91,    92,     0,     0,     0, 
       0,    93,    96,     0,    97,    98,     0,   101,    99,     0, 
       0,     0,     0,     0,   100,     5,  -195,   103,   109,     0, 
     104,     0,   105,  -209,  -258,     0,     0,   111,    85,   102, 
     347,     0,     0,     0,  -298,     0,    86,    -3,    84,     0, 
      94,     0,     0,    11,     0,    83,    87,     6,     7,    95, 
    -266,   107,  -128,   110,    89,   108,  -259,   106,    88,     0, 
       0,     0,     0,    90,    91,    92,     0,     0,     0,     0, 
      93,    96,     0,    97,    98,     0,   101,    99,     0,     0, 
       0,     0,     0,   100,     5,  -195,   103,   109,     0,   104, 
       0,   105,  -209,  -258,     0,   432,   111,    85,   102,   254, 
       0,     0,     0,  -298,     0,    86,    -3,    84,     0,    94, 
       0,     0,    11,     0,    83,    87,     6,     7,    95,  -266, 
     107,  -129,   110,    89,   108,  -259,   106,    88,     0,     0, 
       0,     0,    90,    91,    92,     0,     0,     0,     0,    93, 
      96,     0,    97,    98,     0,   101,    99,     0,     0,     0, 
       0,     0,   100,     5,  -195,   103,   109,     0,   104,     0, 
     105,  -209,  -258,     0,  -219,   111,    85,   102,   346,     0, 
       0,     0,  -298,     0,    86,    -3,     0,     0,    94,   123, 
      58,  -122,     0,    56,     0,    23,   158,     0,     0,     0, 
    -119,  -120,     0,    53,  -220,    28,     0,     0,  -284,   -54, 
       0,     0,     0,    54,     0,     0,     0,    29,   325,     0, 
    -388,    36,  -111,  -184,  -112,  -113,     0,     0,  -114,  -185, 
    -186,     0,     0,     0,  -115,     0,    30,  -117,     0,   249, 
    -118,    49,    52,     0,  -121,  -217,    51,     0,     0,     0, 
     248,  -285,  -283,  -286,     0,     0,  -304,    -2,  -287,    55, 
     425,    84,   215,   321,     0,     0,    11,     0,    83,    87, 
       6,     7,    95,  -266,   107,   305,   110,    89,   108,  -259, 
     106,    88,   378,     0,     0,     0,    90,    91,    92,   272, 
       0,     0,     0,    93,    96,     0,    97,    98,     0,   101, 
      99,     0,     0,     0,     0,     0,   100,     5,  -195,   103, 
     109,     0,   104,   239,   105,  -209,  -258,     0,   368,   111, 
      85,   102,   119,     0,     0,     0,  -298,     0,    86,    -3, 
       0,     0,    94,   206,    84,   217,  -270,   205,   203,    11, 
     212,    83,    87,     6,     7,    95,  -266,   107,   200,   110, 
      89,   108,  -259,   106,    88,     0,     0,     0,   201,    90, 
      91,    92,     0,     0,     0,   214,    93,    96,     0,    97, 
      98,     0,   101,    99,   204,   210,     0,     0,     0,   100, 
       5,  -195,   103,   109,     0,   104,   207,   105,  -209,  -258, 
       0,   380,   111,    85,   102,     0,   213,   208,     0,  -298, 
     211,   130,   251,   209,   202,    94,   417,   122,    25,  -148, 
     260,   -84,    11,     9,  -343,    15,     6,     7,  -293,  -266, 
      61,    10,   339,    26,    62,  -145,  -295,   162,  -182,  -150, 
    -151,  -323,   228,   117,  -174,    27,   267,  -172,  -387,    31, 
    -110,   151,  -112,  -113,   153,   229,  -114,   204,   131,     8, 
      21,  -188,  -115,     5,    30,  -117,  -204,   169,  -118,    37, 
     342,   338,   -83,    17,    34,  -225,  -294,   371,    64,  -187, 
     452,  -291,  -289,  -318,    16,    -1,   -92,    44,  -292, 
};

template<>
const int16 *Vba_parser_tables_t::Tm = &Tm_[0];

// Terminal transition matrix row ...
static const uint16 Tr_[453] = {
    1366,  1366,  1148,  1366,  1366,  1366,  1366,  1366,  1366,  1366, 
    1366,  1148,  1366,  1366,  1366,  1148,  1366,   797,  1148,  1366, 
    1366,  1366,  1148,  1366,  1148,  1148,   435,     3,    39,   653, 
    1366,  1148,    27,  1366,   797,  1148,  1148,  1148,  1148,  1148, 
    1148,  1148,  1366,  1366,   797,  1366,    27,   435,  1148,  1148, 
    1148,  1148,  1148,  1148,  1148,  1148,  1148,  1220,  1366,  1148, 
    1366,  1366,   288,  1366,  1148,  1148,  1148,  1148,  1366,  1366, 
    1220,     3,   797,  1366,    27,  1148,   435,   435,   797,    27, 
       3,  1293,  1366,     8,    27,   435,  1366,  1366,  1366,   797, 
      15,     8,   724,   797,     3,     3,  1366,   724,  1366,   724, 
     724,    15,  1148,  1366,    39,  1366,  1366,    39,   360,  1366, 
     724,   653,  1366,  1366,   508,  1220,    39,   797,    39,   435, 
     580,   724,    27,    27,   385,   724,    27,    27,   724,   653, 
    1366,    27,   653,    27,  1366,   724,   288,  1220,  1148,   288, 
    1293,     3,   724,   724,   724,     8,    15,   360,   724,    39, 
     724,   797,   653,  1366,   653,   797,   653,   724,   724,   724, 
    1220,  1366,   269,  1220,   724,   724,    27,   724,  1148,   724, 
    1293,     8,  1220,   435,  1366,  1148,  1366,   508,  1007,  1366, 
    1148,   797,  1366,   653,  1366,  1366,  1366,     3,   435,  1366, 
     653,   653,    15,   580,   385,  1366,   653,   797,   869,  1220, 
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724, 
     724,   724,   724,   724,   724,   580,   385,   385,   724,  1366, 
     724,   653,   724,     3,   435,   653,   724,   724,    15,  1366, 
     797,  1148,   724,   724,   360,   653,  1366,   653,   653,   724, 
    1148,  1220,   508,   269,   724,   653,  1148,  1148,  1366,   724, 
     197,  1220,  1220,    39,   435,    27,   197,  1366,   385,  1366, 
     724,  1220,   288,   797,  1366,   724,  1366,   580,  1148,   724, 
    1220,  1220,   385,   797,   797,  1366,  1366,  1366,   797,   797, 
     797,   797,   797,   797,   797,   797,   653,   653,  1293,     8, 
      15,   360,   724,   653,   653,   724,   653,   653,  1366,   653, 
     724,   724,   724,     3,    39,  1366,  1220,  1220,  1366,   653, 
     724,  1148,   178,     1,    15,  1076,   938,  1366,   269,   269, 
     653,  1366,   797,   117,  1220,   869,   653,  1220,  1220,  1366, 
     653,   724,   724,   797,   653,   653,  1148,  1148,   724,   724, 
    1007,  1076,   724,    98,  1366,  1366,  1148,  1366,  1148,   508, 
     869,  1220,   869,  1220,   724,   653,   653,  1220,   288,   653, 
     653,  1366,   653,  1220,  1220,  1220,   269,    27,   288,  1148, 
       0,   724,  1220,    15,   178,  1293,  1220,   653,  1366,   435, 
    1148,  1220,  1148,   288,  1148,  1148,  1148,  1148,  1148,  1148, 
    1148,  1148,  1148,  1148,    27,  1220,  1220,     8,    15,   724, 
     360,   508,   580,   385,   269,    15,    27,    27,  1148,  1148, 
    1148,  1148,   288,  1148,   435,     3,  1366,  1148,    15,    15, 
    1220,  1220,  1220,  1007,    27,   869,   197,   178,     1,    27, 
      27,    27,   288,    15,   288,   288,   288,  1148,    15,    15, 
      15,    27,    27,    27,    27,  1220,    15,    15,    15,    15, 
      27,    15,  1366, 
};

template<>
const uint16 *Vba_parser_tables_t::Tr = &Tr_[0];

// Terminal transition matrix column ...
static const uint8 Tc_[139] = {
      32,    64,    20,    68,    63,    64,    20,    70,    32,    63, 
      53,    64,    70,    42,    67,     7,    15,    25,     0,     4, 
      71,     5,    41,    69,    42,    20,    67,     7,    15,    25, 
      20,    21,    58,    62,    32,    63,    64,    70,     0,     4, 
      71,     5,    41,    72,    42,    67,     0,     1,     8,     2, 
       3,     4,    56,     5,     6,     7,     9,     8,     9,    17, 
      14,    18,    27,    29,    10,    11,    33,    34,    36,    37, 
      40,    46,    48,    49,    52,    12,    13,    54,    14,    15, 
      55,    16,    17,    18,    61,    19,    20,    21,    22,    23, 
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33, 
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43, 
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53, 
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63, 
      64,    65,    66,    67,    68,    69,    70,    71,    72, 
};

template<>
const uint8 *Vba_parser_tables_t::Tc = &Tc_[0];

// Nonterminal transition matrix ...
static const int16 Nm_[4121] = {
       0,   303,     0,     0,     0,  -378,   175,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   304,     0, 
       0,  -154,     0,     0,    69,  -278,     0,  -290,  -106,  -102, 
      13,     0,     0,     0,  -290,   451,     0,     0,     0,     0, 
     317,     0,   439,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -94,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   161,  -207,  -243,  -260,  -361,  -261,    78, 
    -262,   138,   137,    73,    74,  -341,     0,  -248,     0,   140, 
       0,     0,  -107,     0,    79,     0,   139,  -244,  -243,  -260, 
       0,  -261,    78,  -262,   138,   137,    73,    74,     0,     0, 
    -248,     0,   140,     0,     0,     0,     0,    79,     0,   139, 
    -245,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,  -246,  -243,  -260,     0,  -261,    78,  -262, 
     138,   137,    73,    74,     0,     0,  -248,     0,   140,     0, 
       0,     0,     0,    79,     0,   139,  -205,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   190, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   191,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   196,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   221,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   235,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   238, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   242,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   243,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   245,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   250,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   273, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   274,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   275,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   276,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   277,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   278, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   279,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   280,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   281,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   282,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   283, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   284,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   285,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   286,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   287,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   291, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   293,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   294,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   296,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   297,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   299, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   312,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   320,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   323,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   326,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   330, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   334,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   335,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   343,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   355,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,   356, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   359,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,   360,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,   366,  -227,  -243,  -260,     0,  -261,    78,  -262,   138, 
     137,    73,    74,     0,     0,  -248,     0,   140,     0,     0, 
       0,     0,    79,     0,   139,   154,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,     0, 
       0,     0,   170,  -227,  -243,  -260,   447,  -261,    78,  -262, 
     138,   137,    73,    74,     0,     0,  -248,     0,   140,     0, 
     308,     0,     0,    79,     0,   139,     0,     0,     0,   237, 
    -227,  -243,  -260,   449,  -261,    78,  -262,   138,   137,    73, 
      74,     0,     0,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,   309,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
     361,     0,     0,     0,    79,     0,   139,     0,   156,  -227, 
    -243,  -260,     0,  -261,    78,  -262,   138,   137,    73,    74, 
       0,     0,  -248,     0,   140,     0,  -373,     0,     0,    79, 
     236,   139,   362,  -227,  -243,  -260,   442,  -261,    78,  -262, 
     138,   137,    73,    74,     0,     0,  -248,     0,   140,     0, 
       0,     0,     0,    79,     0,   139,     0,   377,  -227,  -243, 
    -260,     0,  -261,    78,  -262,   138,   137,    73,    74,     0, 
       0,  -248,   333,   140,     0,     0,     0,     0,    79,     0, 
     139,  -272,    65,  -278,   421,     0,  -106,  -102,    13,     0, 
       0,     0,  -290,     0,     0,     0,     0,     0,   259,     0, 
     418,     0,     0,     0,   430,     0,     0,     0,   136,  -227, 
    -243,  -260,   354,  -261,    78,  -262,   138,   137,    73,    74, 
       0,     0,  -248,     0,   140,  -362,     0,     0,     0,    79, 
       0,   139,     0,  -216,     0,     0,     0,   329,     0,   440, 
    -107,     0,  -277,   152,  -227,  -243,  -260,     0,  -261,    78, 
    -262,   138,   137,    73,    74,     0,     0,  -248,     0,   140, 
       0,     0,     0,     0,    79,     0,   139,     0,     0,     0, 
       0,     0,   331,     0,   446,   156,  -227,  -243,  -260,     0, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,     0,   139,     0, 
       0,     0,     0,     0,     0,     0,   448,   225,  -227,  -243, 
    -260,   223,  -261,    78,  -262,   138,   137,    73,    74,   -76, 
     -80,  -248,     0,   140,     0,     0,     0,     0,    79,     0, 
     139,     0,     0,     0,     0,     0,     0,     0,     0,   155, 
       0,     0,     0,   189,     0,     0,   -75,   -80,   183,  -227, 
    -243,  -260,     0,  -261,    78,  -262,   138,   137,    73,    74, 
       0,     0,  -248,     0,   140,     0,     0,     0,     0,    79, 
     189,   139,     0,   -75,   -80,   183,  -227,  -243,  -260,   224, 
    -261,    78,  -262,   138,   137,    73,    74,     0,     0,  -248, 
       0,   140,     0,     0,     0,     0,    79,   189,   139,     0, 
     -75,   -80,   183,  -227,  -243,  -260,     0,  -261,    78,  -262, 
     138,   137,    73,    74,     0,   188,  -248,     0,   140,     0, 
       0,     0,     0,    79,   189,   139,     0,   -75,   -80,   183, 
    -227,  -243,  -260,     0,  -261,    78,  -262,   138,   137,    73, 
      74,     0,   262,  -248,     0,   140,     0,     0,     0,     0, 
      79,     0,   139,     0,     0,     0,   183,  -227,  -243,  -260, 
       0,  -261,    78,  -262,   138,   137,    73,    74,   441,   289, 
    -248,  -101,   140,     0,     0,     0,  -367,    79,     0,   139, 
       0,     0,     0,     0,  -358,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   290,     0,     0,  -200, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   127,    39,  -278,   420,  -356,  -106,  -102, 
      13,     0,     0,     0,  -290,     0,     0,     0,     0,     0, 
     258,     0,   405,     0,     0,     0,   429,     0,     0,     0, 
       0,     0,     0,     0,   332,     0,     0,     0,     0,     0, 
    -109,   256,   182,   184,     0,   -75,   -80,    12,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,  -108,     0,  -277,     0,     0,     0,     0,     0, 
       0,   -77,     0,     0,   183,  -227,  -243,  -260,   185,  -261, 
      78,  -262,   138,   137,    73,    74,     0,     0,  -248,     0, 
     140,     0,     0,     0,     0,    79,     0,   139,   182,   184, 
       0,   -75,   -80,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,  -333,     0,     0,     0,   -77,     0,     0, 
     183,  -227,  -243,  -260,   185,  -261,    78,  -262,   138,   137, 
      73,    74,     0,     0,  -248,     0,   140,     0,     0,     0, 
       0,    79,     0,   139,   182,   184,     0,   -75,   -80,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   261,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -333, 
       0,     0,     0,   -77,     0,     0,   183,  -227,  -243,  -260, 
     185,  -261,    78,  -262,   138,   137,    73,    74,   424,     0, 
    -248,     0,   140,     0,     0,     0,     0,    79,     0,   139, 
       0,     0,     0,     0,  -358,     0,  -181,     0,     0,     0, 
       0,  -166,     0,     0,   288,     0,  -390,   311,   171,  -199, 
       0,     0,   -85,     0,     0,  -333,     0,   292,     0,    75, 
     172,    73,    74,  -273,    50,  -278,   -87,  -355,  -106,  -102, 
      13,     0,     0,     0,  -290,     0,     0,     0,     0,     0, 
     195,     0,   373,     0,     0,     0,   407,     0,     0,     0, 
       0,     0,     0,  -105,   135,  -347,     0,     0,     0,     0, 
     255,   256,     0,    20,     0,     0,     0,  -361,     0,     0, 
       0,     0,     0,     0,     0,  -341,     0,     0,     0,     0, 
       0,     0,  -107,     0,  -277,   -37,   -38,   -39,     0,   -40, 
     -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,     0, 
     -51,   -52,   -53,     0,     0,     0,     0,     0,   -31,     0, 
     -47,   -33,   268,    77,  -260,   -32,  -261,    78,  -262,    75, 
      72,    73,    74,     0,     0,   -66,     0,     0,     0,     0, 
       0,    76,    79,     0,    80,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   -34, 
       0,   -35,   402,     0,     0,     0,     0,     0,     0,   -37, 
     -38,   -39,     0,   -40,   -41,   -42,   -43,   -44,   -45,   -48, 
     -46,   -49,   -50,     0,   -51,   -52,   -53,     0,     0,     0, 
       0,     0,   -31,   -36,   -47,   -33,  -163,    77,  -260,   -32, 
    -261,    78,  -262,    75,    72,    73,    74,     0,     0,   304, 
       0,     0,     0,     0,     0,    76,    79,     0,    80,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -34,     0,   -35,     0,     0,   -25,     0, 
      71,    81,   -26,    82,    -7,     0,   -37,   -38,   -39,   -27, 
     -40,   -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50, 
     -28,   -51,   -52,   -53,     0,     0,   -29,   -36,   -30,   -31, 
       0,   -47,   -33,    -6,    77,  -260,   -32,  -261,    78,  -262, 
      75,    72,    73,    74,     0,     0,     0,     0,   -23,     0, 
       0,     0,    76,    79,     0,    80,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     -34,     0,   -35,     0,     0,     0,     0,     0,     0,     0, 
       0,  -370,     0,     0,   -24,     0,     0,     0,   381,     0, 
       0,     0,     0,     0,     0,     0,     0,   -25,     0,    71, 
      81,   -26,    82,    -7,   -36,   -37,   -38,   -39,   -27,   -40, 
     -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28, 
     -51,   -52,   -53,     0,     0,   -29,     0,   -30,   -31,     0, 
     -47,   -33,    -6,    77,  -260,   -32,  -261,    78,  -262,    75, 
      72,    73,    74,     0,     0,     0,     0,   -23,     0,     0, 
       0,    76,    79,     0,    80,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   -34, 
       0,   -35,     0,     0,     0,     0,     0,     0,     0,     0, 
    -371,     0,     0,   -24,     0,     0,     0,  -135,     0,     0, 
       0,     0,     0,     0,     0,     0,   -25,     0,    71,    81, 
     -26,    82,    -7,   -36,   -37,   -38,   -39,   -27,   -40,   -41, 
     -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51, 
     -52,   -53,     0,     0,   -29,     0,   -30,   -31,     0,   -47, 
     -33,    -6,    77,  -260,   -32,  -261,    78,  -262,    75,    72, 
      73,    74,     0,     0,   358,     0,   -23,     0,     0,     0, 
      76,    79,     0,    80,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   -34,     0, 
     -35,     0,     0,     0,     0,     0,     0,     0,     0,  -370, 
       0,     0,   -24,     0,     0,     0,   178,     0,     0,     0, 
       0,     0,     0,     0,     0,   -25,     0,    71,    81,   -26, 
      82,    -7,   -36,   -37,   -38,   -39,   -27,   -40,   -41,   -42, 
     -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51,   -52, 
     -53,     0,     0,   -29,     0,   -30,   -31,     0,   -47,   -33, 
      -6,    77,  -260,   -32,  -261,    78,  -262,    75,    72,    73, 
      74,     0,     0,   375,     0,   -23,     0,     0,     0,    76, 
      79,     0,    80,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   -34,     0,   -35, 
       0,     0,     0,     0,     0,     0,     0,     0,  -370,     0, 
       0,   -24,     0,     0,     0,   241,     0,     0,     0,     0, 
       0,     0,     0,     0,   -25,   428,    71,    81,   -26,    82, 
      -7,   -36,   -37,   -38,   -39,   -27,   -40,   -41,   -42,   -43, 
     -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51,   -52,   -53, 
       0,     0,   -29,     0,   -30,   -31,     0,   -47,   -33,    -6, 
      77,  -260,   -32,  -261,    78,  -262,    75,    72,    73,    74, 
       0,     0,   304,     0,   -23,     0,     0,     0,    76,    79, 
       0,    80,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   -34,     0,   -35,     0, 
       0,     0,     0,     0,     0,     0,     0,  -392,     0,     0, 
     -24,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -25,   395,    71,    81,   -26,    82,    -7, 
     -36,   -37,   -38,   -39,   -27,   -40,   -41,   -42,   -43,   -44, 
     -45,   -48,   -46,   -49,   -50,   -28,   -51,   -52,   -53,     0, 
       0,   -29,     0,   -30,   -31,     0,   -47,   -33,    -6,    77, 
    -260,   -32,  -261,    78,  -262,    75,    72,    73,    74,     0, 
       0,   304,     0,   -23,     0,     0,     0,    76,    79,     0, 
      80,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   -34,     0,   -35,     0,     0, 
       0,     0,     0,     0,     0,     0,  -370,     0,     0,   -24, 
       0,     0,     0,   271,     0,     0,     0,     0,     0,     0, 
       0,     0,   -25,   396,    71,    81,   -26,    82,    -7,   -36, 
     -37,   -38,   -39,   -27,   -40,   -41,   -42,   -43,   -44,   -45, 
     -48,   -46,   -49,   -50,   -28,   -51,   -52,   -53,     0,     0, 
     -29,     0,   -30,   -31,     0,   -47,   -33,    -6,    77,  -260, 
     -32,  -261,    78,  -262,    75,    72,    73,    74,     0,     0, 
     304,     0,   -23,     0,     0,     0,    76,    79,     0,    80, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   -34,     0,   -35,     0,     0,     0, 
       0,     0,     0,     0,     0,  -370,     0,     0,   -24,     0, 
       0,     0,   315,     0,     0,     0,     0,     0,     0,     0, 
       0,   -25,   397,    71,    81,   -26,    82,    -7,   -36,   -37, 
     -38,   -39,   -27,   -40,   -41,   -42,   -43,   -44,   -45,   -48, 
     -46,   -49,   -50,   -28,   -51,   -52,   -53,     0,     0,   -29, 
       0,   -30,   -31,     0,   -47,   -33,    -6,    77,  -260,   -32, 
    -261,    78,  -262,    75,    72,    73,    74,     0,     0,   304, 
       0,   -23,     0,     0,     0,    76,    79,     0,    80,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -34,     0,   -35,     0,     0,     0,     0, 
       0,     0,     0,     0,  -370,     0,     0,   -24,     0,     0, 
       0,   316,     0,     0,     0,     0,     0,     0,     0,     0, 
     -25,   398,    71,    81,   -26,    82,    -7,   -36,   -37,   -38, 
     -39,   -27,   -40,   -41,   -42,   -43,   -44,   -45,   -48,   -46, 
     -49,   -50,   -28,   -51,   -52,   -53,     0,     0,   -29,     0, 
     -30,   -31,     0,   -47,   -33,    -6,    77,  -260,   -32,  -261, 
      78,  -262,    75,    72,    73,    74,     0,     0,   304,     0, 
     -23,     0,     0,     0,    76,    79,     0,    80,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   -34,     0,   -35,     0,     0,     0,     0,     0, 
       0,     0,     0,  -370,     0,     0,   -24,     0,     0,     0, 
     327,     0,     0,     0,     0,     0,     0,     0,     0,   -25, 
     399,    71,    81,   -26,    82,    -7,   -36,   -37,   -38,   -39, 
     -27,   -40,   -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49, 
     -50,   -28,   -51,   -52,   -53,     0,     0,   -29,     0,   -30, 
     -31,     0,   -47,   -33,    -6,    77,  -260,   -32,  -261,    78, 
    -262,    75,    72,    73,    74,     0,     0,   304,     0,   -23, 
       0,     0,     0,    76,    79,     0,    80,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   -34,     0,   -35,     0,     0,     0,     0,     0,     0, 
       0,     0,  -370,     0,     0,   -24,     0,     0,     0,   340, 
       0,     0,     0,     0,     0,     0,     0,     0,   -25,   400, 
      71,    81,   -26,    82,    -7,   -36,   -37,   -38,   -39,   -27, 
     -40,   -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50, 
     -28,   -51,   -52,   -53,     0,     0,   -29,     0,   -30,   -31, 
       0,   -47,   -33,    -6,    77,  -260,   -32,  -261,    78,  -262, 
      75,    72,    73,    74,     0,     0,   304,     0,   -23,     0, 
       0,     0,    76,    79,     0,    80,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     -34,     0,   -35,     0,     0,     0,     0,     0,     0,     0, 
       0,  -370,     0,     0,   -24,     0,     0,     0,   341,     0, 
       0,     0,     0,     0,     0,     0,     0,   -25,   401,    71, 
      81,   -26,    82,    -7,   -36,   -37,   -38,   -39,   -27,   -40, 
     -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28, 
     -51,   -52,   -53,     0,     0,   -29,     0,   -30,   -31,     0, 
     -47,   -33,    -6,    77,  -260,   -32,  -261,    78,  -262,    75, 
      72,    73,    74,     0,     0,   304,     0,   -23,     0,     0, 
       0,    76,    79,     0,    80,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   -34, 
       0,   -35,     0,     0,     0,     0,     0,     0,     0,     0, 
    -370,     0,     0,   -24,     0,     0,     0,   351,     0,     0, 
       0,     0,     0,     0,     0,     0,   -25,   403,    71,    81, 
     -26,    82,    -7,   -36,   -37,   -38,   -39,   -27,   -40,   -41, 
     -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51, 
     -52,   -53,     0,     0,   -29,     0,   -30,   -31,     0,   -47, 
     -33,    -6,    77,  -260,   -32,  -261,    78,  -262,    75,    72, 
      73,    74,     0,     0,   304,     0,   -23,     0,     0,     0, 
      76,    79,     0,    80,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   -34,     0, 
     -35,     0,     0,     0,     0,     0,     0,     0,     0,  -370, 
       0,     0,   -24,     0,     0,     0,   353,     0,     0,     0, 
       0,     0,     0,     0,     0,   -25,   404,    71,    81,   -26, 
      82,    -7,   -36,   -37,   -38,   -39,   -27,   -40,   -41,   -42, 
     -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51,   -52, 
     -53,     0,     0,   -29,     0,   -30,   -31,     0,   -47,   -33, 
      -6,    77,  -260,   -32,  -261,    78,  -262,    75,    72,    73, 
      74,     0,     0,   304,     0,   -23,     0,     0,     0,    76, 
      79,     0,    80,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   -34,     0,   -35, 
       0,  -360,   394,     0,     0,     0,     0,     0,  -370,     0, 
       0,   -24,     0,     0,     0,   372,  -375,     0,  -358,     0, 
    -194,  -170,  -382,   322,   265,  -165,     0,     0,  -394,     0, 
       0,   -36,     0,  -198,     0,     0,   -86,   149,  -260,     0, 
    -261,    78,  -262,    75,   160,    73,    74,    48,    50,  -278, 
     -87,  -331,  -106,  -102,    13,  -161,    79,     0,  -290,     0, 
       0,     0,     0,     0,   174,     0,   314,     0,     0,     0, 
     406,     0,     0,     0,     0,     0,     0,    35,   159,     0, 
       0,    63,   118,   180,     0,   114,   -95,    19,     0,     0, 
       0,  -361,     0,    59,     0,  -380,     0,     0,     0,  -341, 
       0,     0,   365,    47,  -397,     0,  -107,  -353,  -277,   -25, 
       0,   129,     0,   -26,     0,    -7,     0,   -37,   -38,   -39, 
     -27,   -40,   -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49, 
     -50,   -28,   -51,   -52,   -53,     0,     0,   -29,     0,   -30, 
     -31,     0,   -47,   -33,    -6,    77,  -260,   -32,  -261,    78, 
    -262,    75,    72,    73,    74,  -265,    68,  -278,   445,   -23, 
       0,     0,     0,    76,    79,     0,    80,     0,     0,     0, 
       0,     0,   302,     0,   438,     0,     0,     0,     0,     0, 
       0,   -34,     0,   -35,     0,   -91,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   -24,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,  -341,     0,     0, 
       0,     0,     0,     0,  -107,   -36,  -277,   -25,   443,    71, 
      81,   -26,    82,    -7,     0,   -37,   -38,   -39,   -27,   -40, 
     -41,   -42,   -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28, 
     -51,   -52,   -53,     0,     0,   -29,     0,   -30,   -31,     0, 
     -47,   -33,    -6,    77,  -260,   -32,  -261,    78,  -262,    75, 
      72,    73,    74,  -275,    66,  -278,   422,   -23,     0,     0, 
       0,    76,    79,     0,    80,     0,     0,     0,     0,     0, 
     300,     0,   419,     0,     0,     0,   431,     0,     0,   -34, 
       0,   -35,     0,   115,     0,     0,     0,     0,     0,     0, 
    -370,     0,     0,   -24,     0,     0,     0,    70,     0,     0, 
       0,     0,     0,     0,     0,  -341,     0,     0,     0,     0, 
       0,     0,  -107,   -36,  -277,   -25,   444,    71,    81,   -26, 
      82,    -7,  -146,   -37,   -38,   -39,   -27,   -40,   -41,   -42, 
     -43,   -44,   -45,   -48,   -46,   -49,   -50,   -28,   -51,   -52, 
     -53,  -210,     0,   -29,  -218,   -30,   -31,  -221,   -47,   -33, 
      -6,    77,  -260,   -32,  -261,    78,  -262,    75,    72,    73, 
      74,  -274,    67,  -278,   423,   -23,     0,     0,     0,    76, 
      79,     0,    80,     0,     0,     0,     0,     0,   301,     0, 
     433,     0,     0,     0,   450,     0,     0,   -34,     0,   -35, 
       0,  -152,     0,     0,     0,     0,     0,     0,  -371,     0, 
       0,   -24,     0,     0,     0,  -143,     0,     0,     0,     0, 
       0,     0,     0,  -341,     0,     0,     0,     0,     0,     0, 
    -107,   -36,  -277,  -360,  -327,     2,    14,   -16,     4,     3, 
    -104,    24,  -366,  -364,  -130,   166,   -19,    41,  -375,  -377, 
    -358,   -11,  -158,   197,  -381,   263,   265,  -164,  -384,   -13, 
    -394,   168,  -389,   246,   -78,  -197,   -18,   -14,  -329,    40, 
     -17,   185,    45,   -97,  -214,    75,   132,    73,    74,    48, 
      39,  -278,   357,  -330,  -106,  -102,    13,   133,    32,  -351, 
    -290,   240,    22,    42,    43,   232,    33,     1,   192,   -20, 
     -21,   -22,   367,   379,   416,   -15,   -69,   -12,   -71,  -349, 
     135,  -346,   134,    60,   116,   -90,  -314,   114,   348,  -348, 
    -116,    38,  -123,    12,   370,    57,   112,  -379,   113,   264, 
     230,  -103,    18,   247,   364,    47,  -396,    46,  -107,  -353, 
    -277, 
};

template<>
const int16 *Vba_parser_tables_t::Nm = &Nm_[0];

// Nonterminal transition matrix row ...
static const uint16 Nr_[453] = {
 4013,  4013,  4013,  4013,  4013,  4013,  3581,  1967,  4013,  4013, 
 4013,  4013,  1727,  4013,  4013,  4013,  4013,  4013,  4013,  4013, 
 4013,  4013,  3581,  4013,  1967,  4013,  4013,  4013,  4013,  4013, 
 4013,  1727,  4013,  1395,  4013,  4013,  1727,  3581,  4013,  4013, 
 4013,  3581,  4013,  3581,  4013,  4013,  3581,  4013,  1395,  1967, 
 4013,  1727,  1395,  3797,  3905,  3689,     7,  3797,  4013,  3797, 
 4013,  4013,  4013,  3581,  4013,  4013,  4013,  4013,  4013,  4013, 
 3905,  4013,  4013,  4013,  1967,  4013,  4013,  4013,  4013,  1727, 
 4013,  3689,  4013,  4013,  1395,  4013,  4013,  4013,  4013,  4013, 
 4013,  3581,  1434,  3581,  4013,  4013,  4013,  1469,  4013,  1231, 
 1501,  3581,  4013,  3581,  3581,     7,  4013,  4013,  4013,  4013, 
 1258,  1967,  4013,  3581,     0,  2416,  4013,  4013,  3581,  4013, 
 1810,    59,  3797,  3905,  1601,   175,  3689,  4013,   199,  4013, 
 4013,  4013,  4013,  4013,  1967,   223,  4013,  4013,  4013,  4013, 
 4013,  4013,    82,   105,   128,  4013,  4013,  4013,   247,  4013, 
 1533,  4013,  4013,  4013,  4013,  4013,  4013,   271,  1285,   295, 
 4013,  4013,  4013,  2515,   319,   343,  4013,   367,  4013,   391, 
 4013,  4013,  4013,  4013,  3581,  3905,  4013,  4013,  3905,  1967, 
 3689,  4013,  1727,  4013,  1395,  4013,  4013,  4013,  4013,  1727, 
 4013,  4013,  4013,  1866,  1628,  1967,  4013,  4013,  2067,  2713, 
  415,   439,   463,   487,   511,   535,   559,   583,   607,   631, 
  655,   679,   703,   727,   751,  1922,  1655,  1682,   775,  1967, 
  799,  4013,   823,  4013,  4013,  4013,   847,   871,  1967,  4013, 
 4013,  4013,   895,  4013,  4013,  3797,  3905,  4013,  3689,   151, 
    0,  3905,  4013,  4013,  1309,  4013,  3581,  1967,  4013,   919, 
 3581,  2812,  2911,  4013,  4013,     7,  4013,  4013,  1574,  4013, 
  943,  4013,  4013,  3581,  3581,   967,  4013,  4013,  4013,   991, 
 3010,  3905,  4013,  4013,  4013,  4013,  4013,  4013,  4013,  4013, 
 4013,  4013,  4013,  4013,  4013,  4013,  4013,  4013,  4013,  4013, 
 4013,  4013,  4013,  1434,  4013,  1015,  1469,  4013,  1727,  4013, 
 1334,  1039,  1063,  4013,  4013,  4013,  3109,  3208,  4013,  4013, 
 1087,  1727,  4013,  4013,  4013,  3905,  3905,  1727,  4013,  3581, 
 4013,  4013,  1967,  3581,  3307,  2141,  4013,  3905,  3406,  1395, 
 4013,  1111,  1135,  4013,  4013,  4013,  4013,  2416,  1159,  1183, 
 3905,  3905,  1358,  4013,  4013,  3581,  4013,  4013,     7,  4013, 
 4013,  3905,  2067,  3905,  1207,  4013,  4013,  4013,  4013,  4013, 
 4013,  4013,  4013,  3505,  2614,  2614,  4013,  1967,  4013,  2515, 
 4013,  1383,  3905,  4013,  4013,  4013,  2218,  4013,  4013,  4013, 
 2067,  2317,  4013,  3581,  2713,  2812,  2911,  3010,  3109,  3208, 
 3307,  2141,  3406,  3505,  1727,  3581,  1967,  4013,  4013,  4013, 
 4013,  4013,  4013,  4013,  4013,  4013,  1395,  3797,  1727,  1395, 
 3797,  3905,  1967,  4013,  4013,  4013,  3581,  2614,  4013,  4013, 
 1727,  1395,  3797,  4013,  3905,  4013,  4013,  4013,  4013,  3689, 
    7,  1434,  1727,  4013,  1395,  3797,  3905,  3689,  4013,  4013, 
 4013,  1469,  1231,  1501,  1258,  3905,  4013,  4013,  4013,  4013, 
    0,  4013,  4013, 
};

template<>
const uint16 *Vba_parser_tables_t::Nr = &Nr_[0];

// Nonterminal transition matrix column ...
static const uint8 Nc_[405] = {
   83,    83,    83,    83,    83,    83,     2,     2,     3,     3, 
    5,     2,     2,     2,     2,     2,     2,     2,     2,     2, 
    3,     5,     6,     6,     6,     6,     6,     6,     6,     6, 
    6,    35,    35,    35,    35,    35,    35,    35,    35,    35, 
   35,    35,    35,    35,    35,    35,    35,    35,    35,    35, 
   35,    35,    35,    35,    50,    35,    35,    35,    35,    35, 
   35,    35,    35,    35,    35,    35,     1,    50,     1,    31, 
   31,    31,    31,    83,    83,     2,     2,     3,     3,     5, 
    5,     6,    31,    38,    38,    34,    34,    35,    35,    38, 
   72,    72,    86,   106,    50,    50,     0,    72,    74,    74, 
    4,     4,    90,    90,    90,    90,    90,    98,    98,    98, 
    7,     7,   105,   105,   105,   105,   105,   105,   105,    83, 
   83,    83,     8,     9,    10,    86,    86,    86,    86,    86, 
  106,    11,    11,    11,    11,     0,     1,     2,     3,     3, 
   12,    12,    12,     4,    90,    90,    13,    14,    15,    16, 
   17,    17,     5,     6,     6,     6,     7,     7,     8,    19, 
   19,     9,    10,    10,    11,    11,    11,    20,    20,    20, 
   21,    22,    23,    23,    24,    24,    12,    12,    12,    13, 
   14,    15,    15,    16,    25,    25,    25,    26,    26,    17, 
   17,    18,    18,    19,    19,    20,    21,    22,    22,    22, 
   22,    28,    29,    30,    32,    23,    23,    23,    24,    25, 
   33,    36,    26,    26,    37,    39,    27,    41,    28,    29, 
   29,    30,    31,    31,    31,    32,    33,    34,    34,    34, 
   34,    34,    34,    34,    34,    34,    34,    34,    34,    34, 
   34,    34,    34,    35,    35,    35,    35,    35,    35,    35, 
   35,    35,    35,    35,    35,    35,    35,    35,    36,    36, 
   36,    36,    36,    37,    38,    39,    40,    41,    55,    55, 
   42,    43,    44,    44,    44,    44,    45,    46,    47,    47, 
   47,    47,    47,    48,    48,    48,    48,    49,    50,    51, 
   51,    51,    51,    51,    51,    52,    53,    54,    54,    55, 
   76,    56,    57,    58,    59,    60,    61,    62,    62,    62, 
   62,    63,    63,    64,    64,    65,    65,    66,    66,    67, 
   67,    67,    68,    68,    68,    68,    69,    69,    70,    70, 
   71,    71,    72,    72,    73,    73,    74,    74,    75,    75, 
   76,    76,    77,    77,    78,    79,    79,    79,    80,    80, 
   81,    81,    82,    82,    83,    83,    83,    84,    84,    85, 
   85,    86,    86,    87,    87,    88,    88,    88,    89,    89, 
   90,    90,    91,    91,    92,    92,    93,    93,    94,    95, 
   95,    96,    96,    97,    97,    98,    98,    99,    99,   100, 
  100,   101,   101,   102,   102,   103,   104,   104,   105,   105, 
  106,   106,   107,   107,   107, 
};

template<>
const uint8 *Vba_parser_tables_t::Nc = &Nc_[0];

// Reduction matrix ...
static const uint16 Rm_[265] = {
       0,   319,   319,     0,     0,     0,     0,     0,     0,   319, 
       0,     0,   319,     0,     0,     0,     0,   322,     0,   319, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     320,   320,     0,     0,     0,     0,     0,     0,   320,     0, 
       0,   320,     0,     0,     0,     0,   324,     0,   320,     0, 
     321,   321,     0,     0,     0,     0,     0,     0,   321,     0, 
       0,   321,     0,     0,     0,     0,   325,     0,   321,     0, 
     302,   302,     0,     0,     0,     0,   302,     0,     0,   302, 
       0,   302,     0,   296,     0,     0,     0,   302,   302,     0, 
       0,     0,     0,     0,     0,     0,   393,     0,     0,     0, 
     215,     0,     0,     0,     0,     0,     0,     0,     0,   357, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   357, 
       0,     0,   376,     0,     0,     0,   357,     0,     0,     0, 
       0,     0,   302,     0,     0,    10,     0,     0,     0,     0, 
       0,   297,     0,     0,     0,     0,     0,   342,   342,     0, 
       0,   342,   345,     0,     0,   345,     0,   342,   342,   342, 
       0,     0,     0,   345,     0,     0,     0,     0,     0,   302, 
       0,     0,     0,     0,     0,     0,     0,     0,   297,     0, 
       0,     0,     0,     0,   357,   357,     0,     0,     0,     0, 
       0,     0,     0,   354,     0,     0,     0,     0,   354,     0, 
       0,     0,     0,   258,   258,   258,     0,     0,     0,   258, 
       0,     0,     0,     0,   258,    83,     0,     0,     0,     0, 
       0,     0,     0,    70,     0,     0,     0,     0,     0,   270, 
       0,     0,     0,     0,    70,     0,     0,     0,     0,     0, 
       0,     0,   335,     0,     0,     0,     0,     0,   270,     0, 
       0,     0,     0,   335,     0, 
};

template<>
const uint16 *Vba_parser_tables_t::Rm = &Rm_[0];

// Reduction matrix row ...
static const int16 Rr_[453] = {
     313,     0,   -20,   -20,   317,   191,   -20,   -20,   -20,   -39, 
     -59,   -20,   100,   -20,   -20,   -20,   -79,   -20,   192,    98, 
      99,   -20,   340,   -20,   340,   365,   -20,   -20,   -20,   -20, 
     363,   -20,   393,   -20,   311,   -20,   -20,   -20,   -20,   368, 
     374,   374,   -20,   -20,   -20,   -20,   -99,   -20,   -20,   -20, 
      88,   -20,   -20,   -20,   -20,   -20,   -20,   -20,  -117,   340, 
     350,   -20,   -20,   350,   -20,   369,   279,   280,   281,   282, 
     -20,   -20,   -20,   271,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,  -137,  -155,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   342,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   149,   -20,   -20,   352,   -20,   352,   -20, 
     332,   -20,   -20,   -20,   336,   -20,   -20,   267,   -20,   -20, 
    -174,     8,   334,   338,    89,   -20,   -20,   249,   250,   -20, 
     -20,   251,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   383,   189,   385,   -20,   -20,   -20, 
     -20,   208,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   223,   222,   357,   340,   153,   292,   -20,  -193, 
     340,   -20,    73,    79,    74,   -20,  -209,    81,   -20,   337, 
     177,   178,     9,   332,   336,   342,   344,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   332,   336,   336,   -20,   -20, 
     -20,   -20,   -20,   -20,   264,   400,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   307,   308,   -20,   226,   398,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,  -226,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   162,   -20, 
     -20,   167,   -20,   228,   229,   230,   231,   232,   233,   234, 
     235,   236,   237,   238,   239,   240,   241,   242,   -20,   -20, 
     -20,   -20,   -20,   -20,   176,   -20,   -20,   180,   342,   386, 
     -20,   -20,   -20,   -20,   -20,   125,   -20,   -20,   -20,   136, 
     -20,   -20,   -20,   -20,   201,   -20,   -20,   357,   359,   359, 
      82,  -245,   -20,   -20,   -20,   -20,   -20,   168,   -20,   342, 
     401,   -20,   -20,   190,   399,   196,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   391,   391,   -20,   -20,   340,   -20, 
     -20,   171,   -20,   169,   -20,   179,   183,   326,   -20,   126, 
     127,   372,   137,   -20,   202,   203,   -20,   -20,   -20,   -20, 
     -20,   138,   -20,   328,   -20,   -20,   -20,   139,   144,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   326,   326,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,   -20,   -20,   -20,    55,   -20,    56,    57, 
     326,   326,   326,   -20,   -20,   -20,   -20,   -20,   -20,   -20, 
     -20,   -20,   -20,    62,   -20,   -20,   -20,   -20,    58,    59, 
      60,   -20,   -20,   -20,   -20,   326,    61,    63,    64,    65, 
     -20,    67,   -20, 
};

template<>
const int16 *Vba_parser_tables_t::Rr = &Rr_[0];

// Reduction matrix column ...
static const uint8 Rc_[139] = {
       0,     0,     1,     2,     3,     3,     3,     3,     4,     4, 
       5,     4,     4,     4,     4,     4,     6,     6,     4,     4, 
       4,     4,     4,     7,     8,     0,     9,     0,     0,     0, 
       0,     3,    10,    11,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,    12,     0,     0,     0,    13,     0,    14, 
      15,    16,     3,     0,    17,     0,     0,     0,     9,     9, 
       0,     0,     0,     9,     0,     0,     0,     0,     0,     0, 
       0,     0,     3,     0,     0,    12,     3,     0,     0,     0, 
       0,     0,     0,     0,     0,     3,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    18,     0,     0,     0, 
       0,     3,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     3,     0,     0,     0,     0, 
       0,     0,     0,     9,     0,     0,    12,     0,     3,     0, 
       0,    12,    19,     0,     0,     0,     0,     0,     0, 
};

template<>
const uint8 *Vba_parser_tables_t::Rc = &Rc_[0];

// Production lengths (minus one) ...
static const int8 PL_[405] = {
       1,     0,     1,     0,     1,     2,     0,     0,     1,     2, 
       0,     0,     0,     0,     1,     1,     1,     1,     2,     2, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    10,     3,     3,     3,     5,     5, 
       5,     6,     4,     6,     6,     6,     6,     5,     1,     2, 
       3,     2,     3,     0,     0,     0,     2,     0,     2,     0, 
       0,     0,     2,     0,     0,     4,     3,     0,     0,     1, 
       5,     6,     0,     2,     3,     2,     1,     1,     1,     1, 
       0,     1,     0,     1,     1,     2,     0,     0,     1,     1, 
       0,     1,     0,     0,     0,     0,     1,     0,     0,     0, 
       0,     0,     2,     1,     0,     3,     5,     5,     5,     5, 
       1,     0,     0,     0,     0,     9,     0,     0,    -1,     0, 
       0,     0,     0,     7,     0,     1,     5,     0,     2,     0, 
       0,     0,     1,     0,     0,     2,     1,     1,     1,     0, 
       0,     1,     3,     5,     3,     4,     5,     1,     2,     3, 
       2,     2,     0,     1,     1,     0,     3,     2,     2,     5, 
       3,     3,     3,     5,     0,     0,     0,     2,     1,     1, 
       4,     0,     1,     1,     1,     0,     4,     2,     3,     3, 
       4,     2,     3,     3,     1,     3,     3,     2,     1,     0, 
       4,     0,     1,     1,     3,     0,     1,     1,     4,     0, 
       1,     4,     0,     0,     0,     1,     2,     0,     2,     2, 
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2, 
       2,     2,     2,     0,     1,     1,     1,     0,     0,     0, 
       0,     0,     3,     3,     3,     3,     6,     2,     0,     0, 
       0,     0,     0,     3,     0,     2,     0,     1,     1,     2, 
       3,     0,     1,     1,     2,     2,     1,     0,     0,     2, 
       2,     2,     2,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     1, 
       1,     0,     1,    -1,     1,     0,     1,    -1,     0,    -1, 
       0,     0,    -1,     0,     0,     0,    -1,     1,    -1,     1, 
       0,     1,    -1,     0,    -1,     2,    -1,     0,    -1,     2, 
      -1,     0,    -1,     0,     1,    -1,     0,     2,     1,     1, 
      -1,     1,    -1,     0,    -1,     0,     2,    -1,     0,    -1, 
       0,     0,     2,    -1,     1,    -1,     0,     2,    -1,     1, 
       0,     1,    -1,     1,    -1,     0,    -1,     0,     1,     0, 
       2,     0,     1,    -1,     1,     0,     2,     0,     1,     0, 
       1,    -1,     1,    -1,     0,     1,     0,     1,     0,     2, 
       0,     2,     0,     0,     0, 
};

template<>
const int8 *Vba_parser_tables_t::PL = &PL_[0];

template<>
const uint32 *Vba_parser_tables_t::nd_fterm = 0;

template<>
const uint32 *Vba_parser_tables_t::nd_term = 0;

template<>
const uint32 *Vba_parser_tables_t::nd_faction = 0;

template<>
const uint32 *Vba_parser_tables_t::nd_action = 0;

// Terminal action number ...
static const int8 tact_numb_[139] = {
       0,    -1,     1,     1,     1,     1,     1,     1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
};

template<>
const int8 *Vba_parser_tables_t::tact_numb = &tact_numb_[0];

// Node number for each production ...
static const int8 node_numb_[405] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
       0,     1,     2,     3,     4,     5,     6,     7,     8,     9, 
      -1,    -1,    -1,    10,    11,    12,    13,    14,    15,    16, 
      17,    -1,    18,     4,    19,     2,    20,    21,    22,    23, 
      24,    25,    26,    27,    28,    29,    30,    31,     1,    32, 
      33,    34,    35,    36,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
      37,    38,    38,    -1,    -1,    -1,    -1,    -1,    -1,    39, 
      39,    40,    -1,    41,    41,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    42,    42,    40,    -1,    -1,    -1,    -1, 
      43,    43,    43,    43,    43,    43,    43,    43,    43,    43, 
      43,    43,    44,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    46,    47,    48,    48, 
      49,    49,    49,    -1,    50,    50,    -1,    49,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    51,    51,    52,     0, 
       0,    53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    49,    54,    54,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    55,    56, 
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66, 
      67,    68,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
      -1,    70,    -1,    -1,    -1,    -1,    71,    72,    -1,    -1, 
      -1,    -1,    -1,    73,    73,    73,    73,    -1,    -1,    74, 
      75,    76,    77,    78,    79,    -1,    49,    49,    49,    49, 
      49,    80,    49,    49,    49,    49,    49,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1, 
};

template<>
const int8 *Vba_parser_tables_t::node_numb = &node_numb_[0];

// Node action numbers ...
static const int8 nact_numb_[405] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1, 
};

template<>
const int8 *Vba_parser_tables_t::nact_numb = &nact_numb_[0];

template<>
const uint32 *Vba_parser_tables_t::reverse = 0;


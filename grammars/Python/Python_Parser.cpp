#include "lrstar_basic_defs.h"
#include "lrstar_parser_tables.h"
#include "Python_LexerTables_typedef.h"
#include "Python_ParserTables_typedef.h"
#include "Python_Parser.h"

namespace Python {
// Terminal symbols of the grammar.
const char *grm_term_symb[94] = {
   "<error>",
   "<eof>",
   "<newline>",
   "\'@\'",
   "\'(\'",
   "\')\'",
   "\'DEF\'",
   "\'NAME\'",
   "\'->\'",
   "\':\'",
   "\'=\'",
   "\',\'",
   "\'*\'",
   "\'**\'",
   "\';\'",
   "\'+=\'",
   "\'-=\'",
   "\'*=\'",
   "\'@=\'",
   "\'/=\'",
   "\'%=\'",
   "\'&=\'",
   "\'|=\'",
   "\'^=\'",
   "\'<<=\'",
   "\'>>=\'",
   "\'**=\'",
   "\'//=\'",
   "\'DEL\'",
   "\'PASS\'",
   "\'BREAK\'",
   "\'CONTINUE\'",
   "\'RETURN\'",
   "\'RAISE\'",
   "\'FROM\'",
   "\'IMPORT\'",
   "\'.\'",
   "\'...\'",
   "\'AS\'",
   "\'GLOBAL\'",
   "\'NONLOCAL\'",
   "\'ASSERT\'",
   "\'IF\'",
   "\'ELIF\'",
   "\'ELSE\'",
   "\'WHILE\'",
   "\'FOR\'",
   "\'IN\'",
   "\'TRY\'",
   "\'FINALLY\'",
   "\'WITH\'",
   "\'EXCEPT\'",
   "\'INDENT\'",
   "\'DEDENT\'",
   "\'LAMBDA\'",
   "\'OR\'",
   "\'AND\'",
   "\'NOT\'",
   "\'<\'",
   "\'>\'",
   "\'==\'",
   "\'>=\'",
   "\'<=\'",
   "\'<>\'",
   "\'!=\'",
   "\'IS\'",
   "\'|\'",
   "\'^\'",
   "\'&\'",
   "\'<<\'",
   "\'>>\'",
   "\'+\'",
   "\'-\'",
   "\'/\'",
   "\'%\'",
   "\'//\'",
   "\'~\'",
   "\'[\'",
   "\']\'",
   "\'{\'",
   "\'}\'",
   "\'NONE\'",
   "\'TRUE\'",
   "\'FALSE\'",
   "\'CLASS\'",
   "\'YIELD\'",
   "<string_literal>",
   "<bytes_literal>",
   "<float_number>",
   "<imag_number>",
   "<decimal_integer>",
   "<octal_integer>",
   "<hex_integer>",
   "<binary_integer>",
};

// Nonterminal symbols of the grammar.
const char *grm_head_symb[220] = {
   "Goal",
   "single_input",
   "file_input",
   "eval_input",
   "decorator",
   "decorators",
   "decorated",
   "funcdef",
   "parameters",
   "typedargslist",
   "tfpdef",
   "varargslist",
   "vfpdef",
   "stmt",
   "simple_stmt",
   "small_stmt",
   "expr_stmt",
   "testlist_star_expr",
   "augassign",
   "del_stmt",
   "pass_stmt",
   "flow_stmt",
   "break_stmt",
   "continue_stmt",
   "return_stmt",
   "yield_stmt",
   "raise_stmt",
   "import_stmt",
   "import_name",
   "import_from",
   "import_as_name",
   "dotted_as_name",
   "import_as_names",
   "dotted_as_names",
   "dotted_name",
   "global_stmt",
   "nonlocal_stmt",
   "assert_stmt",
   "compound_stmt",
   "if_stmt",
   "while_stmt",
   "for_stmt",
   "try_stmt",
   "with_stmt",
   "with_item",
   "except_clause",
   "suite",
   "test",
   "test_nocond",
   "lambdef",
   "lambdef_nocond",
   "or_test",
   "and_test",
   "not_test",
   "comparison",
   "comp_op",
   "star_expr",
   "expr",
   "xor_expr",
   "and_expr",
   "shift_expr",
   "arith_expr",
   "term",
   "factor",
   "power",
   "atom",
   "testlist_comp",
   "trailer",
   "subscriptlist",
   "subscript",
   "sliceop",
   "exprlist",
   "testlist",
   "dictorsetmaker",
   "classdef",
   "arglist",
   "argument",
   "comp_iter",
   "comp_for",
   "comp_if",
   "yield_expr",
   "yield_arg",
   "str",
   "number",
   "integer",
   "(single_input | file_input | eval_input)",
   "(<newline> | stmt)",
   "(<newline> | stmt)*",
   "<newline>*",
   "arglist?",
   "('(' arglist? ')')",
   "('(' arglist? ')')?",
   "decorator+",
   "(classdef | funcdef)",
   "('->' test)",
   "('->' test)?",
   "typedargslist?",
   "('=' test)",
   "('=' test)?",
   "(',' tfpdef ('=' test)?)",
   "(',' tfpdef ('=' test)?)*",
   "tfpdef?",
   "(',' '**' tfpdef)",
   "(',' '**' tfpdef)?",
   "('*' tfpdef? (',' tfpdef ('=' test)?)* (',' '**' tfpdef)? | '**' tfpdef)",
   "('*' tfpdef? (',' tfpdef ('=' test)?)* (',' '**' tfpdef)? | '**' tfpdef)?",
   "(',' ('*' tfpdef? (',' tfpdef ('=' test)?)* (',' '**' tfpdef)? | '**' tfpdef)?)",
   "(',' ('*' tfpdef? (',' tfpdef ('=' test)?)* (',' '**' tfpdef)? | '**' tfpdef)?)?",
   "(':' test)",
   "(':' test)?",
   "(',' vfpdef ('=' test)?)",
   "(',' vfpdef ('=' test)?)*",
   "vfpdef?",
   "(',' '**' vfpdef)",
   "(',' '**' vfpdef)?",
   "('*' vfpdef? (',' vfpdef ('=' test)?)* (',' '**' vfpdef)? | '**' vfpdef)",
   "('*' vfpdef? (',' vfpdef ('=' test)?)* (',' '**' vfpdef)? | '**' vfpdef)?",
   "(',' ('*' vfpdef? (',' vfpdef ('=' test)?)* (',' '**' vfpdef)? | '**' vfpdef)?)",
   "(',' ('*' vfpdef? (',' vfpdef ('=' test)?)* (',' '**' vfpdef)? | '**' vfpdef)?)?",
   "(';' small_stmt)",
   "(';' small_stmt)*",
   "';'?",
   "(yield_expr | testlist)",
   "(yield_expr | testlist_star_expr)",
   "('=' (yield_expr | testlist_star_expr))",
   "('=' (yield_expr | testlist_star_expr))*",
   "(augassign (yield_expr | testlist) | ('=' (yield_expr | testlist_star_expr))*)",
   "(test | star_expr)",
   "(',' (test | star_expr))",
   "(',' (test | star_expr))*",
   "','?",
   "testlist?",
   "(FROM test)",
   "(FROM test)?",
   "(test (FROM test)?)",
   "(test (FROM test)?)?",
   "('.' | '...')",
   "('.' | '...')*",
   "('.' | '...')+",
   "(('.' | '...')* dotted_name | ('.' | '...')+)",
   "('*' | '(' import_as_names ')' | import_as_names)",
   "(AS NAME)",
   "(AS NAME)?",
   "(',' import_as_name)",
   "(',' import_as_name)*",
   "(',' dotted_as_name)",
   "(',' dotted_as_name)*",
   "('.' NAME)",
   "('.' NAME)*",
   "(',' NAME)",
   "(',' NAME)*",
   "(',' test)",
   "(',' test)?",
   "(ELIF test ':' suite)",
   "(ELIF test ':' suite)*",
   "(ELSE ':' suite)",
   "(ELSE ':' suite)?",
   "(except_clause ':' suite)",
   "(except_clause ':' suite)+",
   "(FINALLY ':' suite)",
   "(FINALLY ':' suite)?",
   "((except_clause ':' suite)+ (ELSE ':' suite)? (FINALLY ':' suite)? | FINALLY ':' suite)",
   "(',' with_item)",
   "(',' with_item)*",
   "(AS expr)",
   "(AS expr)?",
   "(test (AS NAME)?)",
   "(test (AS NAME)?)?",
   "stmt+",
   "(IF or_test ELSE test)",
   "(IF or_test ELSE test)?",
   "varargslist?",
   "(OR and_test)",
   "(OR and_test)*",
   "(AND not_test)",
   "(AND not_test)*",
   "(comp_op star_expr)",
   "(comp_op star_expr)*",
   "'*'?",
   "('|' xor_expr)",
   "('|' xor_expr)*",
   "('^' and_expr)",
   "('^' and_expr)*",
   "('&' shift_expr)",
   "('&' shift_expr)*",
   "('<<' arith_expr | '>>' arith_expr)",
   "('<<' arith_expr | '>>' arith_expr)*",
   "('+' term | '-' term)",
   "('+' term | '-' term)*",
   "('*' factor | '/' factor | '%' factor | '//' factor | '@' factor)",
   "('*' factor | '/' factor | '%' factor | '//' factor | '@' factor)*",
   "trailer*",
   "('**' factor)",
   "('**' factor)?",
   "(yield_expr | testlist_comp)",
   "(yield_expr | testlist_comp)?",
   "testlist_comp?",
   "dictorsetmaker?",
   "str+",
   "(',' test)*",
   "(comp_for | (',' test)* ','?)",
   "(',' subscript)",
   "(',' subscript)*",
   "test?",
   "sliceop?",
   "(',' star_expr)",
   "(',' star_expr)*",
   "(',' test ':' test)",
   "(',' test ':' test)*",
   "(comp_for | (',' test ':' test)* ','?)",
   "(argument ',')",
   "(argument ',')*",
   "(',' argument)",
   "(',' argument)*",
   "(',' '**' test)",
   "(',' '**' test)?",
   "(argument ','? | '*' test (',' argument)* (',' '**' test)? | '**' test)",
   "comp_for?",
   "comp_iter?",
   "yield_arg?",
};

// Head symbol numbers for the productions.
const uint8 grm_head_numb[396] = {
       0,     1,     1,     1,     2,     3,     4,     5,     6,     7, 
       8,     9,     9,     9,    10,    11,    11,    11,    12,    13, 
      13,    14,    15,    15,    15,    15,    15,    15,    15,    15, 
      16,    17,    18,    18,    18,    18,    18,    18,    18,    18, 
      18,    18,    18,    18,    18,    19,    20,    21,    21,    21, 
      21,    21,    22,    23,    24,    25,    26,    27,    27,    28, 
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38, 
      38,    38,    38,    38,    38,    38,    38,    39,    40,    41, 
      42,    43,    44,    45,    46,    46,    47,    47,    48,    48, 
      49,    50,    51,    52,    53,    53,    54,    55,    55,    55, 
      55,    55,    55,    55,    55,    55,    55,    55,    56,    57, 
      58,    59,    60,    61,    62,    63,    63,    63,    63,    64, 
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65, 
      66,    67,    67,    67,    68,    69,    69,    70,    71,    72, 
      73,    73,    74,    75,    76,    76,    77,    77,    78,    79, 
      80,    81,    81,    82,    82,    83,    83,    83,    84,    84, 
      84,    84,    85,    85,    85,    86,    86,    87,    87,    88, 
      88,    89,    89,    90,    91,    91,    92,    92,    93,    93, 
      94,    95,    95,    96,    96,    97,    98,    98,    99,   100, 
     100,   101,   101,   102,   103,   103,   104,   104,   105,   105, 
     106,   107,   107,   108,   109,   109,   110,   111,   111,   112, 
     112,   113,   114,   114,   115,   115,   116,   116,   117,   118, 
     118,   119,   120,   120,   121,   121,   122,   122,   123,   123, 
     124,   125,   125,   126,   126,   127,   127,   128,   129,   129, 
     130,   130,   131,   131,   132,   133,   133,   134,   135,   135, 
     136,   136,   137,   137,   138,   138,   139,   139,   140,   140, 
     140,   141,   142,   142,   143,   144,   144,   145,   146,   146, 
     147,   148,   148,   149,   150,   150,   151,   152,   152,   153, 
     154,   154,   155,   156,   156,   157,   158,   158,   159,   160, 
     160,   161,   161,   162,   163,   163,   164,   165,   165,   166, 
     167,   167,   168,   168,   169,   170,   170,   171,   171,   172, 
     173,   173,   174,   175,   175,   176,   177,   177,   178,   178, 
     179,   180,   180,   181,   182,   182,   183,   184,   184,   185, 
     185,   186,   186,   187,   187,   188,   188,   189,   189,   189, 
     189,   189,   190,   190,   191,   191,   192,   193,   193,   194, 
     194,   195,   195,   196,   196,   197,   197,   198,   198,   199, 
     199,   200,   200,   201,   202,   202,   203,   203,   204,   204, 
     205,   206,   206,   207,   208,   208,   209,   209,   210,   211, 
     211,   212,   213,   213,   214,   215,   215,   216,   216,   216, 
     217,   217,   218,   218,   219,   219, 
};

// First tail symbol index into the tail list ...
const uint16 grm_f_tail[397] = {
       0,     2,     3,     4,     6,     7,     9,    13,    14,    16, 
      22,    25,    29,    33,    35,    37,    41,    45,    47,    48, 
      49,    50,    54,    55,    56,    57,    58,    59,    60,    61, 
      62,    64,    67,    68,    69,    70,    71,    72,    73,    74, 
      75,    76,    77,    78,    79,    80,    82,    83,    84,    85, 
      86,    87,    88,    89,    90,    92,    93,    95,    96,    97, 
      99,   103,   105,   107,   110,   112,   114,   117,   120,   123, 
     124,   125,   126,   127,   128,   129,   130,   131,   137,   142, 
     149,   153,   158,   160,   162,   163,   167,   169,   170,   171, 
     172,   176,   180,   182,   184,   186,   187,   189,   190,   191, 
     192,   193,   194,   195,   196,   197,   199,   200,   202,   204, 
     206,   208,   210,   212,   214,   216,   218,   220,   222,   223, 
     226,   229,   232,   235,   236,   237,   238,   239,   240,   241, 
     242,   244,   247,   250,   252,   255,   256,   260,   262,   265, 
     268,   272,   274,   279,   281,   283,   286,   287,   288,   293, 
     296,   298,   300,   301,   302,   303,   304,   305,   306,   307, 
     308,   309,   310,   311,   312,   313,   314,   315,   315,   317, 
     317,   319,   319,   320,   323,   323,   324,   325,   327,   328, 
     329,   331,   331,   332,   332,   333,   335,   335,   336,   339, 
     339,   341,   341,   342,   345,   345,   346,   350,   352,   352, 
     353,   355,   355,   356,   358,   358,   359,   362,   362,   364, 
     364,   365,   368,   368,   369,   373,   375,   375,   376,   378, 
     378,   379,   381,   381,   383,   383,   384,   385,   386,   387, 
     388,   390,   390,   392,   394,   395,   396,   397,   399,   399, 
     401,   401,   402,   402,   403,   405,   405,   406,   408,   408, 
     409,   410,   411,   411,   413,   414,   416,   418,   419,   420, 
     423,   424,   426,   426,   427,   429,   429,   431,   433,   433, 
     435,   437,   437,   439,   441,   441,   443,   445,   445,   446, 
     450,   450,   452,   455,   455,   456,   459,   460,   462,   465, 
     465,   466,   469,   472,   474,   474,   476,   478,   478,   479, 
     481,   481,   482,   483,   485,   489,   489,   490,   490,   491, 
     493,   493,   495,   497,   497,   499,   501,   501,   503,   503, 
     504,   506,   506,   508,   510,   510,   512,   514,   514,   516, 
     518,   520,   520,   522,   524,   526,   526,   528,   530,   532, 
     534,   536,   538,   538,   540,   540,   542,   544,   544,   545, 
     546,   547,   547,   548,   548,   549,   549,   550,   551,   553, 
     553,   555,   556,   558,   560,   560,   562,   562,   563,   563, 
     564,   566,   566,   568,   572,   572,   574,   575,   577,   579, 
     579,   581,   583,   583,   585,   588,   588,   589,   591,   595, 
     597,   597,   598,   598,   599,   599,   600, 
};

// Tail symbol numbers ...
const int16 grm_tail[600] = {
     -85,     1,     2,   -14,   -38,     2,   -87,   -72,   -88,     3, 
     -34,   -91,     2,   -92,    -5,   -93,     6,     7,    -8,   -95, 
       9,   -46,     4,   -96,     5,   -10,   -98,  -100,  -107,    12, 
    -101,  -100,  -103,    13,   -10,     7,  -109,   -12,   -98,  -111, 
    -118,    12,  -112,  -111,  -114,    13,   -12,     7,   -14,   -38, 
     -15,  -120,  -121,     2,   -16,   -19,   -20,   -21,   -27,   -35, 
     -36,   -37,   -17,  -126,  -127,  -129,  -130,    15,    16,    17, 
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27, 
      28,   -71,    29,   -22,   -23,   -24,   -26,   -25,    30,    31, 
      32,  -131,   -80,    33,  -135,   -28,   -29,    35,   -33,    34, 
    -139,    35,  -140,     7,  -142,   -34,  -142,   -30,  -144,  -130, 
     -31,  -146,     7,  -148,    39,     7,  -150,    40,     7,  -150, 
      41,   -47,  -152,   -39,   -40,   -41,   -42,   -43,    -7,   -74, 
      -6,    42,   -47,     9,   -46,  -154,  -156,    45,   -47,     9, 
     -46,  -156,    46,   -71,    47,   -72,     9,   -46,  -156,    48, 
       9,   -46,  -161,    50,   -44,  -163,     9,   -46,   -47,  -165, 
      51,  -167,   -14,     2,    52,  -168,    53,   -51,  -170,   -49, 
     -51,   -50,    54,  -171,     9,   -47,    54,  -171,     9,   -48, 
     -52,  -173,   -53,  -175,    57,   -53,   -54,   -56,  -177,    58, 
      59,    60,    61,    62,    63,    64,    47,    57,    47,    65, 
      65,    57,  -178,   -57,   -58,  -180,   -59,  -182,   -60,  -184, 
     -61,  -186,   -62,  -188,   -63,  -190,    71,   -63,    72,   -63, 
      76,   -63,   -64,   -65,  -191,  -193,     4,  -195,     5,    77, 
    -196,    78,    79,  -197,    80,     7,   -83,  -198,    37,    81, 
      82,    83,   -47,  -200,     4,   -89,     5,    77,   -68,    78, 
      36,     7,   -69,  -202,  -130,   -47,  -203,     9,  -203,  -204, 
       9,  -203,   -56,  -206,  -130,   -47,  -199,  -130,   -47,     9, 
     -47,  -209,   -47,  -200,    84,     7,   -91,     9,   -46,  -211, 
    -216,   -47,  -217,   -47,    10,   -47,   -78,   -79,    46,   -71, 
      47,   -51,  -218,    42,   -48,  -218,    85,  -219,    34,   -47, 
     -72,    86,    87,   -84,    88,    89,    90,    91,    92,    93, 
      -1,    -2,    -3,     2,   -13,   -87,   -86,   -88,     2,   -75, 
       4,   -89,     5,   -90,    -4,   -92,    -4,   -74,    -7,     8, 
     -47,   -94,    -9,    10,   -47,   -97,    11,   -10,   -98,  -100, 
     -99,   -10,    11,    13,   -10,  -102,    12,  -101,  -100,  -103, 
      13,   -10,  -104,    11,  -105,  -106,     9,   -47,  -108,    11, 
     -12,   -98,  -111,  -110,   -12,    11,    13,   -12,  -113,    12, 
    -112,  -111,  -114,    13,   -12,  -115,    11,  -116,  -117,    14, 
     -15,  -120,  -119,    14,   -80,   -72,   -80,   -17,    10,  -123, 
    -125,  -124,   -18,  -122,  -125,   -47,   -56,    11,  -127,  -129, 
    -128,    11,   -72,    34,   -47,  -132,   -47,  -133,  -134,    36, 
      37,  -137,  -136,  -136,  -138,  -136,  -137,   -34,  -138,    12, 
       4,   -32,     5,   -32,    38,     7,  -141,    11,   -30,  -144, 
    -143,    11,   -31,  -146,  -145,    36,     7,  -148,  -147,    11, 
       7,  -150,  -149,    11,   -47,  -151,    43,   -47,     9,   -46, 
    -154,  -153,    44,     9,   -46,  -155,   -45,     9,   -46,  -157, 
    -158,  -157,    49,     9,   -46,  -159,  -158,  -156,  -160,    49, 
       9,   -46,    11,   -44,  -163,  -162,    38,   -57,  -164,   -47, 
    -142,  -166,   -13,  -168,   -13,    42,   -51,    44,   -47,  -169, 
     -11,    55,   -52,  -173,  -172,    56,   -53,  -175,  -174,   -55, 
     -56,  -177,  -176,    12,    66,   -58,  -180,  -179,    67,   -59, 
    -182,  -181,    68,   -60,  -184,  -183,    69,   -61,    70,   -61, 
    -186,  -185,    71,   -62,    72,   -62,  -188,  -187,    12,   -63, 
      73,   -63,    74,   -63,    75,   -63,     3,   -63,  -190,  -189, 
    -191,   -67,    13,   -63,  -192,   -80,   -66,  -194,   -66,   -73, 
     -82,  -198,   -82,  -199,  -151,   -78,  -199,  -130,    11,   -69, 
    -202,  -201,   -47,   -70,    11,   -56,  -206,  -205,    11,   -47, 
       9,   -47,  -208,  -207,   -78,  -208,  -130,   -76,    11,  -211, 
    -210,    11,   -76,  -213,  -212,    11,    13,   -47,  -214,   -76, 
    -130,    12,   -47,  -213,  -215,    13,   -47,   -78,   -77,   -81, 
};

// Boolean matrix ...
const uint8 grm_Bm[236] = {
       0,     0,     0,     0,     0,     0,     2,     0,     0,     0, 
       0,     0,   128,     0,     0,     0,     0,    64,     0,     0, 
       0,   144,     0,    16,     0,     0,    26,     1,     4,     0, 
       0,     0,     0,     0,    64,     0,     0,     0,     0,     0, 
       8,     0,     0,     0,     0,     0,    76,    16,    71,     6, 
       9,   128,     0,    16,     0,     0,     8,     0,   128,    48, 
       0,     0,     0,     0,    16,     0,     0,     0,     0,    16, 
       0,     0,     9,     0,    16,     2,     0,     9,     0,   128, 
       0,     0,     0,     0,     0,    16,     0,     0,     9,   128, 
       0,     4,     0,     0,     0,     0,     4,     0,     0,     0, 
       8,    24,     0,     0,     0,     0,     0,     0,     1,     0, 
       0,    32,     0,     0,     0,   128,     0,    24,     0,     0, 
       0,    24,     0,     0,     0,     4,    16,     7,     0,     9, 
     128,    16,     0,     0,     0,     0,     0,    16,     7,     0, 
       9,   128,     0,     0,     0,     0,    32,     0,     8,    16, 
       0,     0,     0,     4,    16,    32,     8,     0,     0,    16, 
      32,     0,     0,     0,     0,     0,    32,     0,     2,     0, 
       4,     0,     0,   144,    16,     0,     0,     0,     0,    48, 
       0,     0,    10,     0,     0,     0,     0,     0,     1,     0, 
       0,     0,     0,     0,    33,     0,     0,    72,    16,    71, 
       6,     9,   128,     0,    48,     0,     0,     9,     0,   128, 
      32,     0,     0,     0,     0,   128,     1,     0,     0,    72, 
      16,    71,   134,     9,   128,     0,     4,     0,     4,     0, 
       0,    64,     4,     0,     0,     0, 
};

// Boolean matrix row (for state)...
const uint8 grm_Br[257] = {
       0,     6,     0,    11,     0,     0,    15,     0,     0,     0, 
      21,    28,    34,    40,    46,     0,    52,    58,    63,    68, 
      68,    73,    79,     0,    79,    79,    68,    68,    68,    63, 
       5,    68,    79,    79,    79,    33,    84,    90,    39,    39, 
      52,     2,    92,    97,     0,     0,     0,     0,     0,     0, 
       0,   102,    21,    21,    21,    84,    68,    68,    28,     0, 
       5,    90,    79,    79,     0,     0,     4,    68,     0,   109, 
       0,    94,   115,   119,     0,     0,    39,     5,     5,    37, 
     125,     0,   109,   131,   131,   131,    28,   136,    84,    68, 
      68,   105,    52,    52,    63,    37,    36,   142,    13,     8, 
     103,     1,   148,   154,   160,    93,   161,    29,   167,    68, 
       0,    68,     0,    39,    68,    39,    79,    38,   173,    39, 
      39,    68,   125,   125,    68,   176,    14,   181,    21,   187, 
      58,     5,     0,    28,    68,    21,    21,    21,    21,    21, 
      21,    21,    21,    21,    21,    21,    21,    21,     0,    68, 
      79,    39,    63,    68,    39,    39,    63,    79,    79,     0, 
      79,   109,    79,     0,   105,     5,   191,     5,    68,     5, 
     197,   125,    68,     5,    68,   160,    90,     5,    79,    79, 
     125,   160,   203,   160,   161,     0,     0,     5,    37,    93, 
      58,   209,    39,   160,   213,     5,   125,    61,   125,   109, 
     125,   219,   125,     0,    68,     0,    39,   225,    68,    68, 
      39,    68,    52,    39,    90,    79,    79,    79,    79,    68, 
     125,   105,     5,    39,    39,     0,    68,     0,    68,     5, 
     229,    68,     0,     5,   125,    58,   209,    39,    68,    68, 
       5,    39,   125,    90,    79,    79,    79,   203,   229,    58, 
      68,     0,    68,     5,    39,    68,     0, 
      };

// Boolean matrix column (displacement) ...
extern const uint8 grm_Bc[94];
const uint8 grm_Bc[94] = {
       0,     0,     0,     0,     0,     0,     0,     0,     1,     1, 
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2, 
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2, 
       2,     2,     2,     2,     3,     3,     3,     3,     3,     3, 
       3,     3,     3,     3,     4,     4,     4,     4,     4,     4, 
       4,     4,     4,     4,     4,     4,     4,     4,     4,     5, 
       5,     5,     5,     5,     5,     5,     5,     5,     5,     5, 
       5,     5,     5,     5,     0,     5,     6,     6,     5,     5, 
       5,     5,     5,     5, 
      };

// Boolean matrix filter/mask value ...
const uint8 grm_Bf[94] = {
       1,     2,     4,     8,    16,    32,    64,   128,     1,     2, 
       4,     8,    16,    32,    64,   128,   128,   128,   128,   128, 
     128,   128,   128,   128,   128,   128,   128,   128,     1,     1, 
       1,     1,     1,     1,     2,     4,     8,    16,    32,     1, 
       1,     1,    64,   128,     1,     2,     4,     8,     2,    16, 
       2,    32,    64,   128,     1,     2,     4,     8,    16,    16, 
      16,    16,    16,    16,    16,    16,    32,    64,   128,     1, 
       1,     2,     2,     4,     4,     4,     8,    16,    32,     8, 
      64,     8,     8,     8,    64,   128,     1,     1,     8,     8, 
       8,     8,     8,     8, 
};

// Terminal transition matrix ...
const int16 grm_Tm[320] = {
       0,     0,     0,   250,   255,  -261,   196,   190,  -133,   202, 
     225,  -270,   204,   228,  -273,   211,   231,   177,   242,   -18, 
     234,   236,   161,   198,   191,  -258,   177,   200,   218,   178, 
       0,     0,   246,     0,   217,   -18,   220,   235,   215,     0, 
       0,   179,   177,   238,   247,   244,    84,   171,   172,  -319, 
     216,    -6,     0,    83,   180,   162,   208,   245,   -21,  -259, 
      75,   153,   157,   142,     0,     0,     0,   160,   209,     0, 
       0,     0,   249,     0,     0,    16,     0,     0,   152,    17, 
       0,     0,    16,  -170,  -173,   -18,   122,   121,    62,  -107, 
     146,   114,     0,     0,     0,     0,     0,     0,     0,   239, 
      63,     0,     0,   152,  -104,   143,   144,   145,     0,     0, 
       0,     0,     0,     0,    95,   -97,   -98,   -99,  -100,  -101, 
    -102,  -103,    96,     0,     0,     0,     0,     0,     0,     0, 
     132,   226,   126,  -131,    74,   123,   156,  -319,    19,    20, 
      23,    22,   150,     0,     0,    24,    25,    26,     0,   147, 
       0,     0,     0,   212,     0,     0,     0,     0,     0,     0, 
      17,     0,     0,    16,     0,     0,     0,     0,     0,    18, 
     -46,   -52,     0,     0,     0,     0,     0,     0,     0,   148, 
       0,   -53,     0,   149,     0,     0,     0,     0,     0,     0, 
       0,    21,  -165,   -10,    70,   109,    90,  -319,    19,    20, 
      23,    22,  -250,  -251,   128,    24,    25,    26,    27,   219, 
     195,    28,    29,  -105,    30,   222,    31,   168,     0,   -85, 
      17,     0,     0,    16,    34,    32,     0,     0,     0,    18, 
     -46,   -52,     0,     0,     0,     0,     0,   140,   141,   130, 
     111,   -53,     0,     0,  -132,     0,     0,     0,     0,     0, 
      33,    21,    -3,  -120,  -123,    80,    89,  -319,   -33,   -34, 
      67,   118,   158,  -126,   116,   -35,   -36,   -37,    40,   252, 
     134,   -38,   152,   124,   -39,   169,   -40,   168,   170,   -41, 
      17,    92,    93,    16,    34,    32,   -42,   -43,   -44,   256, 
     174,    87,   135,   136,   137,   138,   139,    52,    53,    55, 
      88,   -32,    54,    56,  -121,    57,  -122,  -127,  -128,  -129, 
      33,    21,  -153,  -154,  -156,  -157,  -158,  -159,  -160,  -161, 
};

// Terminal transition matrix row ...
const uint8 grm_Tr[257] = {
     252,   252,   252,   252,   252,   252,   252,   252,   252,   252, 
     252,   252,   252,   252,   192,   252,   252,    83,   252,   252, 
     252,   252,   192,   252,   132,    58,   252,   252,   252,   252, 
     252,   252,    51,    44,   192,   252,   252,   252,   252,   192, 
     252,   252,   252,    83,   252,   252,   252,   252,   252,   252, 
     252,   252,   252,   252,   252,   252,   252,   252,    83,   252, 
     192,   192,    83,    83,   252,   252,    83,   252,   252,   252, 
     252,   252,   192,   192,   252,   252,    83,    83,   132,   252, 
     132,   252,   192,   192,    83,    83,    58,   192,   252,   252, 
     252,   252,   252,   252,   252,   192,    58,   252,   252,   252, 
     252,   192,    58,   132,   252,   252,   252,   252,    58,   252, 
     252,   252,   252,   132,   252,    58,     3,   252,    20,    51, 
      51,   252,   132,   132,   252,   252,   252,    44,   252,   252, 
      24,    51,   252,    51,   252,   252,   252,   252,   252,   252, 
     252,   252,   252,   252,   252,   252,   252,   252,   252,   252, 
       6,   192,   252,   252,     3,    20,   252,   192,     9,   252, 
      20,   252,    12,   252,   192,     3,   192,    20,   252,    24, 
     192,   132,   252,     6,   252,   192,   192,     9,    24,    24, 
     132,    83,    51,   132,   192,   252,   252,    12,   132,   252, 
      33,    17,    24,    58,   192,    33,   132,   192,   132,   252, 
     132,   192,   132,   252,   252,   252,     6,    83,   252,   252, 
       9,   252,   252,    12,   192,    83,    83,    83,    20,   252, 
     132,   192,    17,    33,    17,   252,   252,   252,   252,    40, 
      83,   252,   252,    15,   132,    40,    15,    40,   252,    44, 
       0,    20,   132,   192,    24,    24,    24,   252,    83,    83, 
     252,   252,   252,     1,    17,    44,   252, 
};

// Terminal transition matrix column ...
const uint8 grm_Tc[94] = {
      37,    37,     0,    32,    47,     1,    33,     2,    38,     3, 
      48,     4,     5,    17,    39,    49,     6,     7,    13,    14, 
      15,    19,    22,    24,    27,    34,    35,    36,    37,    38, 
      39,    49,     6,     7,     8,     9,    10,    11,    12,    13, 
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23, 
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33, 
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43, 
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53, 
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63, 
      64,    65,    66,    67, 
};

// Nonterminal transition matrix ...
const int16 grm_Nm[3046] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -315, 
    -370,    64,  -312,   -95,     0,    59,  -309,     8,   -95,     0, 
      59,     0,   230,     7,     8,   -95,   188,    59,  -276,     0, 
     -87,     0,     6,     7,     8,   -95,   -90,    59,   -87,     0, 
       6,     7,     8,   -95,  -185,    59,   -87,     0,     6,     7, 
       8,   -95,  -244,    59,   -87,     0,     6,     7,     8,   -95, 
    -304,    59,   -87,     0,     6,     7,     8,   -95,   189,    59, 
     -87,     0,     6,     7,     8,   -95,  -180,    59,   -87,     0, 
       6,     7,     8,   -95,  -203,    59,   -87,     0,     6,     7, 
       8,   -95,   227,    59,   -87,     0,     6,     7,     8,   -95, 
    -389,    59,   -87,     0,     6,     7,     8,   -95,   233,    59, 
     -87,     0,     6,     7,     8,   -95,  -145,    59,   -87,     0, 
       6,     7,     8,   -95,     0,    59,     0,     0,     0,     0, 
       0,    10,    10,    10,   240,     0,   -87,    10,     6,     7, 
       8,   -95,    10,    59,     0,     0,     0,     0,   248,    10, 
     -89,   -88,     7,     8,   -95,     0,    59,     0,     0,    10, 
       0,     0,     0,     0,  -373,     0,   -87,    10,     6,     7, 
       8,   -95,  -384,    59,   -87,    10,     6,     7,     8,   -95, 
       0,    59,   -91,    10,   -89,   -88,     7,     8,   -95,     0, 
      59,    10,     0,     0,     0,     0,  -235,     0,   -87,    10, 
       6,     7,     8,   -95,    65,     9,   -87,    10,     6,     7, 
       8,   -95,    82,    59,   -87,    10,     6,     7,     8,   -95, 
       0,    59,     0,    10,     0,     0,     0,     0,  -367,   165, 
     -87,    10,     6,     7,     8,   -95,  -367,    59,   -87,    10, 
       6,     7,     8,   -95,   207,    59,   -87,    10,     6,     7, 
       8,   -95,   199,    59,   -87,     0,     6,     7,     8,   -95, 
       0,    59,   186,     0,   -87,    10,     6,     7,     8,   -95, 
       0,    59,     0,  -381,     0,     0,  -237,     0,    10,     0, 
       0,     0,     0,   186,  -363,   -87,     0,     6,     7,     8, 
     -95,     0,    59,    64,     0,    10,     0,     0,  -330,    48, 
      49,  -118,    50,    10,   184,   185,     0,     0,    79,   207, 
       0,   -87,    10,     6,     7,     8,   -95,     0,    59,  -357, 
    -124,  -155,     0,     0,  -235,     0,   -87,    10,     6,     7, 
       8,   -95,     0,     9,     0,    10,     0,     0,   206,     0, 
       0,     0,     0,    10,     0,     0,     0,     0,    91,     7, 
       8,   -95,     0,    59,     0,     0,     0,  -228,     0,    10, 
    -337,  -118,    50,     0,     0,  -293,     0,    10,     0,     0, 
       0,  -301,   -83,     0,     0,    10,     0,     0,  -229,  -357, 
    -124,  -155,     0,    10,   229,     0,     0,     0,     0,     0, 
       0,     0,  -137,    10,     0,     0,     0,     0,     0,     0, 
    -230,     0,     0,     0,     4,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    10,    10,     0,     0,   187,     0, 
       0,     0,     0,     0,     0,  -151,     0,   -87,     0,     6, 
       7,     8,   -95,     0,    59,    51,     0,     0,     0,   187, 
      10,  -341,  -118,    50,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    10,     0,     0,     0,     0, 
    -357,  -124,  -155,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,  -380,     0,     0,    10,     0,     0,  -143,     0, 
       0,     0,    78,     0,   -87,     0,     6,     7,     8,   -95, 
       0,    59,     0,     0,     0,    51,  -329,    48,    49,  -118, 
      50,     0,     0,     0,     0,    82,     0,   -87,     0,     6, 
       7,     8,   -95,     0,    59,     0,     0,  -357,  -124,  -155, 
    -333,    49,  -118,    50,     0,     0,     0,     0,   105,     0, 
     -87,     0,     6,     7,     8,   -95,     0,    59,     0,     0, 
    -357,  -124,  -155,     0,  -339,  -118,    50,  -354,     0,     0, 
       0,     0,     0,   108,     0,   -87,    10,     6,     7,     8, 
     -95,     0,    59,  -357,  -124,  -155,     0,     0,     0,  -340, 
    -118,    50,     0,     0,     0,     0,    51,     0,     0,  -356, 
       0,     0,     0,     0,     0,     0,     0,     0,  -357,  -124, 
    -155,    77,     0,   -87,     0,     6,     7,     8,   -95,     0, 
      59,     0,     0,     0,  -326,    47,    48,    49,  -118,    50, 
       0,     0,     0,    10,    65,     0,   -87,     0,     6,     7, 
       8,   -95,     0,    59,     0,     0,  -357,  -124,  -155,  -334, 
      49,  -118,    50,    51,     0,     0,    10,     0,     0,  -227, 
       0,     0,     0,     0,     0,     0,     0,  -226,     0,  -357, 
    -124,  -155,     0,     0,     0,     0,    51,     0,    81,    10, 
       0,     0,     0,     0,   105,     0,   -87,     0,     6,     7, 
       8,   -95,     0,    59,     0,     0,     0,   106,     0,    51, 
    -338,  -118,    50,  -350,    10,     0,     0,     0,     0,  -233, 
       0,     0,     0,     0,     0,     0,     0,  -349,     0,  -357, 
    -124,  -155,     0,   107,    51,     0,     0,     0,     0,     0, 
       0,    76,     0,   -87,     0,     6,     7,     8,   -95,     0, 
      59,     0,    10,  -323,    46,    47,    48,    49,  -118,    50, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
    -308,     0,    51,     0,     0,    10,  -357,  -124,  -155,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    51,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,    64,     0,     0,     0,     0,    61,     0,  -116,  -118, 
      50,     0,     0,     0,  -377,    10,   -45,     0,   243,     0, 
       0,     0,     0,  -391,     0,     0,     0,  -357,  -124,  -155, 
       0,  -352,   104,     0,     0,    51,     0,     0,     0,     0, 
       0,     0,  -187,  -188,     0,     0,     0,     0,     0,  -199, 
    -200,     0,     0,     0,     0,   253,     0,     0,     0,     0, 
    -217,  -218,    10,     0,     0,     0,     0,   214,     0,     0, 
       0,     0,     0,     0,     0,  -362,     0,     0,     0,     0, 
       0,     0,    51,     0,     0,     0,     0,     0,     0,     0, 
       0,  -375,     0,     0,     0,     0,  -360,     0,  -267,     0, 
    -284,   -79,    65,     0,   -87,     0,     6,     7,     8,   -95, 
       0,    59,     0,     0,     0,     0,     0,     0,  -117,  -118, 
      50,     0,     0,    10,     0,     0,     0,  -243,  -192,     0, 
       0,     0,  -393,  -146,  -147,     0,     0,  -357,  -124,  -155, 
      69,     0,     0,    51,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   251,     0,     0,     0, 
       0,     0,  -144,     0,     0,     0,     0,   232,     0,     0, 
       0,     0,     0,     0,  -235,     0,   -87,  -210,     6,     7, 
       8,   -95,     0,     9,     0,   -63,   -54,     0,    65,     0, 
     -87,     0,     6,     7,     8,   -95,     0,    59,  -266,  -320, 
      45,    46,    47,    48,    49,  -118,    50,   -55,  -221,     0, 
       0,     0,     0,  -152,  -193,     0,     0,     0,     0,     0, 
     -22,     0,  -395,  -357,  -124,  -155,     0,     0,     3,     0, 
       0,   -23,   -24,    10,     0,     0,     0,     0,     0,   -25, 
       0,     0,   -47,   -48,     0,     0,     0,     0,     0,     0, 
     -49,     0,     0,    51,     4,     0,     0,     0,   -51,     0, 
       0,   -50,   -26,  -211,     0,     0,     0,     0,     0,     0, 
     -57,  -134,     0,  -148,     0,  -235,     0,   -87,     0,     6, 
       7,     8,   -95,     0,     9,     0,     0,     0,     0,     0, 
       0,     0,     0,   -58,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    10,     0,   -84,   -55,     2, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,    10, 
       0,   -22,     0,   -27,   -28,     0,     0,     0,   -29,     3, 
       0,     0,   -23,   -24,     0,     0,     0,     0,     0,    51, 
     -25,     0,  -365,   -47,   -48,     0,     0,     0,     0,     0, 
       0,   -49,     0,     0,     0,     4,     0,     0,     0,   -51, 
    -150,     0,   -50,   -26,     0,     0,     0,     0,     0,     0, 
       0,   -57,     0,     0,     0,     0,  -235,     0,   -87,     0, 
       6,     7,     8,   -95,     0,     9,     0,     0,     0,     0, 
       0,     0,     0,     0,   -58,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    10,     0,   -84,   -55, 
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   -22,     0,   -27,   -28,     0,     0,     0,   -29, 
       3,     0,     0,   -23,   -24,     0,     0,     0,     0,     0, 
       0,   -25,     0,     0,   -47,   -48,     0,   163,     0,     0, 
       0,     0,   -49,     0,     0,     0,     4,     0,     0,     0, 
     -51,     0,     0,   -50,   -26,     0,     0,     0,     0,     0, 
       0,     0,   -57,     0,     0,     0,     0,  -235,     0,   -87, 
       0,     6,     7,     8,   -95,     0,     9,     0,     0,     0, 
       0,     0,     0,     0,     0,   -58,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,    10,     0,   -84, 
     -55,     2,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -22,     0,   -27,   -28,     0,     0,     0, 
     -29,     3,     0,     0,   -23,   -24,     0,     0,     0,     0, 
       0,     0,   -25,     0,     0,   -47,   -48,     0,   164,     0, 
       0,     0,     0,   -49,     0,     0,     0,     4,     0,     0, 
       0,   -51,     0,     0,   -50,   -26,     0,     0,     0,     0, 
       0,     0,     0,   -57,     0,     0,     0,     0,  -235,     0, 
     -87,     0,     6,     7,     8,   -95,     0,     9,     0,     0, 
       0,     0,     0,     0,     0,     0,   -58,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,    10,     0, 
     -84,   -55,     2,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   -22,     0,   -27,   -28,     0,     0, 
       0,   -29,     3,     0,     0,   -23,   -24,     0,     0,     0, 
       0,     0,     0,   -25,     0,     0,   -47,   -48,     0,   -81, 
       0,     0,     0,     0,   -49,     0,     0,     0,     4,     0, 
       0,     0,   -51,     0,     0,   -50,   -26,     0,     0,     0, 
       0,     0,     0,     0,   -57,     0,     0,     0,     0,  -235, 
       0,   -87,     0,     6,     7,     8,   -95,     0,     9,     0, 
       0,     0,     0,     0,     0,     0,     0,   -58,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,    10, 
       0,   -84,   -55,     2,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   -22,     0,   -27,   -28,     0, 
       0,     0,   -29,     3,     0,     0,   -23,   -24,     0,     0, 
       0,     0,     0,     0,   -25,     0,     0,   -47,   -48,     0, 
    -142,     0,     0,     0,     0,   -49,     0,     0,     0,     4, 
       0,     0,     0,   -51,     0,     0,   -50,   -26,     0,     0, 
       0,     0,     0,     0,     0,   -57,     0,     0,     0,     0, 
    -235,     0,   -87,     0,     6,     7,     8,   -95,     0,     9, 
       0,     0,     0,     0,     0,     0,     0,     0,   -58,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
      10,     0,   -84,   -55,     2,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   -22,     0,   -27,   -28, 
       0,     0,     0,   -29,     3,     0,     0,   -23,   -24,     0, 
       0,     0,     0,     0,     0,   -25,     0,     0,   -47,   -48, 
       0,   221,     0,     0,     0,     0,   -49,     0,     0,     0, 
       4,     0,     0,     0,   -51,     0,     0,   -50,   -26,     0, 
       0,     0,     0,     0,     0,     0,   -57,     0,     0,     0, 
       0,  -235,     0,   -87,     0,     6,     7,     8,   -95,     0, 
       9,     0,     0,     0,     0,     0,     0,     0,     0,   -58, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,    10,     0,   -84,   -55,     2,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   -22,     0,   -27, 
     -28,     0,     0,     0,   -29,     3,     0,     0,   -23,   -24, 
       0,     0,     0,     0,     0,     0,   -25,     0,     0,   -47, 
     -48,     0,  -285,     0,     0,     0,     0,   -49,     0,     0, 
       0,     4,     0,     0,     0,   -51,     0,     0,   -50,   -26, 
       0,     0,     0,     0,     0,     0,     0,   -57,     0,     0, 
       0,     0,  -235,     0,   -87,     0,     6,     7,     8,   -95, 
       0,     9,     0,     0,     0,     0,     0,     0,     0,     0, 
     -58,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    10,     0,   -84,   -55,     2,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   -22,     0, 
     -27,   -28,     0,     0,     0,   -29,     3,     0,     0,   -23, 
     -24,     0,     0,     0,     0,     0,     0,   -25,     0,     0, 
     -47,   -48,     0,  -292,     0,     0,     0,     0,   -49,     0, 
       0,     0,     4,     0,     0,     0,   -51,     0,     0,   -50, 
     -26,     0,     0,     0,     0,     0,     0,     0,   -57,     0, 
       0,     0,     0,  -235,     0,   -87,     0,     6,     7,     8, 
     -95,     0,     9,     0,     0,     0,     0,     0,     0,     0, 
       0,   -58,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,    10,     0,   -84,   -55,     2,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   -22, 
       0,   -27,   -28,     0,     0,     0,   -29,     3,     0,     0, 
     -23,   -24,     0,     0,     0,     0,     0,     0,   -25,     0, 
       0,   -47,   -48,     0,    -9,     0,     0,     0,     0,   -49, 
       0,     0,     0,     4,     0,     0,     0,   -51,     0,     0, 
     -50,   -26,     0,     0,     0,     0,     0,     0,     0,   -57, 
       0,     0,     0,     0,  -235,     0,   -87,     0,     6,     7, 
       8,   -95,     0,     9,     0,     0,     0,     0,     0,     0, 
       0,     0,   -58,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    10,     0,   -84,   -55,     2,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     -22,     0,   -27,   -28,     0,     0,     0,   -29,     3,     0, 
       0,   -23,   -24,     0,     0,     0,     0,     0,     0,   -25, 
       0,     0,   -47,   -48,     0,  -282,     0,     0,     0,     0, 
     -49,     0,     0,     0,     4,     0,     0,     0,   -51,     0, 
       0,   -50,   -26,     0,     0,     0,     0,     0,     0,     0, 
     -57,     0,     0,     0,     0,  -235,     0,   -87,     0,     6, 
       7,     8,   -95,     0,     9,     0,     0,     0,     0,     0, 
       0,     0,     0,   -58,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    10,     0,   -84,   -55,     2, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   -22,     0,   -27,   -28,     0,     0,     0,   -29,     3, 
       0,     0,   -23,   -24,     0,     0,     0,     0,     0,     0, 
     -25,     0,     0,   -47,   -48,     0,  -288,     0,     0,     0, 
       0,   -49,     0,     0,     0,     4,     0,     0,     0,   -51, 
       0,     0,   -50,   -26,     0,     0,     0,     0,     0,     0, 
       0,   -57,     0,    66,     0,   -87,     0,     6,     7,     8, 
     -95,     0,    59,  -296,    44,    45,    46,    47,    48,    49, 
    -118,    50,     0,     0,   -58,     0,     0,     0,     0,  -197, 
       0,     0,     0,  -393,  -146,  -147,    10,     0,  -357,  -124, 
    -155,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   -27,   -28,     0,     0,     0,   -29, 
       0,     0,     0,  -235,     0,   -87,     0,     6,     7,     8, 
     -95,     0,     9,     0,     0,     0,     0,  -279,  -215,  -346, 
    -118,    50,     0,     0,     0,     0,  -387,     0,     0,     0, 
    -249,   -56,     0,     0,     0,   -84,   -55,     2,  -357,  -124, 
    -155,     0,     0,     0,     0,     0,     0,     0,     0,   -22, 
       0,     0,     0,     0,     0,     0,     0,     3,     0,     0, 
     -23,   -24,     0,     0,     0,     0,     0,     0,   -25,     0, 
       0,   -47,   -48,     0,    10,     0,     0,     0,     0,   -49, 
       0,     0,     0,     4,     0,     0,     0,   -51,     0,     0, 
     -50,   -26,     0,     0,    51,     0,     0,     0,     0,   -57, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -149,     0,     0,     0,     0,     0, 
       0,     0,   -58,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    10,     0,     0,  -235,  -176,   -87, 
      12,     6,     7,     8,   -95,     0,     9,     0,     0,     0, 
       0,     0,   -27,   -28,    51,     0,   -76,   -29,   -74,     0, 
       0,     0,     0,     0,   -75,     0,     0,  -303,     0,   -19, 
     -55,     2,     0,     0,     0,   125,     0,     0,     0,     0, 
       0,     0,    13,   -22,     0,     0,     0,     0,     0,     0, 
       0,     3,     0,     0,   -23,   -24,     0,     0,     0,     0, 
       0,     0,   -25,     0,     0,   -47,   -48,     0,     0,     0, 
       0,     0,     0,   -49,     0,     0,     0,     4,     0,     0, 
       0,   -51,     0,     0,   -50,   -26,     0,     0,     0,     0, 
       0,     0,     0,   -57,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -235,  -176,   -87,    12,     6,     7, 
       8,   -95,     0,     9,     0,     0,   -58,     0,     0,     0, 
       0,     0,     0,   -76,     0,   -74,     0,     0,    10,     0, 
       0,   -75,     0,     0,  -302,     0,   -19,   -55,     2,     0, 
       0,     0,     0,     0,     0,     0,   -27,   -28,     0,    13, 
     -22,   -29,     0,   -20,     0,     0,     0,   -69,     3,     0, 
     -70,   -23,   -24,     0,     0,     0,   -71,   -72,   -73,   -25, 
       0,     0,   -47,   -48,     0,     0,     0,  -177,     0,     0, 
     -49,     0,   -94,   -95,     4,    59,     0,     0,   -51,     0, 
       0,   -50,   -26,     0,     0,     0,     0,  -179,     0,     0, 
     -57,     0,  -192,  -178,  -172,     0,     0,  -361,     0,     0, 
       0,  -358,     0,     0,     0,     0,     0,     0,   183,  -175, 
     133,     0,    -8,   -58,     0,   201,  -187,   203,  -190,   224, 
     205,  -195,  -196,     0,     0,    10,     0,     0,     0,  -208, 
     155,   112,  -213,  -214,     0,     0,     0,     0,     0,     0, 
       0,  -210,     0,   -27,   -28,     0,     0,     0,   -29,  -139, 
     -20,     0,     0,     0,   -69,  -255,     0,   -70,     0,     0, 
    -263,   -61,     0,   -71,   -72,   -73,     0,     0,     0,   120, 
    -360,     0,     0,     0,  -284,   197,  -287,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   159,   193,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,    10,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    85,     0,     0,     0,   151,  -130, 
       0,     0,     0,     0,   167,     0,     0,     0,     0,     0, 
     182,  -235,  -176,   -87,    12,     6,     7,     8,   -95,     0, 
       9,     0,     0,     0,     0,     0,     0,  -115,  -118,    50, 
     -76,     0,   -74,     0,     0,     0,     0,   -13,   -75,     0, 
       0,  -166,  -361,   -19,   -55,     2,  -357,  -124,  -155,     0, 
    -168,     0,     0,     0,     0,     0,    13,   -22,     0,     0, 
       0,  -187,  -206,     0,   254,     3,     0,     0,   -23,   -24, 
       0,     0,     0,     0,     0,   241,   -25,     0,     0,   -47, 
     -48,     0,     0,     0,     0,     0,   -17,   -49,     0,     0, 
       0,     4,     0,     0,  -138,   -51,     0,     0,   -50,   -26, 
    -253,     0,     0,     0,     0,  -263,  -299,   -57,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,  -281,     0,  -284, 
     -77,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     -58,  -264,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    10,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -256, 
     -27,   -28,    51,   151,  -141,   -29,     0,   -20,     0,  -372, 
       0,   -69,     0,     0,   -70,     0,     0,     0,     0,     0, 
     -71,   -72,   -73,     5,  -176,   -87,    12,     6,     7,     8, 
     -95,    94,     9,  -108,    44,    45,    46,    47,    48,    49, 
    -118,    50,   -76,  -345,   -74,   129,  -369,  -184,    15,   176, 
     -75,  -172,  -308,  -162,  -376,    -2,   -55,     2,  -357,  -124, 
    -155,     1,    36,    14,    58,   181,  -175,   131,    13,   -22, 
    -182,   173,   175,  -187,   110,  -190,   223,     3,  -195,   -12, 
     -23,   -24,  -202,   -11,  -205,   -14,  -208,   154,   -25,  -213, 
     -16,   -47,   -48,  -220,   -15,  -223,    35,    86,    61,   -49, 
    -232,    37,   -30,     4,  -239,    38,   -31,   -51,  -246,  -247, 
     -50,   -26,  -254,    72,    73,    71,   -60,  -263,   -62,   -57, 
     192,  -269,   115,  -272,   117,  -275,   119,  -278,   -68,    68, 
     194,  -284,   -78,  -286,   166,  -290,  -291,   -80,  -295,   127, 
    -298,   -82,   -58,   159,  -260,  -306,   -86,    60,  -311,    41, 
    -314,    42,  -317,    43,    10,  -322,    97,  -325,    98,  -328, 
      99,  -332,   100,  -336,   101,  -343,   102,   103,  -348,  -119, 
     -59,    69,   -27,   -28,    51,    39,  -163,   -29,   210,    11, 
    -136,   167,   113,   -69,   213,  -140,   -70,   182,  -383,   237, 
    -386,  -388,   -71,   -72,   -73,  -164, 
};

// Nonterminal transition matrix row ...
const uint16 grm_Nr[257] = {
 2873,  2873,  2873,  2873,  2873,  2873,  2873,  2873,  2873,  2873, 
 2873,  2873,  2536,  2536,  2701,  2873,  2536,  2873,   772,   882, 
 2163,   968,  2873,  2873,  2873,  2873,   711,   591,   482,   284, 
 2873,   505,  2873,  2873,  2536,  2873,   614,  2873,  2873,  2536, 
  344,  2873,  2873,  2873,  2873,  2873,  2873,  2873,  2873,  2873, 
 2873,  2536,  2701,   772,   882,   664,   528,   553,  2873,  2873, 
 2873,  2873,  2536,  2701,  2873,  2873,  2873,   425,  2873,  2873, 
 2873,  2873,  2701,  2536,  2873,  2536,  2873,  2873,  2873,  2873, 
 2223,  2873,  2873,  2873,  2873,  2536,  2873,   954,   324,   196, 
   28,  2873,    11,     6,     0,  2873,  2873,  2873,  2873,  2873, 
 2873,  2873,  2873,  2873,  2873,  2536,  2873,  2873,  2701,    36, 
 2873,    44,  2536,  2701,    52,  2873,  2873,  2873,  2873,  2873, 
 2873,    28,  1055,  1156,   204,  2873,  2873,  2873,  2163,  2873, 
 2873,  2873,  2873,  2873,    60,   968,   711,   591,   482,   284, 
  505,   614,   344,   664,   528,   553,   425,  2223,  2536,   283, 
 2873,   772,     2,    68,  2873,  2873,     1,   772,  2873,  2873, 
 2536,  2536,  2873,  2873,  2873,  2873,  2536,  2873,   252,  2873, 
 2464,  1257,   212,  2873,    76,  2873,  2536,  2873,  2536,  2701, 
 1358,  2873,   309,  2873,  2873,  2873,  2873,  2873,  2873,  2873, 
  772,   772,   882,  2873,  2701,  2873,  1459,  2873,  1560,  2701, 
 1661,  2357,  1762,  2873,    84,  2536,  2163,   772,    92,   100, 
  968,   228,    18,   711,  2701,   882,  2163,   968,  2701,   108, 
 1863,   772,  2873,  2873,  2873,  2873,   116,  2873,   262,  2873, 
  882,   134,  2701,  2873,  1964,   772,   772,  2873,   236,   147, 
 2873,  2536,  2065,   772,   882,  2163,   968,   244,  2163,   711, 
  164,  2701,   172,  2873,  2536,   181,  2873, 
};

// Nonterminal transition matrix column ...
const uint8 grm_Nc[396] = {
   30,    30,    30,    30,   153,   172,     1,     3,    19,    21, 
   22,    24,    24,    24,    26,    29,    29,    29,    75,    30, 
   30,    32,    34,    34,    34,    34,    34,    34,    34,    34, 
   46,    54,    39,    39,    39,    39,    39,    39,    39,    39, 
   39,    39,    39,    39,    39,    57,    58,    65,    65,    65, 
   65,    65,    68,    69,    76,    84,    87,    88,    88,    96, 
  119,   120,   106,   121,   147,   148,   149,   150,   154,   156, 
  156,   156,   156,   156,   156,   156,   156,   160,   163,   169, 
  170,   171,   153,   158,   172,   172,     0,     0,     1,     1, 
    2,     3,     4,     5,     6,     6,     7,     8,     8,     8, 
    8,     8,     8,     8,     8,     8,     8,     8,     9,    10, 
   11,    12,    13,    14,    15,    16,    16,    16,    16,    17, 
   18,    18,    18,    18,    18,    18,    18,    18,    18,    18, 
   19,    20,    20,    20,    21,    22,    22,    23,    24,    25, 
   26,    26,    27,    28,    29,    29,    30,    30,    31,    32, 
   33,    34,    34,    35,    35,    36,    36,    36,    37,    37, 
   37,    37,    38,    38,    38,    39,    39,    40,    40,    41, 
   41,    42,    42,    43,    44,    44,    45,    45,    46,    46, 
   47,    48,    48,    49,    49,    50,    51,    51,    52,    53, 
   53,    54,    54,    55,    56,    56,    57,    57,    58,    58, 
   59,    60,    60,    61,    62,    62,    63,    64,    64,    65, 
   65,    66,    67,    67,    68,    68,    69,    69,    70,    71, 
   71,    72,    73,    73,    74,    74,    75,    75,    76,    76, 
   77,    78,    78,    79,    79,    80,    80,    81,    82,    82, 
   83,    83,    84,    84,    85,    86,    86,    87,    88,    88, 
   89,    89,    90,    90,    91,    91,    92,    92,    93,    93, 
   93,    94,    95,    95,    96,    97,    97,    98,    99,    99, 
  100,   101,   101,   102,   103,   103,   104,   105,   105,   106, 
  107,   107,   108,   109,   109,   110,   111,   111,   112,   113, 
  113,   114,   114,   115,   116,   116,   117,   118,   118,   119, 
  120,   120,   121,   121,   122,   123,   123,   124,   124,   125, 
  126,   126,   127,   128,   128,   129,   130,   130,   131,   131, 
  132,   133,   133,   134,   135,   135,   136,   137,   137,   138, 
  138,   139,   139,   140,   140,   141,   141,   142,   142,   142, 
  142,   142,   143,   143,   144,   144,   145,   146,   146,   147, 
  147,   148,   148,   149,   149,   150,   150,   151,   151,   152, 
  152,   153,   153,   154,   155,   155,   156,   156,   157,   157, 
  158,   159,   159,   160,   161,   161,   162,   162,   163,   164, 
  164,   165,   166,   166,   167,   168,   168,   169,   169,   169, 
  170,   170,   171,   171,   172,   172, 
};

// Reduction matrix ...
const uint16 grm_Rm[368] = {
       0,   167,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359, 
       0,     0,     0,     0,     0,   235,     0,     0,   235,   235, 
       0,     0,     0,     0,     0,   316,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   316,   316,   316,     0, 
       0,     4,     0,   318,     0,   318,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   242,   318,     0, 
     318,     0,     0,     0,     0,   242,     0,     0,     0,     0, 
       0,     0,   248,   318,     0,   318,     0,     0,     0,     0, 
     248,     0,     0,     0,     0,     0,     0,   394,   318,   394, 
     318,     0,   394,     0,     0,   394,     0,     0,     0,     0, 
       0,     0,   252,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   318,   351,   318,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   318,     0, 
     318,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     353,     0,     0,     0,   318,     0,   318,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   355,     0,     0, 
     225,   318,     0,   318,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   241,   318,     0,   318,     0, 
     241,     0,     0,   241,   241,     0,     0,     0,     0,     0, 
     241,   241,   318,   241,   318,   241,   241,     0,     0,   241, 
       0,     0,     0,     0,   241,   241,     0,     0,     0,   379, 
     171,   379,     0,     0,     0,   379,     0,     0,     0,     0, 
     379,     0,     0,     0,   318,     0,   318,   366,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   241,   318, 
       0,   318,     0,     0,     0,     0,   241,     0,     0,   241, 
       0,     0,     0,   318,     0,   318,   300,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   367,     0,   135, 
       0,     0,     0,     0,     0,     0,   135,     0,     0,     0, 
     318,     0,   318,   366,     0,   366,     0,     0,     0,     0, 
       0,     0,   366,     0,     0,     0,   378,   241,   378,     0, 
       0,     0,   378,     0,     0,     0,     0,   378,     0,     0, 
       0,   318,     0,   318,   366,     0,     0,     0,     0,     0, 
       0,     0,     0,   241,     0,     0,     0,   318,     0,   318, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     241,     0,     0,     0,   318,     0,   318,     0,     0,   366, 
       0,     0,     0,     0,     0,     0,   366,     0, 
};

// Reduction matrix row ...
const int16 grm_Rr[257] = {
       0,    -2,   222,   231,   238,   -18,   305,   310,   313,   -34, 
      -2,    -2,    -2,     7,   -50,   169,   318,   307,   318,   -65, 
     -80,   -95,    -2,  -107,    -2,    -2,   318,   318,   318,   318, 
      -2,   318,    -2,    -2,    -2,   224,   318,   234,   240,   240, 
     318,    92,    93,    96,   321,   324,   327,   331,   335,   342, 
     344,   125,    -2,    -2,    -2,  -121,  -135,  -151,     5,   316, 
      -2,   186,   209,    -2,   371,   359,   245,   318,   268,   262, 
     271,    -2,    -2,   257,   274,   274,   277,    -2,    -2,    -2, 
     318,   294,   297,    -2,   174,   174,    -2,  -168,   318,  -183, 
    -199,    -2,   318,   318,   318,    -2,   106,   109,   110,   111, 
     112,   113,   114,   347,    -2,   359,    -2,    -2,   359,   318, 
     207,   318,   207,   240,   318,    64,    -2,    65,    -2,    66, 
      67,   318,   318,   318,   318,    -2,    -2,    -2,    -2,   181, 
     183,    -2,  -216,    -2,   318,    -2,    -2,    -2,    -2,    -2, 
      -2,    -2,    -2,    -2,    -2,    -2,    -2,    -2,  -216,  -231, 
      -2,   240,   318,   318,   219,   212,  -246,    -2,    -2,   265, 
      -2,   262,    -2,   280,   283,    -2,   283,    -2,  -260,    -2, 
     318,   318,   318,    -2,   318,    -2,   186,   204,   191,    -2, 
     318,    -2,   318,    -2,    -2,   364,  -271,    -2,    -2,   374, 
     216,    -2,   240,    -2,   283,    -2,   318,   289,   318,   262, 
     318,   318,   318,   189,   318,   189,   240,   390,    -2,   318, 
     240,  -287,   318,   240,   186,   209,    -2,    -2,   241,   318, 
     318,   283,    -2,   201,   194,  -303,   318,   382,  -318,   368, 
     392,  -334,   207,    -2,   318,   198,    -2,   385,  -351,   318, 
      -2,   212,   318,   186,   191,    -2,    -2,   318,   392,   307, 
     318,   189,   318,    -2,   194,   318,    -2, 
};

// Reduction matrix column ...
const uint8 grm_Rc[94] = {
       0,     1,     2,     0,     3,     4,     0,     5,     0,     6, 
       7,     8,     9,     9,    10,    11,    11,    11,    11,    11, 
      11,    11,    11,    11,    11,    11,    11,    11,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     3,     0,     0, 
       0,     0,    12,     0,     0,     0,     0,    13,     0,     0, 
       0,     0,     0,     0,     9,    12,    12,    14,    12,    12, 
      12,    12,    12,    12,    12,    12,     0,     0,     0,     0, 
       0,     3,     3,     0,     0,     0,     3,     3,    15,     3, 
      16,     3,     3,     3,     0,     0,     3,     3,     3,     3, 
       3,     3,     3,     3, 
};

// Production lengths (minus one) ...
const int8 grm_PL[396] = {
       1,     0,     0,     1,     0,     1,     3,     0,     1,     5, 
       2,     3,     3,     1,     1,     3,     3,     1,     0,     0, 
       0,     3,     0,     0,     0,     0,     0,     0,     0,     0, 
       1,     2,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     1,     0,     0,     0,     0, 
       0,     0,     0,     0,     1,     0,     1,     0,     0,     1, 
       3,     1,     1,     2,     1,     1,     2,     2,     2,     0, 
       0,     0,     0,     0,     0,     0,     0,     5,     4,     6, 
       3,     4,     1,     1,     0,     3,     1,     0,     0,     0, 
       3,     3,     1,     1,     1,     0,     1,     0,     0,     0, 
       0,     0,     0,     0,     0,     1,     0,     1,     1,     1, 
       1,     1,     1,     1,     1,     1,     1,     1,     0,     2, 
       2,     2,     2,     0,     0,     0,     0,     0,     0,     0, 
       1,     2,     2,     1,     2,     0,     3,     1,     2,     2, 
       3,     1,     4,     1,     1,     2,     0,     0,     4,     2, 
       1,     1,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,    -1,     1,    -1, 
       1,    -1,     0,     2,    -1,     0,     0,     1,     0,     0, 
       1,    -1,     0,    -1,     0,     1,    -1,     0,     2,    -1, 
       1,    -1,     0,     2,    -1,     0,     3,     1,    -1,     0, 
       1,    -1,     0,     1,    -1,     0,     2,    -1,     1,    -1, 
       0,     2,    -1,     0,     3,     1,    -1,     0,     1,    -1, 
       0,     1,    -1,     1,    -1,     0,     0,     0,     0,     0, 
       1,    -1,     1,     1,     0,     0,     0,     1,    -1,     1, 
      -1,     0,    -1,     0,     1,    -1,     0,     1,    -1,     0, 
       0,     0,    -1,     1,     0,     1,     1,     0,     0,     2, 
       0,     1,    -1,     0,     1,    -1,     1,     1,    -1,     1, 
       1,    -1,     1,     1,    -1,     1,     1,    -1,     0,     3, 
      -1,     1,     2,    -1,     0,     2,     0,     1,     2,    -1, 
       0,     2,     2,     1,    -1,     1,     1,    -1,     0,     1, 
      -1,     0,     0,     1,     3,    -1,     0,    -1,     0,     1, 
      -1,     1,     1,    -1,     1,     1,    -1,     1,    -1,     0, 
       1,    -1,     1,     1,    -1,     1,     1,    -1,     1,     1, 
       1,    -1,     1,     1,     1,    -1,     1,     1,     1,     1, 
       1,     1,    -1,     1,    -1,     1,     1,    -1,     0,     0, 
       0,    -1,     0,    -1,     0,    -1,     0,     0,     1,    -1, 
       1,     0,     1,     1,    -1,     1,    -1,     0,    -1,     0, 
       1,    -1,     1,     3,    -1,     1,     0,     1,     1,    -1, 
       1,     1,    -1,     1,     2,    -1,     0,     1,     3,     1, 
      -1,     0,    -1,     0,    -1,     0, 
};

// Nondeterministic first terminal in the list ...
const uint8 grm_nd_fterm[258] = {
       0,    43,    43,    43,    43,    43,    45,    45,    45,    45, 
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62, 
      62,    62,    62,    62,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    83, 
      83,    83,    83,    83,    83,    83,    83,    83,    83,    83, 
      83,    83,    83,    83,    83,    83,    83,    83,    83,    83, 
      83,    83,    83,    83,    83,    83,    83,    83,    83,    83, 
      83,    83,    83,    83,    83,    83,    83,    83,    83,    83, 
      83,    83,    83,    83,    83,    83,    83,    83, 
};

// Nondeterministic terminal list ...
const uint8 grm_nd_term[83] = {
       2,     3,     4,     6,     7,    12,    28,    29,    30,    31, 
      32,    33,    34,    35,    37,    39,    40,    41,    42,    45, 
      46,    48,    50,    54,    57,    71,    72,    76,    77,    79, 
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90, 
      91,    92,    93,     2,    11,     2,    10,    11,    14,    15, 
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25, 
      26,    27,    36,    37,     4,     7,    37,    71,    72,    76, 
      77,    79,    81,    82,    83,    86,    87,    88,    89,    90, 
      91,    92,    93, 
};

// Nondeterministic first action in the list ...
const uint8 grm_nd_faction[84] = {
       0,     2,     4,     6,     8,    10,    12,    14,    16,    18, 
      20,    22,    24,    26,    28,    30,    32,    34,    36,    38, 
      40,    42,    44,    46,    48,    50,    52,    54,    56,    58, 
      60,    62,    64,    66,    68,    70,    72,    74,    76,    78, 
      80,    82,    84,    86,    88,    90,    92,    94,    96,    98, 
     100,   102,   104,   106,   108,   110,   112,   114,   116,   118, 
     120,   122,   124,   126,   128,   130,   132,   134,   136,   138, 
     140,   142,   144,   146,   148,   150,   152,   154,   156,   158, 
     160,   162,   164,   166, 
};

// Nondeterministic actions list ...
const int16 grm_nd_action[166] = {
     257,  -167,    34,  -167,  -318,  -167,    32,  -167,  -318,  -167, 
     575,  -167,    18,  -167,   302,  -167,   308,  -167,   309,  -167, 
      19,  -167,    20,  -167,    23,  -167,    22,  -167,  -318,  -167, 
      24,  -167,    25,  -167,    26,  -167,    27,  -167,    28,  -167, 
      29,  -167,    30,  -167,    31,  -167,    17,  -167,    16,  -167, 
    -318,  -167,  -318,  -167,  -318,  -167,  -318,  -167,  -318,  -167, 
    -318,  -167,  -318,  -167,  -318,  -167,    33,  -167,    21,  -167, 
    -318,  -167,  -318,  -167,  -318,  -167,  -318,  -167,  -318,  -167, 
    -318,  -167,  -318,  -167,  -318,  -167,  -359,  -235,  -359,  -235, 
    -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236, 
    -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236, 
    -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236,  -316,  -236, 
    -316,  -236,  -316,  -236,   506,  -252,   507,  -252,  -319,  -318, 
    -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318, 
    -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318, 
    -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318,  -319,  -318, 
    -319,  -318,  -319,  -318,  -319,  -318, 
};


};   /* namespace Python */

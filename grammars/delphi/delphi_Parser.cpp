#include "lrstar_basic_defs.h"
#include "lrstar_parser_tables.h"
#include "delphi_LexerTables_typedef.h"
#include "delphi_ParserTables_typedef.h"
#include "delphi_Parser.h"

// Terminal symbols of the grammar.
const char *delphi_grm_term_symb[101] = {
   "<error>",
   "<eof>",
   "\'package\'",
   "\'DOT\'",
   "\'_PROGRAM_\'",
   "\'SEMICOLON\'",
   "\'LPAREN\'",
   "\'RPAREN\'",
   "\'_USES_\'",
   "\'COMMA\'",
   "\'_IN_\'",
   "\'STRING_CONST\'",
   "\'_END_\'",
   "\'_UNIT_\'",
   "\'_INTERFACE_\'",
   "\'_IMPLEMENTATION_\'",
   "\'_INITIALIZATION_\'",
   "\'_FINALIZATION_\'",
   "\'_LIBRARY_\'",
   "\'_LABEL_\'",
   "\'UNSIGNED_INTEGER\'",
   "\'_CONST_\'",
   "\'_TYPE_\'",
   "\'EQUAL\'",
   "\'_VAR_\'",
   "\'COLON\'",
   "\'_NOT_\'",
   "\'_NIL_\'",
   "\'AT\'",
   "\'UNSIGNED_REAL\'",
   "\'PLUS\'",
   "\'MINUS\'",
   "\'LBRAC\'",
   "\'RBRAC\'",
   "\'DOTDOT\'",
   "\'UPARROW\'",
   "\'_PACKED_\'",
   "\'_ARRAY_\'",
   "\'_OF_\'",
   "\'_RECORD_\'",
   "\'_CASE_\'",
   "\'_SET_\'",
   "\'_FILE_\'",
   "\'_STRING_\'",
   "\'_CLASS_\'",
   "\'_PUBLISHED_\'",
   "\'_PUBLIC_\'",
   "\'_PROTECTED_\'",
   "\'_PRIVATE_\'",
   "\'_AUTOMATED_\'",
   "\'_PROPERTY_\'",
   "\'DIRECTIVE\'",
   "\'_PROCEDURE_\'",
   "\'_FUNCTION_\'",
   "\'_CONSTRUCTOR_\'",
   "\'_DESTRUCTOR_\'",
   "\'IDRPAREN\'",
   "\'property_method_list\'",
   "\'_OBJECT_\'",
   "\'_OBJECT\'",
   "\'_ABSOLUTE_\'",
   "\'_EXTERNAL_\'",
   "\'_FORWARD_\'",
   "\'ASSIGNMENT\'",
   "\'_INHERITED_\'",
   "\'_GOTO_\'",
   "\'_BEGIN_\'",
   "\'_IF_\'",
   "\'_THEN_\'",
   "\'_ELSE_\'",
   "\'_REPEAT_\'",
   "\'_UNTIL_\'",
   "\'_WHILE_\'",
   "\'_DO_\'",
   "\'_FOR_\'",
   "\'_TO_\'",
   "\'_DOWNTO_\'",
   "\'_WITH_\'",
   "\'_TRY_\'",
   "\'_FINALLY_\'",
   "\'_EXCEPT_\'",
   "\'_ON_\'",
   "\'NOTEQUAL\'",
   "\'LT\'",
   "\'GT\'",
   "\'LE\'",
   "\'GE\'",
   "\'_IS_\'",
   "\'_OR_\'",
   "\'_XOR_\'",
   "\'STAR\'",
   "\'SLASH\'",
   "\'_DIV_\'",
   "\'_MOD_\'",
   "\'_AND_\'",
   "\'_SHL_\'",
   "\'_SHR_\'",
   "\'_AS_\'",
   "\'@\'",
   "\'ID\'",
   "\'DIESE\'",
};

// Nonterminal symbols of the grammar.
const char *delphi_grm_head_symb[166] = {
   "start",
   "compilation_unit",
   "program",
   "program_heading",
   "program_uses_clause",
   "unit_reference_list",
   "unit_reference",
   "program_block",
   "unit",
   "unit_heading",
   "interface_part",
   "uses_clause",
   "uses_list",
   "id_list",
   "implementation_part",
   "initialization_part",
   "finalization_part",
   "library",
   "library_heading",
   "decl_sect_list",
   "decl_sect",
   "general_procedure_declaration",
   "label_decl_sect",
   "label_list",
   "label",
   "const_decl_sect",
   "int_type_decl_sect",
   "int_type_decl",
   "int_type",
   "var_decl_sect",
   "int_decl_sect_list",
   "int_decl_sect",
   "const_decl",
   "const",
   "simple_const",
   "const_term",
   "const_factor",
   "unsigned_number",
   "sign",
   "typed_const",
   "array_const",
   "typed_const_list",
   "record_const",
   "const_field_list",
   "const_field",
   "set_const",
   "const_elem_list",
   "const_elem_list1",
   "const_elem",
   "type_decl_sect",
   "type_decl",
   "type",
   "simple_type",
   "pointer_type",
   "structured_type",
   "unpacked_structured_type",
   "array_type",
   "simple_type_list",
   "record_type",
   "field_list",
   "fixed_part",
   "record_section",
   "variant_part",
   "tag_field",
   "variant_list",
   "variant",
   "case_tag_list",
   "set_type",
   "file_type",
   "string_type",
   "class_type",
   "class_header",
   "inheritance_class",
   "class_structure_decl",
   "class_component_struct",
   "visibility_decl",
   "field_or_property_or_method_decl",
   "class_field_decl",
   "class_component_list",
   "property_decl",
   "property_parameter_list",
   "property_accessors",
   "read_accessor",
   "write_accessor",
   "default_accessor",
   "method_definition",
   "method_heading",
   "class_method_heading",
   "simple_method_heading",
   "proc_method_heading",
   "func_method_heading",
   "constructor_definition",
   "destructor_definition",
   "method_directives",
   "static_dynamic_directive",
   "call_directive",
   "abstract_directive",
   "interface_type",
   "interface_header",
   "inheritance_interface",
   "interface_identification",
   "interface_component_list",
   "object_type",
   "object_header",
   "inheritance_object",
   "var_decl",
   "absolute_clause",
   "proc_decl",
   "func_decl",
   "constructor_decl",
   "destructor_decl",
   "proc_heading",
   "func_heading",
   "constructor_heading",
   "destructor_heading",
   "proc_block",
   "block",
   "fp_list",
   "fp_sect_list",
   "fp_sect",
   "fptype",
   "stmt",
   "unlabelled_stmt",
   "assignment",
   "general_proc_call",
   "proc_call",
   "expr_list",
   "goto_stmt",
   "compound_stmt",
   "stmt_list",
   "if_stmt",
   "case_stmt",
   "case_list",
   "case",
   "case_label_list",
   "case_label",
   "else_case",
   "repeat_stmt",
   "while_stmt",
   "for_stmt",
   "with_stmt",
   "variable_list",
   "try_statement",
   "try_protected_code",
   "try_finally_protected_code",
   "try_except_protected_code",
   "exception_bloc",
   "general_exception_handlers_list",
   "exception_handlers_list",
   "exception_handler",
   "exception_selector",
   "exception_else_clause",
   "variable",
   "expr",
   "relop",
   "simple_expr",
   "addop",
   "term",
   "mulop",
   "factor",
   "elem_list",
   "elem_list1",
   "elem",
   "identifier",
   "qualified_identifier",
   "general_string_const",
};

// Head symbol numbers for the productions.
const uint8 delphi_grm_head_numb[355] = {
       0,     1,     1,     1,     1,     2,     3,     3,     4,     4, 
       5,     5,     6,     6,     7,     8,     9,    10,    11,    11, 
      12,    12,    13,    13,    14,    15,    15,    16,    16,    17, 
      18,    19,    19,    20,    20,    20,    20,    20,    21,    21, 
      21,    21,    22,    23,    23,    24,    24,    25,    25,    26, 
      26,    27,    28,    28,    28,    28,    29,    29,    30,    30, 
      31,    31,    31,    31,    31,    32,    32,    33,    33,    34, 
      34,    34,    34,    35,    35,    36,    36,    36,    36,    36, 
      36,    37,    37,    38,    38,    39,    39,    39,    39,    40, 
      41,    41,    42,    43,    43,    44,    45,    46,    46,    47, 
      47,    48,    48,    49,    49,    50,    51,    51,    51,    51, 
      52,    52,    52,    53,    54,    54,    55,    55,    55,    55, 
      56,    57,    57,    58,    59,    59,    59,    60,    60,    61, 
      61,    62,    63,    63,    64,    64,    65,    65,    66,    66, 
      67,    68,    68,    69,    69,    70,    71,    71,    72,    72, 
      73,    73,    74,    74,    75,    75,    75,    75,    75,    76, 
      76,    76,    76,    77,    77,    78,    78,    79,    80,    80, 
      81,    82,    82,    83,    83,    84,    84,    85,    86,    86, 
      86,    86,    87,    88,    88,    89,    90,    91,    92,    93, 
      94,    94,    94,    95,    95,    96,    96,    97,    98,    98, 
      99,    99,   100,   100,   101,   102,   103,   103,   104,   104, 
     105,   106,   106,   106,   107,   108,   109,   110,   111,   112, 
     113,   114,   115,   115,   115,   116,   117,   117,   118,   118, 
     119,   119,   119,   120,   120,   121,   121,   122,   122,   122, 
     122,   122,   122,   122,   122,   122,   122,   122,   122,   123, 
     124,   124,   124,   125,   125,   126,   126,   127,   128,   129, 
     129,   130,   130,   131,   132,   132,   133,   133,   134,   134, 
     135,   135,   136,   136,   136,   137,   138,   139,   139,   140, 
     141,   141,   142,   143,   143,   144,   145,   146,   146,   147, 
     148,   148,   149,   149,   150,   150,   151,   151,   152,   152, 
     152,   152,   152,   152,   153,   153,   154,   154,   154,   154, 
     154,   154,   154,   154,   155,   155,   155,   155,   155,   156, 
     156,   156,   156,   157,   157,   158,   158,   158,   158,   158, 
     158,   158,   158,   159,   159,   159,   159,   159,   159,   159, 
     159,   159,   159,   160,   160,   161,   161,   162,   162,   163, 
     163,   164,   164,   165,   165, 
};

// First tail symbol index into the tail list ...
const uint16 delphi_grm_f_tail[356] = {
       0,     2,     3,     4,     5,     6,    10,    13,    19,    19, 
      22,    23,    26,    27,    30,    32,    39,    42,    45,    45, 
      48,    49,    52,    53,    56,    59,    59,    61,    61,    63, 
      67,    70,    70,    72,    73,    74,    75,    76,    77,    78, 
      79,    80,    81,    84,    85,    88,    89,    90,    92,    94, 
      96,    98,   102,   103,   104,   105,   106,   108,   110,   110, 
     112,   113,   114,   115,   116,   117,   121,   127,   128,   131, 
     132,   134,   136,   139,   140,   143,   144,   145,   146,   149, 
     150,   152,   153,   154,   155,   156,   157,   158,   159,   160, 
     163,   164,   167,   170,   171,   174,   177,   180,   180,   181, 
     182,   185,   186,   189,   191,   193,   197,   198,   199,   200, 
     201,   202,   205,   208,   210,   211,   213,   214,   215,   216, 
     217,   223,   224,   227,   230,   231,   232,   235,   236,   239, 
     239,   242,   246,   247,   250,   251,   254,   254,   259,   260, 
     263,   266,   269,   270,   271,   275,   278,   280,   281,   281, 
     284,   284,   286,   288,   289,   290,   291,   292,   293,   294, 
     294,   295,   296,   297,   297,   300,   301,   304,   311,   311, 
     314,   317,   317,   319,   319,   321,   321,   322,   324,   325, 
     326,   327,   328,   330,   331,   332,   336,   342,   346,   350, 
     353,   353,   355,   358,   358,   360,   360,   362,   365,   368, 
     369,   369,   371,   371,   374,   375,   378,   380,   381,   381, 
     383,   388,   388,   392,   394,   397,   400,   403,   406,   410, 
     416,   420,   424,   425,   426,   427,   429,   429,   432,   433, 
     436,   439,   443,   445,   446,   447,   448,   451,   451,   452, 
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462, 
     465,   467,   468,   469,   470,   473,   474,   477,   479,   482, 
     483,   486,   490,   496,   502,   503,   506,   506,   509,   510, 
     513,   514,   517,   517,   519,   522,   526,   530,   538,   546, 
     550,   551,   554,   557,   558,   559,   562,   565,   566,   567, 
     569,   570,   573,   573,   577,   578,   581,   581,   583,   584, 
     588,   591,   593,   599,   603,   604,   607,   608,   609,   610, 
     611,   612,   613,   614,   615,   616,   618,   620,   622,   625, 
     626,   627,   628,   629,   630,   633,   634,   635,   636,   637, 
     638,   639,   640,   641,   642,   643,   644,   645,   648,   649, 
     651,   654,   658,   660,   660,   661,   662,   665,   666,   669, 
     670,   671,   672,   675,   676,   678, 
};

// Tail symbol numbers ...
const int16 delphi_grm_tail[678] = {
      -1,     1,    -2,    -8,   -17,     2,    -3,    -4,    -7,     3, 
       4,  -163,     5,     4,  -163,     6,   -13,     7,     5,     8, 
      -5,     5,    -6,    -5,     9,    -6,  -163,  -163,    10,    11, 
     -30,  -128,    -9,   -10,   -14,   -15,   -16,    12,     3,    13, 
    -163,     5,    14,   -11,   -30,     8,   -12,     5,  -163,   -12, 
       9,  -163,  -163,   -13,     9,  -163,    15,   -11,   -19,    16, 
    -128,    17,  -128,   -18,   -11,  -116,     3,    18,  -163,     5, 
     -19,   -20,   -22,   -25,   -49,   -29,   -21,  -107,  -108,  -109, 
    -110,    19,   -23,     5,   -24,   -23,     9,   -24,    20,  -163, 
      21,   -32,   -25,   -32,    22,   -27,   -26,   -27,  -163,    23, 
     -28,     5,   -51,  -102,   -70,   -97,    24,  -105,   -29,  -105, 
     -30,   -31,   -25,   -26,   -29,  -111,  -112,  -163,    23,   -33, 
       5,  -163,    25,   -51,    23,   -39,     5,   -34,   -34,  -154, 
     -34,   -35,   -38,   -35,    26,   -35,   -34,  -156,   -35,   -36, 
     -35,  -158,   -36,   -37,  -164,  -165,     6,   -33,     7,    27, 
      28,  -164,    20,    29,    30,    31,   -33,   -40,   -42,   -45, 
       6,   -41,     7,   -39,   -41,     9,   -39,     6,   -43,     7, 
     -44,   -43,     5,   -44,  -163,    25,   -39,    32,   -46,    33, 
     -47,   -48,   -47,     9,   -48,   -33,   -33,    34,   -33,    22, 
     -50,   -49,   -50,  -163,    23,   -51,     5,   -52,   -53,   -54, 
     -69,  -163,   -33,    34,   -33,     6,   -13,     7,    35,  -163, 
     -55,    36,   -55,   -56,   -58,   -67,   -68,    37,    32,   -57, 
      33,    38,   -51,   -52,   -57,     9,   -52,    39,   -59,    12, 
     -60,   -62,   -60,     5,   -62,   -61,   -60,     5,   -61,   -13, 
      25,   -51,    40,   -63,    38,   -64,  -163,  -163,    25,  -163, 
     -65,   -64,     5,   -65,   -66,    25,     6,   -59,     7,   -33, 
     -66,     9,   -33,    41,    38,   -52,    42,    38,   -51,    42, 
      43,    43,    32,   -33,    33,   -71,   -73,    12,    44,   -72, 
      44,     6,   -13,     7,   -73,   -74,   -75,   -78,   -78,    45, 
      46,    47,    48,    49,   -77,   -79,   -85,   -13,    25,   -51, 
     -76,   -78,     5,   -76,    50,  -163,   -80,    25,   -51,   -81, 
       5,    32,  -118,    33,   -82,   -83,   -84,    51,  -163,    51, 
    -163,    51,   -86,   -93,   -88,   -87,   -91,   -92,    44,   -88, 
     -89,   -90,    52,  -163,  -117,     5,    53,  -163,  -117,    25, 
    -120,     5,    54,  -164,  -117,     5,    55,  -164,  -117,     5, 
     -94,   -95,   -96,    51,     5,    51,    20,     5,    51,     5, 
      51,     5,   -98,  -101,    12,    14,   -99,  -100,    14,     6, 
      56,    32,    11,    33,    57,  -103,   -73,    12,    58,  -104, 
      59,     6,    56,   -13,    25,   -51,  -106,     5,    60,    20, 
      25,    20,    60,  -163,  -111,  -115,     5,  -112,  -115,     5, 
    -113,  -115,     5,  -114,  -115,     5,    52,  -164,  -117,     5, 
      53,  -164,  -117,    25,  -120,     5,    54,  -164,  -117,     5, 
      55,  -164,  -117,     5,  -116,    61,    62,   -19,  -128,     6, 
    -118,     7,  -119,  -118,     5,  -119,   -13,    25,  -120,    24, 
     -13,    25,  -120,    24,   -13,  -163,    43,  -122,   -24,    25, 
    -122,  -124,  -123,  -127,  -128,  -130,  -131,  -137,  -138,  -139, 
    -140,  -142,  -152,    63,  -153,    64,  -125,    64,  -125,  -152, 
    -152,     3,  -125,  -153,  -126,     9,  -153,    65,   -24,    66, 
    -129,    12,  -121,  -129,     5,  -121,    67,  -153,    68,  -121, 
      67,  -153,    68,  -121,    69,  -121,    40,  -153,    38,  -132, 
    -136,    12,  -133,  -132,     5,  -133,  -134,    25,  -121,  -135, 
    -134,     9,  -135,   -33,   -33,    34,   -33,    69,  -121,    69, 
    -121,     5,    70,  -129,    71,  -153,    72,  -153,    73,  -121, 
      74,  -163,    63,  -153,    75,  -153,    73,  -121,    74,  -163, 
      63,  -153,    76,  -153,    73,  -121,    77,  -141,    73,  -121, 
    -152,  -141,     9,  -152,    78,  -129,  -143,  -145,  -144,    79, 
    -129,    12,    80,  -146,    12,  -129,  -147,  -148,  -151,  -149, 
    -148,     5,  -149,    81,  -150,    73,  -121,  -163,  -163,    25, 
    -163,    69,  -129,  -164,  -152,    32,  -126,    33,  -152,     3, 
    -163,  -152,    35,  -164,     6,  -126,     7,     3,  -152,  -164, 
       6,  -126,     7,  -155,  -155,  -154,  -155,    23,    82,    83, 
      84,    85,    86,    10,    87,  -157,   -38,  -157,    26,  -157, 
      28,  -157,  -155,  -156,  -157,    30,    31,    88,    89,  -159, 
    -157,  -158,  -159,    90,    91,    92,    93,    94,    95,    96, 
      97,  -152,    20,    29,  -165,    32,  -160,    33,    27,    98, 
    -152,     6,  -153,     7,  -164,     6,  -126,     7,    26,  -159, 
    -161,  -162,  -161,     9,  -162,  -153,  -153,    34,  -153,    99, 
      51,  -163,  -164,     3,  -163,    11,   100,    20, 
};

// Boolean matrix ...
const uint8 delphi_grm_Bm[394] = {
       0,     0,     0,     0,     0,     0,     0,     0,     4,     0, 
       0,     0,     0,     0,     0,     0,     2,     0,     0,     0, 
       0,     0,     0,   128,     0,     0,     0,     0,     0,     0, 
       0,    16,     0,     0,     0,     0,     0,    64,     0,     0, 
      16,     0,    32,     0,     0,     0,     0,     0,     0,    48, 
       0,     0,     0,     0,     0,     0,     0,    16,     0,     0, 
       0,     0,     0,     0,     0,     8,     0,     0,     0,     0, 
       0,     0,     0,    20,     0,   128,     0,     1,     0,    16, 
       1,     0,     0,     0,     0,     0,    64,     0,     0,     0, 
       0,     0,     0,    21,     0,   128,     1,     1,     0,     0, 
       2,     0,    66,   128,     1,    16,     0,     0,     0,     0, 
       0,     0,     1,     0,     0,    20,     0,   128,     0,     0, 
       0,     0,     0,    32,     0,     0,     2,     0,    64,     0, 
       0,    16,    64,     1,     0,     0,     0,     0,     0,     0, 
      40,     0,     0,     0,     0,     0,     1,    32,     0,     0, 
       0,     0,     0,    16,     8,     0,     0,     0,     0,     0, 
       0,     8,     0,     0,    36,     0,    64,     0,     0,    40, 
       0,     0,     0,     0,     0,     0,    32,     0,     0,     0, 
       0,    32,     4,   194,     7,    64,     0,     0,    24,     0, 
       0,    21,     0,   128,     1,     0,    32,     4,   194,     3, 
      64,     0,     0,    16,    32,     4,   194,   227,    68,     0, 
       0,    16,    32,    20,   194,   227,    76,     8,     0,    16, 
       0,     0,     0,     0,    66,   128,     1,    16,     8,     0, 
       0,    36,     0,     0,     0,     0,     2,     8,     2,     0, 
       0,     0,     3,    32,     4,   194,     4,    64,     0,     0, 
      24,     0,     0,     0,     0,     1,     0,     0,     0,    16, 
       0,     0,     0,     0,     0,     8,     0,     1,     0,     0, 
       0,     0,    16,     0,    64,     0,     0,    16,    32,     4, 
     130,     1,    64,     0,     0,    16,     0,     0,     0,     0, 
      66,     0,     0,    16,    32,     0,     0,     0,     0,     0, 
       0,     0,     1,     0,     8,     0,     0,     0,     0,     1, 
       0,     0,     0,     0,     0,    64,     0,     0,     0,     0, 
       0,     0,     0,     2,     0,    66,   128,   129,    80,     0, 
       0,     0,     0,     0,     0,     0,    68,     0,     0,    16, 
      32,     4,   194,     7,    64,     0,     0,    16,     0,     8, 
       0,     0,   248,     1,     0,    16,     0,     0,     0,     2, 
       0,     0,     0,     2,    16,     0,     0,     0,     0,     0, 
       4,     0,     0,     0,     0,   232,     1,     0,    16,     0, 
       2,     0,     0,     0,     0,     0,    16,     0,     0,     8, 
       0,     0,     0,     0, 
};

// Boolean matrix row (for state)...
const uint16 delphi_grm_Br[343] = {
       8,    16,    23,    30,    23,    33,    33,    33,     0,    33, 
      41,    23,     0,    33,    49,    57,    57,    65,    71,    79, 
      15,    85,    23,     0,    65,    91,    79,    33,    33,    33, 
      33,    98,    33,    33,    33,    33,    33,    33,     7,    22, 
     106,     0,   113,    33,    33,    33,   118,   118,   118,   118, 
     124,    33,    33,    33,    33,   132,   138,    63,   145,   153, 
     161,   169,     0,   174,    33,   124,   181,   181,    98,   181, 
      33,    33,    98,   169,   169,    64,   106,   189,    63,    57, 
      57,    57,    57,    79,   169,   169,    57,    33,   196,   204, 
     212,   204,    98,   181,    33,   181,   181,    33,   220,   228, 
      10,   235,     1,   228,   169,   243,    14,   181,    33,   181, 
     243,   243,   251,   259,    25,    32,   266,   228,    31,    57, 
     270,   174,    65,   204,   124,    57,    57,    57,   235,     1, 
      65,   278,   196,    33,   278,    63,     0,    28,   196,    33, 
       5,   286,   251,   251,    20,     5,    57,     0,     0,     3, 
     294,   294,   294,    26,     0,   301,   132,    98,   181,   243, 
     243,    33,   181,     1,   243,    62,   308,    28,   228,   315, 
       1,     0,     1,   196,   181,    98,   181,    98,    33,   321, 
      98,   328,   145,    33,   332,    57,   196,   278,   278,     1, 
     315,    65,     1,   340,   196,     0,   132,   196,    64,    57, 
     145,    33,   196,   204,   196,   348,   348,    64,    11,    33, 
       5,    11,    57,   124,   181,    65,     2,   356,     1,   132, 
     181,   181,   364,   145,    28,   170,   228,    64,    57,   364, 
      33,   153,   270,   332,   145,    57,   356,     1,    57,   340, 
     196,   301,   286,   204,   251,   174,    62,   371,    57,   145, 
      82,    33,    33,    33,    19,    33,    33,   132,     7,   174, 
      33,    98,    65,    64,    98,   196,    98,   196,   196,   181, 
     181,    98,    17,    25,   174,   332,   315,   174,   132,   328, 
      62,   308,    28,   251,   196,   196,    33,    57,   371,   204, 
      82,   378,     5,   294,   294,   169,   169,    62,    14,   228, 
      57,    25,    25,    57,    98,    33,   340,   340,    33,   196, 
     196,   204,    57,   145,    82,    57,    57,   174,   270,    57, 
     174,    57,    57,    98,    98,   174,   196,   294,   196,    57, 
     204,   386,   332,   286,    82,    57,   315,    57,    82,    33, 
      82,    33,     0, 
      };

// Boolean matrix column (displacement) ...
extern const uint8 delphi_grm_Bc[101];
const uint8 delphi_grm_Bc[101] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     1, 
       1,     1,     1,     0,     1,     1,     1,     1,     0,     2, 
       2,     2,     2,     2,     2,     2,     2,     2,     3,     2, 
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3, 
       4,     3,     3,     4,     4,     4,     4,     4,     4,     4, 
       4,     4,     4,     4,     5,     5,     5,     5,     5,     5, 
       5,     5,     5,     5,     5,     5,     6,     5,     6,     6, 
       5,     6,     5,     6,     5,     6,     6,     5,     5,     6, 
       6,     6,     7,     7,     7,     7,     7,     7,     7,     7, 
       7,     7,     7,     7,     7,     7,     7,     7,     7,     7, 
       2, 
      };

// Boolean matrix filter/mask value ...
const uint8 delphi_grm_Bf[101] = {
       1,     2,     4,     8,     4,    16,    32,    64,   128,     1, 
       2,     4,     8,     4,    16,    32,    64,   128,     4,     1, 
       2,     4,     4,     8,    16,    32,    64,   128,     1,   128, 
       2,     2,     4,     8,    16,    32,    64,   128,     1,   128, 
       2,   128,   128,     4,     8,    16,    16,    16,    16,    16, 
      32,    64,   128,   128,     1,     1,     2,     4,     8,     8, 
      16,    32,    32,    64,   128,   128,     1,   128,     2,     4, 
     128,     8,   128,    16,   128,    32,    32,   128,   128,    64, 
      64,   128,     1,     1,     1,     1,     1,     1,     2,     2, 
       4,     4,     4,     4,     4,     4,     4,     4,     8,    16, 
     128, 
};

// Terminal transition matrix ...
const int16 delphi_grm_Tm[580] = {
       0,  -105,   242,  -210,  -219,   -66,   288,  -274,   326,  -194, 
    -192,  -185,  -187,  -188,  -196,  -186,  -167,   -51,   265,   272, 
     309,    92,   308,  -191,   -92,  -221,  -285,     0,    87,   316, 
       0,   -65,   289,   -89,   307,     0,     0,   -42,   211,     0, 
     124,     0,  -218,   333,   330,    87,     0,  -220,     0,   275, 
     284,     0,     0,     0,   332,     0,   264,   271,   339,   283, 
       0,     0,   232,   341,  -227,   328,     0,     0,  -176,   327, 
    -217,   209,   262,   214,  -169,     0,     0,   306,    97,  -215, 
     162,  -112,    87,     0,  -263,     0,   233,     0,     0,     0, 
       0,   329,     0,     0,     0,   161,  -214,   208,     0,   220, 
     315,  -286,  -212,   305,    97,   -19,   120,    95,    54,     0, 
    -197,   259,   286,     0,     0,     0,   258,   291,     0,     0, 
       0,     0,     0,     0,     0,     0,  -350,     0,     0,     0, 
       0,     0,   193,   260,  -216,   109,  -149,    87,  -353,     0, 
    -334,   243,     0,     0,     0,   107,     0,   324,     0,     0, 
    -301,     0,     0,   311,     0,  -350,    -7,   239,     0,   267, 
    -353,     0,   -81,   266,   133,   -83,   -84,   240,     0,     0, 
       0,     0,     0,  -349,     0,     0,     0,  -350,     0,     0, 
       0,     0,     0,     0,     0,   164,  -338,  -335,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   108,  -349,   106,     0,     0,     0,   134,   -79,   -82, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -349,   106,   -15,    92,   138,   215, 
     214,  -353,  -258,   -81,   298,   133,   -83,   -84,   318,  -299, 
     145,   151,   152,     0,     0,     0,     0,     0,  -350,     0, 
       0,   144,   140,     0,   150,  -207,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   174,     0,     0, 
       0,     0,     0,     0,     0,   180,   179,     0,   134,   -79, 
     -82,   139,   141,   142,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   143,  -349,   106,   -29,   -16,   109, 
    -340,    87,  -353,  -123,  -334,    91,   111,   -83,   -84,   107, 
    -144,     0,     0,     0,     0,     0,    50,    32,    51,  -350, 
      35,    36,    52,    53,  -201,    90,    34,     0,     0,     0, 
       0,     0,     0,    31,     0,     0,     0,     0,   221,     0, 
     304,     0,     0,     0,     0,     0,   202,   201,     0,   110, 
    -338,  -335,    13,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   108,  -349,   106,    94,   -30, 
     132,   -78,   178,  -353,  -205,   -81,    98,   133,   -83,   -84, 
      95,   -96,     0,   254,  -154,  -155,  -156,  -157,  -158,   251, 
    -350,   252,   253,   255,   256,     0,   123,   183,     0,     0, 
       0,    93,     0,     0,     0,     0,     0,     0,     0,   268, 
       0,   177,     0,     0,     0,     0,     0,   203,     0,     0, 
     134,   -79,   -82,  -301,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,  -349,   106,    97, 
      -9,    96,  -137,    37,   297,  -145,  -354,   184,  -312,  -319, 
    -320,   204,  -203,     0,   254,  -154,  -155,  -156,  -157,  -158, 
     251,  -350,   252,   253,   255,   256,     0,  -306,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     310,     0,   323,     0,     0,     0,     0,     0,   285,     0, 
       0,  -307,  -308,  -309,  -310,  -311,  -313,  -321,  -322,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,  -349,    -5, 
      -6,    27,    86,    87,   -13,   122,   -45,    89,    38,  -319, 
    -320,   197,  -337,  -234,    40,    11,    76,     7,   342,    32, 
      33,  -350,    35,    36,    22,   140,  -209,    88,    34,   213, 
    -223,  -224,   176,    64,    65,    31,    66,   157,   261,    68, 
     194,    69,   175,    70,   269,   270,    71,    72,   173,    67, 
     230,    -4,     5,     6,     9,   141,   142,  -321,  -322,  -325, 
    -326,  -327,  -328,  -329,  -330,  -331,  -332,   143,  -349,  -204, 
};

// Terminal transition matrix row ...
const uint16 delphi_grm_Tr[343] = {
     509,   509,   509,   509,   297,   509,   509,   509,   509,   509, 
     509,   297,   509,   509,   509,   297,   368,   509,   509,   439, 
     509,   509,   297,   509,   297,   297,   104,   509,   509,   509, 
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509, 
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509, 
     509,   509,   509,   509,   509,   509,   509,   297,   297,   226, 
     368,   439,   509,   368,   509,   509,   297,   297,   509,   297, 
     509,   509,   509,   104,   104,   509,   509,   297,   368,    95, 
      78,   133,    69,    36,   104,   104,   155,   509,   368,   226, 
     226,   226,   509,   297,   509,   297,   297,   509,   509,   368, 
     509,   439,   509,    95,    78,   133,   439,   297,   509,   297, 
     133,   133,   509,   226,   509,   509,   368,    95,   226,    41, 
     368,   439,   226,   226,   509,    46,    24,    30,   439,   509, 
     439,   368,   368,   509,   368,   104,   509,   509,   368,   509, 
     509,   297,   297,   368,   509,   439,    16,   509,   509,   509, 
      95,    69,    36,   509,   509,   226,   226,   509,   297,   133, 
     133,   509,   297,   509,   133,   509,    95,   297,    95,   297, 
     509,   509,   509,   368,   297,   509,   297,   509,   509,   509, 
     509,    61,    78,   509,   509,     0,   368,   368,   368,   509, 
     368,   439,   509,   155,   368,   509,    78,   226,   297,     1, 
     133,   509,   226,   226,   368,   368,   439,   104,   509,   509, 
     104,   297,     2,   104,   297,   133,   509,   509,   509,    69, 
     297,   297,    17,   155,   368,   509,    95,    95,   226,    18, 
     509,    20,   368,   509,    41,     3,   509,   509,     4,   155, 
     368,    46,   297,   226,   439,   104,   297,   368,     5,    24, 
      95,   509,   509,   509,   368,   509,   509,   133,   439,   226, 
     509,   509,   133,    78,   509,   368,   509,   368,   368,   297, 
     297,   509,   509,   297,    95,   509,   368,    69,    30,    21, 
     368,    16,   439,   104,   226,   368,   509,     5,   368,   226, 
      78,    22,   226,   104,   104,   104,   104,   439,    95,    95, 
       6,   439,   104,   226,   509,   509,   155,   155,   509,   368, 
     368,   226,     7,    61,    69,     8,     9,    36,   368,    10, 
      46,    11,    12,   509,   509,    69,   368,    41,   368,    13, 
     226,    61,   509,   297,    36,    14,   439,    15,    41,   509, 
      46,   509,   509, 
};

// Terminal transition matrix column ...
const uint8 delphi_grm_Tc[101] = {
      19,    19,    52,     0,    53,     1,     2,     3,    55,     4, 
       9,     5,     6,    54,    16,    25,    15,    17,    18,    19, 
       7,    20,    21,    28,    29,     8,    52,    53,     9,    54, 
      10,    11,    12,    13,    41,    55,    25,    26,    49,    56, 
      50,    57,    68,    14,    15,    16,    17,    18,    19,    20, 
      21,    22,    23,    24,    25,    26,    27,    70,    28,    29, 
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39, 
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49, 
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59, 
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69, 
      70, 
};

// Nonterminal transition matrix ...
const int16 delphi_grm_Nm[2246] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   -49,     0, 
     234,     0,     0,     0,   -47,     0,     0,   257,     0,  -104, 
    -103,   244,     0,     0,     0,     0,     0,   235,     0,   -57, 
      58,  -230,   -56,    58,   -11,     0,   -21,   115,   -23,  -352, 
    -113,  -300,  -213,   292,   293,   294,  -133,  -295,  -172,  -174, 
      56,    57,  -351,    73,  -351,    74,    20,    78,    78,  -351, 
      84,  -351,    85,  -257,   -44,   -22,   -46,   -46,  -351,   191, 
    -233,   245,   -22,   273,  -233,  -351,   295,  -351,   296,  -231, 
     -94,   335,   321,   325,   322,   -22,   274,   -50,   -22,    83, 
     168,     0,   -48,   226,  -250,   182,   -43,   299,     0,   -46, 
    -254,  -351,    61,   116,  -351,    61,  -229,   182,  -351,    61, 
     200,     0,  -128,  -126,   117,     0,     0,   181,  -228,     0, 
       0,    99,  -233,     0,  -233,  -351,    61,    99,    56,     0, 
      57,   182,  -351,    61,     0,   -74,   103,   -75,   154,    61, 
       0,   331,  -228,  -324,   103,     0,     0,  -351,   104,  -336, 
     -22,  -342,    81,  -222,   319,  -351,   104,  -336,     0,    25, 
      55,     0,   -22,     0,    26,   -22,   103,    82,  -222,   320, 
       0,   163,     0,  -323,    25,     0,     0,  -351,   104,  -336, 
     189,   -73,     0,   -75,     0,   103,   -22,  -351,   130,   -77, 
     170,     0,   171,     0,   103,     0,  -351,   104,  -336,   172, 
     -20,  -323,     0,     0,     0,  -351,   104,  -336,   192,   -73, 
       0,   -75,     0,     0,     0,   -22,   198,   200,   199,  -127, 
    -125,   237,   -73,     0,   -75,   103,     0,     0,     0,     0, 
     218,     0,  -323,  -351,   130,   -77,  -351,   104,  -336,   336, 
     200,   199,  -127,  -125,    79,  -222,   125,     0,   105,     0, 
       0,    25,    41,     0,     0,     0,     0,   -26,    80,  -222, 
     126,  -351,   130,   -77,     0,    25,   236,   129,   -73,     0, 
     -75,   -28,   -22,     0,  -351,   130,   -77,    19,   103,   131, 
       0,   217,   105,   102,   -10,  -323,     0,     0,     0,  -351, 
     104,  -336,    16,     0,     0,   -22,   105,     0,     0,   127, 
       0,   128,   129,   -73,     0,   -75,    20,     0,     0,     0, 
     105,     0,   103,   100,   131,   101,     0,   102,     0,  -323, 
    -351,   130,   -77,  -351,   104,  -336,   103,   112,   105,   101, 
       0,   102,     0,  -323,     0,     0,     0,  -351,   104,  -336, 
     103,   114,   105,   101,     0,   102,     0,  -323,     0,     0, 
       0,  -351,   104,  -336,     0,  -351,   130,   -77,   103,  -249, 
       0,   101,     0,   102,     0,  -323,     0,   105,     0,  -351, 
     104,  -336,   103,   169,     0,   101,     0,   102,     0,  -323, 
       0,   105,     0,  -351,   104,  -336,   190,     0,   128,   129, 
     -73,     0,   -75,     0,     0,     0,     0,   103,  -275,     0, 
     101,   131,   102,     0,  -323,     0,     0,     0,  -351,   104, 
    -336,   103,   225,     0,   101,     0,   102,   105,  -323,     0, 
       0,     0,  -351,   104,  -336,  -111,     0,   128,   129,   -73, 
     246,   -75,   128,   129,   -73,   105,   -75,     0,     0,     0, 
     131,     0,  -351,   130,   -77,   131,     0,   103,  -256,     0, 
     101,     0,   102,     0,  -323,     0,     0,     0,  -351,   104, 
    -336,     0,     0,     0,     0,   103,  -348,     0,   101,     0, 
     102,     0,  -323,     0,     0,   105,  -351,   104,  -336,     0, 
       0,  -351,   130,   -77,     0,     0,  -351,   130,   -77,  -271, 
     105,   128,   129,   -73,  -102,   -75,   128,   129,   -73,     0, 
     -75,     0,     0,     0,   131,   103,   301,     0,   101,   131, 
     102,     0,  -323,     0,     0,     0,  -351,   104,  -336,     0, 
     103,   302,     0,   101,   105,   102,     0,  -323,   155,     0, 
       0,  -351,   104,  -336,  -139,     0,   128,   129,   -73,   105, 
     -75,     0,     0,   156,     0,  -351,   130,   -77,     0,   131, 
    -351,   130,   -77,     0,   103,  -255,     0,   101,     0,   102, 
       0,  -323,     0,     0,   105,  -351,   104,  -336,   219,   103, 
    -255,     0,   101,     0,   102,     0,  -323,     0,     0,     0, 
    -351,   104,  -336,   190,   196,   128,   129,   -73,     0,   -75, 
    -351,   130,   -77,     0,   103,  -255,     0,   101,   131,   102, 
       0,  -323,     0,     0,     0,  -351,   104,  -336,   137,     0, 
     128,   129,   -73,   105,   -75,     0,     0,     0,     0,     0, 
       0,     0,     0,   131,     0,     0,     0,     0,  -140,     0, 
     224,     0,   128,   129,   -73,     0,   -75,     0,     0,   195, 
     130,   -77,     0,   103,   167,   131,   101,     0,   102,     0, 
    -323,     0,     0,  -346,  -351,   104,  -336,   137,  -269,   128, 
     129,   -73,     0,   -75,   136,   130,   -77,   282,     0,   128, 
     129,   -73,   131,   -75,     0,     0,     0,  -122,     0,     0, 
       0,     0,   131,  -100,     0,     0,  -351,   130,   -77,     0, 
       0,     0,   137,     0,   128,   129,   -73,   105,   -75,     0, 
       0,     0,     0,     0,     0,     0,     0,   131,     0,     0, 
       0,     0,  -121,   136,   130,   -77,  -138,     0,   128,   129, 
     -73,     0,   -75,  -351,   130,   -77,   241,   103,   167,     0, 
     101,   131,   102,     0,  -323,   165,   166,  -345,  -351,   104, 
    -336,   282,     0,   128,   129,   -73,     0,   -75,   136,   130, 
     -77,     0,     0,   280,   281,     0,   131,   -99,     0,     0, 
       0,   224,  -135,   128,   129,   -73,     0,   -75,     0,   313, 
       0,     0,  -351,   130,   -77,  -138,   131,   128,   129,   -73, 
     224,   -75,   128,   129,   -73,     0,   -75,  -265,   223,  -268, 
     131,     0,     0,     0,     0,   131,     0,  -351,   130,   -77, 
       0,     0,     0,     0,     0,   222,  -264,   223,  -268,     0, 
       0,     0,     0,     0,     0,     0,     0,  -351,   130,   -77, 
     312,  -134,     0,     0,     0,     0,     0,     0,   313,     0, 
     249,  -351,   130,   -77,     0,     0,  -351,   130,   -77,   -85, 
     238,   128,   129,   -73,     0,   -75,  -166,  -160,     0,  -161, 
     -88,     0,     0,     0,   131,     0,  -162,   250,     0,  -179, 
    -178,  -183,  -184,  -180,  -181,     0,   -86,   -85,   -95,   128, 
     129,   -73,     0,   -75,     0,     0,     0,     0,   -88,     0, 
       0,     0,   131,     0,   -87,   -22,     0,   -85,   -91,   128, 
     129,   -73,     0,   -75,   -86,  -351,   130,   -77,   -88,     0, 
       0,     0,   131,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   -87,     0,   -86,     0,     0,     0,     0,     0, 
     249,     0,     0,  -351,   130,   -77,     0,     0,     0,     0, 
       0,     0,   -87,     0,     0,     0,  -165,  -160,   287,  -161, 
       0,     0,     0,  -351,   130,   -77,  -162,   250,     0,  -179, 
    -178,  -183,  -184,  -180,  -181,     0,  -236,  -239,  -238,  -252, 
       0,  -240,  -241,     0,  -242,  -243,     0,     0,     0,     0, 
       0,  -244,  -245,  -246,  -247,   -22,  -248,   249,     0,     0, 
       0,     0,     0,     0,     0,     0,    60,     0,     0,     0, 
       0,  -151,   247,  -165,  -160,   248,  -161,  -351,    61,     0, 
       0,     0,     0,  -162,   250,     0,  -179,  -178,  -183,  -184, 
    -180,  -181,   276,   -90,   128,   129,   -73,     0,   -75,     0, 
       0,     0,     0,   -88,     0,     0,     0,   131,     0,     0, 
       0,     0,   -22,     0,     0,     0,     0,     0,     0,   -86, 
       0,     0,     0,     0,     0,     0,   278,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   -87,   279,     0, 
       0,     0,     0,     0,     0,   -93,     0,     0,   277,   130, 
     -77,  -260,  -235,  -239,  -238,  -252,     0,  -240,  -241,     0, 
    -242,  -243,     0,     0,     0,     0,     0,  -244,  -245,  -246, 
    -247,     0,  -248,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    60,     0,     0,     0,     0,     0,     0,     0, 
      63,     0,     0,    62,    61,   216,  -235,  -239,  -238,  -252, 
       0,  -240,  -241,     0,  -242,  -243,     0,     0,     0,     0, 
       0,  -244,  -245,  -246,  -247,     0,  -248,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    60,     0,     0,     0, 
       0,     0,     0,     0,    63,     0,     0,    62,    61,  -276, 
    -235,  -239,  -238,  -252,     0,  -240,  -241,     0,  -242,  -243, 
       0,     0,     0,     0,     0,  -244,  -245,  -246,  -247,     0, 
    -248,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
      60,     0,     0,     0,     0,     0,     0,     0,    63,     0, 
       0,    62,    61,  -279,  -235,  -239,  -238,  -252,     0,  -240, 
    -241,     0,  -242,  -243,     0,     0,     0,     0,     0,  -244, 
    -245,  -246,  -247,     0,  -248,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    60,     0,     0,     0,     0,     0, 
       0,     0,    63,     0,     0,    62,    61,  -262,  -235,  -239, 
    -238,  -252,     0,  -240,  -241,     0,  -242,  -243,     0,     0, 
       0,     0,     0,  -244,  -245,  -246,  -247,     0,  -248,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,    60,     0, 
       0,     0,     0,     0,     0,     0,    63,     0,     0,    62, 
      61,   300,  -235,  -239,  -238,  -252,     0,  -240,  -241,     0, 
    -242,  -243,     0,     0,     0,     0,     0,  -244,  -245,  -246, 
    -247,     0,  -248,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    60,     0,     0,     0,     0,     0,     0,     0, 
      63,     0,     0,    62,    61,  -267,  -235,  -239,  -238,  -252, 
       0,  -240,  -241,     0,  -242,  -243,     0,     0,     0,     0, 
       0,  -244,  -245,  -246,  -247,     0,  -248,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    60,     0,     0,     0, 
       0,     0,     0,     0,    63,     0,     0,    62,    61,  -293, 
    -235,  -239,  -238,  -252,     0,  -240,  -241,     0,  -242,  -243, 
       0,     0,     0,     0,     0,  -244,  -245,  -246,  -247,     0, 
    -248,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
      60,     0,     0,     0,     0,     0,     0,     0,    63,     0, 
       0,    62,    61,  -277,  -235,  -239,  -238,  -252,     0,  -240, 
    -241,     0,  -242,  -243,     0,     0,     0,     0,     0,  -244, 
    -245,  -246,  -247,     0,  -248,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,    60,     0,     0,     0,     0,     0, 
       0,     0,    63,     0,     0,    62,    61,  -278,  -235,  -239, 
    -238,  -252,     0,  -240,  -241,     0,  -242,  -243,     0,     0, 
       0,     0,     0,  -244,  -245,  -246,  -247,     0,  -248,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,    60,     0, 
       0,     0,     0,     0,     0,     0,    63,     0,     0,    62, 
      61,  -259,  -235,  -239,  -238,  -252,     0,  -240,  -241,    59, 
    -242,  -243,     0,     0,     0,     0,     0,  -244,  -245,  -246, 
    -247,     0,  -248,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,    60,     0,     0,     0,     0,     0,     0,     0, 
      63,     0,     0,    62,    61,  -259,  -235,  -239,  -238,  -252, 
       0,  -240,  -241,   113,  -242,  -243,     0,     0,     0,     0, 
       0,  -244,  -245,  -246,  -247,     0,  -248,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    60,     0,     0,     0, 
       0,     0,     0,     0,    63,     0,     0,    62,    61,  -259, 
    -235,  -239,  -238,  -252,     0,  -240,  -241,   118,  -242,  -243, 
       0,     0,     0,     0,     0,  -244,  -245,  -246,  -247,     0, 
    -248,     0,     0,     0,     0,   137,  -107,   128,   129,   -73, 
      60,   -75,  -118,  -119,     0,     0,  -109,     0,    63,     0, 
     131,    62,    61,     0,   135,  -106,     0,     0,     0,     0, 
       0,     0,  -108,  -114,     0,  -116,     0,     0,     0,     0, 
    -117,     0,     0,     0,     0,   137,  -107,   128,   129,   -73, 
       0,   -75,  -118,  -119,     0,     0,  -109,     0,     0,     0, 
     131,   136,   130,   -77,   153,  -106,     0,     0,     0,     0, 
       0,     0,  -108,  -114,     0,  -116,     0,     0,     0,     0, 
    -117,     0,     0,     0,     0,   137,  -107,   128,   129,   -73, 
       0,   -75,  -118,  -119,     0,     0,  -109,     0,     0,     0, 
     131,   136,   130,   -77,   185,  -106,     0,     0,     0,     0, 
       0,     0,  -108,  -114,     0,  -116,     0,     0,     0,     0, 
    -117,     0,     0,     0,     0,     0,     0,     0,  -259,  -235, 
    -239,  -238,  -252,     0,  -240,  -241,   231,  -242,  -243,     0, 
       0,   136,   130,   -77,  -244,  -245,  -246,  -247,     0,  -248, 
       0,     0,     0,     0,   137,  -107,   128,   129,   -73,    60, 
     -75,  -118,  -119,     0,     0,  -109,     0,    63,     0,   131, 
      62,    61,     0,  -141,  -106,     0,     0,     0,     0,     0, 
       0,  -108,  -114,     0,  -116,     0,     0,     0,     0,  -117, 
       0,     0,     0,     0,   137,  -107,   128,   129,   -73,     0, 
     -75,  -118,  -119,     0,     0,  -109,     0,     0,     0,   131, 
     136,   130,   -77,  -130,  -106,     0,     0,     0,     0,     0, 
       0,  -108,  -114,     0,  -116,     0,     0,     0,     0,  -117, 
       0,     0,     0,     0,     0,     0,     0,  -259,  -235,  -239, 
    -238,  -252,     0,  -240,  -241,   303,  -242,  -243,     0,     0, 
     136,   130,   -77,  -244,  -245,  -246,  -247,     0,  -248,     0, 
       0,     0,     0,   137,  -107,   128,   129,   -73,    60,   -75, 
    -118,  -119,     0,     0,  -109,     0,    63,     0,   131,    62, 
      61,     0,  -164,  -106,     0,     0,     0,     0,     0,     0, 
    -108,  -114,     0,  -116,     0,     0,     0,     0,  -117,     0, 
       0,     0,     0,   137,  -107,   128,   129,   -73,     0,   -75, 
    -118,  -119,     0,     0,  -109,     0,     0,     0,   131,   136, 
     130,   -77,  -120,  -106,     0,     0,     0,     0,     0,     0, 
    -108,  -114,     0,  -116,     0,     0,     0,     0,  -117,     0, 
       0,     0,     0,   137,  -107,   128,   129,   -73,     0,   -75, 
    -118,  -119,     0,     0,  -109,     0,     0,     0,   131,   136, 
     130,   -77,   334,  -106,     0,     0,     0,     0,     0,     0, 
    -108,  -114,     0,  -116,     0,     0,     0,     0,  -117,     0, 
       0,     0,     0,     0,     0,     0,  -259,  -235,  -239,  -238, 
    -252,     0,  -240,  -241,   228,  -242,  -243,     0,     0,   136, 
     130,   -77,  -244,  -245,  -246,  -247,     0,  -248,     0,     0, 
       0,   227,  -288,   229,  -290,     0,     0,    60,     0,     0, 
       0,     0,     0,     0,     0,    63,     0,     0,    62,    61, 
     -38,   -39,   -40,   -41,    47,    48,    49,     0,     0,   121, 
      43,     0,     0,   206,    77,    23,    44,    45,    42,     0, 
    -225,     0,     0,     0,     0,     0,   -32,     0,     0,     0, 
       0,     0,     0,   -37,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   -33,     0,   186,     0,   187,     0, 
     188,     0,     0,     0,     0,    15,     0,    46,   137,  -107, 
     128,   129,   -73,     0,   -75,  -118,  -119,     0,     0,  -109, 
     -54,   148,     0,   131,   146,     0,     0,   -52,  -106,     0, 
       0,     0,     0,     0,     0,  -108,  -114,     0,  -116,     0, 
       0,     0,     0,  -117,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   -55,   149,     0,     0,     0,     0,     0, 
       0,   -53,   147,     0,   136,   130,   -77,    21,     8,    39, 
      75,    -3,   -64,     4,  -118,  -119,    24,   119,    28,    29, 
      10,   205,    25,    12,   -59,    30,    18,     2,   -14,   317, 
     337,   338,   340,  -170,     1,  -115,   263,  -116,  -182,  -183, 
    -184,    -1,  -117,  -282,  -284,  -283,  -177,   290,   314,  -291, 
    -189,  -289,    17,    -2,   158,   210,   159,  -198,   160,   207, 
       3,  -146,  -206,    14,   212,   -63, 
};

// Nonterminal transition matrix row ...
const uint16 delphi_grm_Nr[343] = {
 2187,  2187,  2187,  2187,  2187,  2187,  2069,   256,  2187,   270, 
 2187,  2069,  2187,   164,  2187,  2187,  2187,  2187,  2187,  2187, 
 2187,  2187,   256,  2069,  2187,  2069,  2187,   179,    92,    94, 
   49,  1517,    14,    15,    52,    16,    18,    20,  2187,  2187, 
  256,  2069,  2187,    92,    21,    49,   256,   270,   164,   179, 
   63,    22,    23,    25,     0,  2187,  2187,  2187,  2187,  2187, 
 2187,  2187,  2187,  2187,    96,    30,   287,   301,  1561,   315, 
    1,    89,  1605,  2187,  2069,  2187,   270,  2069,  2187,  2187, 
 2187,  2187,  2187,  2187,   256,   270,  2187,     2,   319,  1645, 
 2128,  1685,  1077,   333,   102,   529,   544,     3,   961,  2187, 
 2187,  2187,  2187,  2187,  2187,   141,  2187,   702,    65,   347, 
  160,   169,  2187,  2187,  2187,  2187,  2187,  2187,  2187,  2187, 
  126,  2187,  2187,  1725,    31,  2187,  2187,  2187,  2069,  2069, 
 2187,   197,   406,    32,   225,  2187,  2187,  2187,   603,     4, 
 2187,   236,  2187,  2187,  2187,  2187,  2187,  2187,  2069,  2187, 
 2187,  2187,  2187,  2187,  2187,  2187,  2187,  1121,   253,   200, 
  111,     5,   569,  2187,   119,  2187,  2187,  2187,  2187,  2187, 
 2187,  2187,  2187,   800,   372,  1165,   386,  1209,    68,  2012, 
 1754,  2187,  2187,    29,    34,  2187,   284,   238,   151,  2069, 
 2187,  2187,  2069,   859,   445,  2187,  2187,   712,  2187,  2187, 
 2187,    35,   628,  1794,   450,   996,   996,  2187,  2187,    36, 
 2187,  2187,  2187,     6,   422,  2187,  2187,  2187,  2187,  2187, 
  618,   440,  2187,  2187,  2187,  2187,  2187,  2187,  2187,  2187, 
   50,  2187,   114,    38,  2187,  2187,  2069,  2069,  2187,  1032, 
  761,  2187,   129,  1834,  2187,  2187,  2187,   939,  2187,  2187, 
 2187,     7,     8,     9,  2187,    39,    41,  2187,  2187,  2187, 
   72,  1253,  2187,  2187,  1297,   781,  1341,   650,   509,   480, 
  495,  1863,  2187,  2187,  2187,    86,  2187,  2187,  2187,  2187, 
 2187,  2187,  2187,  2187,   677,   795,    10,  2187,   849,  1903, 
 2187,  2187,  2187,   164,   179,    92,    94,  2187,  2187,  2187, 
 2187,  2187,  2187,  2187,  1385,    11,   887,   907,    47,   687, 
  514,  1943,  2187,  2187,  2187,  2187,  2187,  2187,   150,  2187, 
 2187,  2187,  2187,  1429,  1473,  2187,   736,  2187,   554,  2187, 
 1983,  2187,    88,   259,  2187,  2187,  2187,  2187,  2187,    12, 
 2187,    13,  2187, 
};

// Nonterminal transition matrix column ...
const uint8 delphi_grm_Nc[355] = {
   27,    27,    27,    27,    27,    34,    20,    20,     1,     1, 
   27,    27,    34,    34,    45,    46,    53,    13,    16,    16, 
   20,    20,     1,     1,     0,     2,     2,     3,     3,     4, 
    6,    15,    15,    27,    27,    27,    27,    27,    34,    34, 
   34,    34,    45,    46,    46,    53,    53,    11,    11,    12, 
   12,    13,    16,    16,    16,    16,    18,    18,    19,    19, 
   17,    17,    17,    17,    17,    20,    20,     0,     0,     2, 
    2,     2,     2,     3,     3,     4,     4,     4,     4,     4, 
    4,     6,     6,    15,    15,     1,     1,     1,     1,    27, 
   34,    34,    45,    46,    46,    53,    11,    12,    12,    13, 
   13,    16,    16,    17,    17,    18,    19,    19,    19,    19, 
   20,    20,    20,     1,    27,    27,    28,    28,    28,    28, 
   30,    34,    34,    35,     0,     0,     0,     2,     2,     3, 
    3,     4,     6,     6,    45,    45,    46,    46,    53,    53, 
    7,     8,     8,    11,    11,    12,    13,    13,    54,    54, 
   14,    14,    15,    15,    16,    16,    16,    16,    16,    17, 
   17,    17,    17,    18,    18,    19,    19,    20,    22,    22, 
   23,    24,    24,    25,    25,    26,    26,    27,    28,    28, 
   28,    28,    30,    31,    31,    32,    33,    34,    35,    39, 
   40,    40,    40,    41,    41,    43,    43,    45,    46,    46, 
   48,    48,    50,    50,    52,    53,    54,    54,    55,    55, 
    0,    57,    57,    57,     1,     2,     3,     4,    58,     5, 
    6,     7,     8,     8,     8,     9,    10,    10,    11,    11, 
   12,    12,    12,    13,    13,    14,    14,    15,    15,    15, 
   15,    15,    15,    15,    15,    15,    15,    15,    15,    16, 
   17,    17,    17,    18,    18,    19,    19,    20,    21,    22, 
   22,    23,    23,    24,    25,    25,    26,    26,    27,    27, 
   28,    28,    29,    29,    29,    30,    31,    32,    32,    33, 
   34,    34,    35,    36,    36,    37,    38,    39,    39,    40, 
   41,    41,    42,    42,    43,    43,    44,    44,    45,    45, 
   45,    45,    45,    45,    46,    46,    47,    47,    47,    47, 
   47,    47,    47,    47,    48,    48,    48,    48,    48,    49, 
   49,    49,    49,    50,    50,    51,    51,    51,    51,    51, 
   51,    51,    51,    52,    52,    52,    52,    52,    52,    52, 
   52,    52,    52,    53,    53,    54,    54,    55,    55,    56, 
   56,    57,    57,    58,    58, 
};

// Reduction matrix ...
const uint16 delphi_grm_Rm[91] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   351,   351,   351,     0,     0,     0, 
      46,   351,     0,     0,   351,     0,   351,   110,     0,   110, 
     351,   110,     0,     0,   110,   351,     0,     0,     0,     0, 
       0,     0,     0,     0,   200,     0,     0,     0,   199,     0, 
     300,   300,   351,     0,     0,     0,     0,   300,     0,     0, 
     300,     0,   300,     0,     0,   237,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   292,     0,   351,     0, 
       0,    22,   351,   351,     0,     0,     0,     0,     0,     0, 
       0, 
};

// Reduction matrix row ...
const int16 delphi_grm_Rr[343] = {
       0,     0,     8,     0,    18,     0,     0,     0,    58,     0, 
       0,    18,    31,     0,     0,     0,     0,     0,     0,     0, 
      12,    25,    18,    58,     0,     0,     0,     0,    60,    61, 
      62,   237,     0,     0,     0,     0,     0,     0,     0,    27, 
       0,    31,    17,    34,    35,    36,    31,    31,    31,    31, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     253,   298,   -13,     0,   251,     0,     0,     0,   237,     0, 
       0,     0,   237,   226,   226,     0,     0,    24,     0,     0, 
       0,     0,     0,     0,   226,   226,     0,     0,     0,     0, 
       0,     0,   237,     0,     0,     0,     0,     0,   237,   253, 
       0,   304,   314,   333,   298,     0,     0,   343,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   280,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,    67,    69, 
      76,     0,     0,     0,     0,     0,   -25,     0,     0,     0, 
       0,   129,     0,   142,     0,   143,     0,   150,   150,     0, 
     208,   147,   -36,   211,   -49,     0,     0,   237,     0,     0, 
       0,     0,     0,   315,     0,     0,   344,   347,   339,     0, 
     316,   323,   317,   266,     0,   237,     0,   237,     0,   -63, 
     237,     0,     0,     0,     0,     0,     0,     0,     0,    70, 
       0,    80,    71,     0,     0,   -77,     0,     0,     0,   124, 
       0,     0,     0,     0,     0,   159,   159,     0,     0,     0, 
     202,     0,     0,     0,     0,   303,   261,   305,   318,     0, 
       0,     0,   272,     0,   270,     0,   281,     0,   287,   296, 
       0,     0,     0,     0,   232,     0,    68,    72,     0,     0, 
      97,     0,   129,     0,     0,   132,     0,   159,   153,     0, 
     190,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   237,   303,     0,   237,   266,   237,     0,     0,     0, 
       0,   237,   292,     0,   294,     0,    85,   351,     0,     0, 
       0,    98,   101,     0,     0,   136,     0,   152,   159,     0, 
     193,     0,   168,   226,   226,   226,   226,     0,     0,   302, 
     273,     0,     0,   297,   237,     0,     0,     0,     0,     0, 
       0,     0,   131,     0,   195,     0,     0,     0,     0,     0, 
       0,     0,     0,   237,   237,     0,   136,     0,     0,     0, 
       0,     0,     0,   129,   171,     0,     0,     0,   173,     0, 
     175,     0,     0, 
};

// Reduction matrix column ...
const uint8 delphi_grm_Rc[101] = {
       0,     0,     0,     1,     0,     2,     3,     4,     0,     4, 
       5,     0,     2,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     6,     0,     7,     0,     0,     0,     0, 
       5,     5,     8,     9,    10,    11,     0,     0,     0,     0, 
       0,     0,     0,     0,     9,     9,     9,     9,     9,     9, 
       9,     9,     9,     9,     9,     9,     0,    12,     0,     0, 
       9,     0,     0,    11,     0,     0,     0,     0,     0,    13, 
       0,    11,     0,     0,     0,     0,     0,     0,     0,    11, 
      11,     0,     5,     5,     5,     5,     5,     5,     5,     5, 
       5,     5,     5,     5,     5,     5,     5,     5,     0,     9, 
       0, 
};

// Production lengths (minus one) ...
const int8 delphi_grm_PL[355] = {
       1,     0,     0,     0,     0,     3,     2,     5,    -1,     2, 
       0,     2,     0,     2,     1,     6,     2,     2,    -1,     2, 
       0,     2,     0,     2,     2,    -1,     1,    -1,     1,     3, 
       2,    -1,     1,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     2,     0,     2,     0,     0,     1,     1,     1, 
       1,     3,     0,     0,     0,     0,     1,     1,    -1,     1, 
       0,     0,     0,     0,     0,     3,     5,     0,     2,     0, 
       1,     1,     2,     0,     2,     0,     0,     0,     2,     0, 
       1,     0,     0,     0,     0,     0,     0,     0,     0,     2, 
       0,     2,     2,     0,     2,     2,     2,    -1,     0,     0, 
       2,     0,     2,     1,     1,     3,     0,     0,     0,     0, 
       0,     2,     2,     1,     0,     1,     0,     0,     0,     0, 
       5,     0,     2,     2,     0,     0,     2,     0,     2,    -1, 
       2,     3,     0,     2,     0,     2,    -1,     4,     0,     2, 
       2,     2,     0,     0,     3,     2,     1,     0,    -1,     2, 
      -1,     1,     1,     0,     0,     0,     0,     0,     0,    -1, 
       0,     0,     0,    -1,     2,     0,     2,     6,    -1,     2, 
       2,    -1,     1,    -1,     1,    -1,     0,     1,     0,     0, 
       0,     0,     1,     0,     0,     3,     5,     3,     3,     2, 
      -1,     1,     2,    -1,     1,    -1,     1,     2,     2,     0, 
      -1,     1,    -1,     2,     0,     2,     1,     0,    -1,     1, 
       4,    -1,     3,     1,     2,     2,     2,     2,     3,     5, 
       3,     3,     0,     0,     0,     1,    -1,     2,     0,     2, 
       2,     3,     1,     0,     0,     0,     2,    -1,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     2, 
       1,     0,     0,     0,     2,     0,     2,     1,     2,     0, 
       2,     3,     5,     5,     0,     2,    -1,     2,     0,     2, 
       0,     2,    -1,     1,     2,     3,     3,     7,     7,     3, 
       0,     2,     2,     0,     0,     2,     2,     0,     0,     1, 
       0,     2,    -1,     3,     0,     2,    -1,     1,     0,     3, 
       2,     1,     5,     3,     0,     2,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     1,     1,     1,     2,     0, 
       0,     0,     0,     0,     2,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     2,     0,     1, 
       2,     3,     1,    -1,     0,     0,     2,     0,     2,     0, 
       0,     0,     2,     0,     1, 
};


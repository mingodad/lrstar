
////////////////////////////////////////////////////////////////////////////////
//
//    PLM_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once



      #define TOP_DOWN  0
      #define PASS_OVER 1
      #define BOTTOM_UP 2

      class lrstar_parser_tables
      {
         friend class lrstar_parser;
         public:
         static const char *term_symb[    70]; // Terminal symbols of the grammar.
         static const char *head_symb[   152]; // Nonterminal symbols of the grammar.
         static const char *tact_name[     1]; // Terminal action names found in the grammar.
         static const uchar  head_numb[   255]; // Head symbol number for a production.
         static const ushort f_tail   [   256]; // First tail in a production.
         static const short  tail     [   410]; // Tail symbol number.
         static const char   arga     [    70]; // Arguments for terminal actions.

         private:
         static const uchar  Bm[   190]       ; // Boolean matrix.
         static const uchar  Br[   148]       ; // Boolean matrix row.
         static const uchar  Bc[    70]       ; // Boolean matrix column.
         static const uchar Bf[    70]       ; // Boolean matrix filter/mask.
         static const short  Tm[    69]       ; // Terminal transition matrix.
         static const uchar  Tr[   148]       ; // Terminal transition matrix row.
         static const uchar  Tc[    70]       ; // Terminal transition matrix column.
         static const short  Nm[  2415]       ; // Nonterminal transition matrix.
         static const ushort Nr[   148]       ; // Nonterminal transition matrix row.
         static const uchar  Nc[   255]       ; // Nonterminal transition matrix column.
         static const uchar  Rm[     5]       ; // Reduction matrix.
         static const short  Rr[   148]       ; // Reduction matrix row.
         static const uchar  Rc[    70]       ; // Reduction matrix column.
         static const char   PL[   255]       ; // Production length minus one.

         static const char   tact_numb[    70]; // Terminal action numbers.

         static void   (*init_func[    2]) ()       ; // Init action function pointers.
         static int    (*tact_func[    1]) (int& t) ; // Terminal action function pointers.
      };

//
////////////////////////////////////////////////////////////////////////////////


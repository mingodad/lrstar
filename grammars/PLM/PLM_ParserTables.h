
////////////////////////////////////////////////////////////////////////////////
//
//    PLM_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once

      #undef  GRAMMAR
      #undef  PARSER
      #undef  PARSER_TABLES
      #undef  LEXER
      #undef  ACTIONS
      #undef  TERM_ACTIONS
      #undef  NODE_ACTIONS
      #undef  INSENSITIVE
      #undef  LOOKAHEADS
      #undef  DEBUG_PARSER
      #undef  DEBUG_TRACE
      #undef  MAKE_AST
      #undef  EXPECTING
      #undef  REVERSABLE
      #undef  SEMANTICS
      #undef  ND_PARSING
      #undef  ND_THREADS

      #define GRAMMAR      "PLM"
      #define PARSER        PLM_Parser
      #define PARSER_TABLES PLM_ParserTables
      #define LEXER         PLM_Lexer
      #define ACTIONS       PLM_Actions
      #define TERM_ACTIONS  PLM_TermActions
      #define LOOKAHEADS    1
      #define EXPECTING

      typedef unsigned int   uint;
      typedef unsigned char  uchar;
      typedef unsigned short ushort;

      #define TOP_DOWN  0
      #define PASS_OVER 1
      #define BOTTOM_UP 2

      class PLM_ParserTables
      {
         friend class PLM_Parser;
         public:
         static char*  term_symb[    70]; // Terminal symbols of the grammar.
         static char*  head_symb[   152]; // Nonterminal symbols of the grammar.
         static char*  tact_name[     1]; // Terminal action names found in the grammar.
         static uchar  head_numb[   255]; // Head symbol number for a production.
         static ushort f_tail   [   256]; // First tail in a production.
         static short  tail     [   410]; // Tail symbol number.
         static char   arga     [    70]; // Arguments for terminal actions.

         private:
         static uchar  Bm[   190]       ; // Boolean matrix.
         static uchar  Br[   148]       ; // Boolean matrix row.
         static uchar  Bc[    70]       ; // Boolean matrix column.
         static uchar  Bf[    70]       ; // Boolean matrix filter/mask.
         static short  Tm[    69]       ; // Terminal transition matrix.
         static uchar  Tr[   148]       ; // Terminal transition matrix row.
         static uchar  Tc[    70]       ; // Terminal transition matrix column.
         static short  Nm[  2415]       ; // Nonterminal transition matrix.
         static ushort Nr[   148]       ; // Nonterminal transition matrix row.
         static uchar  Nc[   255]       ; // Nonterminal transition matrix column.
         static uchar  Rm[     5]       ; // Reduction matrix.
         static short  Rr[   148]       ; // Reduction matrix row.
         static uchar  Rc[    70]       ; // Reduction matrix column.
         static char   PL[   255]       ; // Production length minus one.

         static char   tact_numb[    70]; // Terminal action numbers.

         static void   (*init_func[    2]) ()       ; // Init action function pointers.
         static int    (*tact_func[    1]) (int& t) ; // Terminal action function pointers.
      };

//
////////////////////////////////////////////////////////////////////////////////


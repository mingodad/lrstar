
////////////////////////////////////////////////////////////////////////////////
//
//    Zeus_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once

      #include "lrstar_library_defs.h"


      class lrstar_parser_tables
      {
         friend class lrstar_parser;
         public:
         static const char *term_symb[    71]; // Terminal symbols of the grammar.
         static const char *head_symb[   114]; // Nonterminal symbols of the grammar.
         static const char *tact_name[     2]; // Terminal action names found in the grammar.
         static const uchar  head_numb[   222]; // Head symbol number for a production.
         static const ushort f_tail   [   223]; // First tail in a production.
         static const char   tail     [   479]; // Tail symbol number.
         static const char   arga     [    71]; // Arguments for terminal actions.

         private:
         static const uchar  Bm[   340]       ; // Boolean matrix.
         static const ushort Br[   229]       ; // Boolean matrix row.
         static const uchar  Bc[    71]       ; // Boolean matrix column.
         static const uchar Bf[    71]       ; // Boolean matrix filter/mask.
         static const short  Tm[   400]       ; // Terminal transition matrix.
         static const ushort Tr[   229]       ; // Terminal transition matrix row.
         static const uchar  Tc[    71]       ; // Terminal transition matrix column.
         static const short  Nm[  1154]       ; // Nonterminal transition matrix.
         static const ushort Nr[   229]       ; // Nonterminal transition matrix row.
         static const uchar  Nc[   222]       ; // Nonterminal transition matrix column.
         static const uchar  Rm[     1]       ; // Reduction matrix.
         static const uchar  Rr[   229]       ; // Reduction matrix row.
         static const uchar  Rc[    71]       ; // Reduction matrix column.
         static const char   PL[   222]       ; // Production length minus one.

         static const char   tact_numb[    71]; // Terminal action numbers.

         static void   (*init_func[    2]) ()       ; // Init action function pointers.
         static int    (*tact_func[    2]) (int& t) ; // Terminal action function pointers.
      };

//
////////////////////////////////////////////////////////////////////////////////


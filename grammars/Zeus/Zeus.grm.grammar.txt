
/* Zeus grammar */

/* Terminal Symbols */

    0  <error>
    1  <eof>
    2  <identifier>
    3  'DEFINITION'
    4  'HARDWARE_MODULE'
    5  ';'
    6  'END'
    7  '.'
    8  'IMPLEMENTATION'
    9  'CONST'
   10  'SIGNAL_CONST'
   11  'IMPORT'
   12  'FROM'
   13  'EXPORT'
   14  'QUALIFIED'
   15  '..'
   16  '*'
   17  '('
   18  ')'
   19  ','
   20  '['
   21  ']'
   22  'NOT'
   23  <number>
   24  'DIV'
   25  'MOD'
   26  'AND'
   27  '+'
   28  '-'
   29  'OR'
   30  '='
   31  '<>'
   32  '<'
   33  '<='
   34  '>'
   35  '>='
   36  'ARRAY'
   37  'OF'
   38  'IS'
   39  'TYPE'
   40  ':'
   41  'IN'
   42  'OUT'
   43  'CLOCK'
   44  'PREDEFINED'
   45  'COMPONENT'
   46  'HARDWARE'
   47  'ELSEIF'
   48  'EXP'
   49  'THEN'
   50  'IF'
   51  'ELSE'
   52  'OTHERWISE_WHEN'
   53  'WHEN'
   54  'OTHERWISE'
   55  'CONNECT'
   56  'END.'
   57  'ORDER'
   58  'TOP'
   59  'RIGHT'
   60  'BOTTOM'
   61  'LEFT'
   62  'CONSTRAINTS'
   63  ':='
   64  '=='
   65  'TO'
   66  'BY'
   67  'FOR'
   68  'DO'
   69  'DOtherwiseWhenAltS'
   70  'RESULT'

/* Productions */

    0       Grammar
        0      : HardwareCompilationUnit <eof> 
               ;

    1       HardwareCompilationUnit
        1      : HardwareDefinitionModule 
        2      | HardwareImplementationModule 
               ;

    2       HardwareDefinitionModule
        3      : 'DEFINITION' 'HARDWARE_MODULE' <identifier> ';' ImportList DefinitionList 'END' <identifier> '.' 
               ;

    3       HardwareImplementationModule
        4      : 'IMPLEMENTATION' HardwareModuleDecl 
               ;

    4       HardwareModuleDecl
        5      : 'HARDWARE_MODULE' <identifier> ';' ImportList Body 'END' <identifier> Period 
        6      | 'HARDWARE_MODULE' <identifier> ';' ImportList Export Body 'END' <identifier> Period 
               ;

    5       DefinitionList
        7      : 
        8      | DefinitionList Definition 
               ;

    6       Definition
        9      : ConstDecl 
       10      | TypeDecl 
               ;

    7       ConstDecl
       11      : ControlConstDecl 
       12      | SignalConstDecl 
               ;

    8       ControlConstDecl
       13      : 'CONST' 
       14      | ControlConstDecl Cd ';' 
               ;

    9       SignalConstDecl
       15      : 'SIGNAL_CONST' 
       16      | SignalConstDecl SignalCd ';' 
               ;

   10       ImportList
       17      : 
       18      | ImportList Import 
               ;

   11       Import
       19      : 'IMPORT' IdList ';' 
       20      | 'FROM' <identifier> 'IMPORT' IdList ';' 
               ;

   12       Export
       21      : 'EXPORT' IdList ';' 
       22      | 'EXPORT' 'QUALIFIED' IdList ';' 
               ;

   13       Period
       23      : '.' 
       24      | ';' 
               ;

   14       Qualident
       25      : <identifier> 
       26      | Qualident '.' <identifier> 
               ;

   15       IndexRange
       27      : ConstExp 
       28      | ConstExp '..' ConstExp 
               ;

   16       Selector
       29      : '*' <identifier> '(' Designator ')' 
               ;

   17       IndexRangeOrSelector
       30      : IndexRange 
       31      | Selector 
               ;

   18       IndexRangeOrSelectorList
       32      : IndexRangeOrSelector 
       33      | IndexRangeOrSelectorList ',' IndexRangeOrSelector 
               ;

   19       BrackIndexRangeOrSelectorList
       34      : '[' IndexRangeOrSelectorList ']' 
               ;

   20       FieldSelector
       35      : '.' <identifier> 
       36      | '.' <identifier> '..' <identifier> 
               ;

   21       DesignatorSelector
       37      : BrackIndexRangeOrSelectorList 
       38      | FieldSelector 
               ;

   22       DesignatorSelectorList
       39      : 
       40      | DesignatorSelectorList DesignatorSelector 
               ;

   23       ProperDesignator
       41      : <identifier> DesignatorSelectorList 
               ;

   24       Designator
       42      : ProperDesignator 
       43      | '*' 
               ;

   25       ParenConstExp
       44      : '(' ConstExp ')' 
               ;

   26       NotConstFactor
       45      : 'NOT' ConstFactor 
               ;

   27       ExtendedDesignator
       46      : Designator 
       47      | Designator '(' ConstExpList ')' 
               ;

   28       ConstFactor
       48      : <number> 
       49      | ParenConstExp 
       50      | NotConstFactor 
       51      | ExtendedDesignator 
               ;

   29       MulOp
       52      : '*' 
       53      | 'DIV' 
       54      | 'MOD' 
       55      | 'AND' 
               ;

   30       HalfM
       56      : MulOp ConstFactor 
               ;

   31       MulExpList
       57      : 
       58      | MulExpList HalfM 
               ;

   32       ConstTerm
       59      : ConstFactor MulExpList 
               ;

   33       AddOp
       60      : '+' 
       61      | '-' 
       62      | 'OR' 
               ;

   34       Sign
       63      : '+' 
       64      | '-' 
               ;

   35       HalfA
       65      : AddOp ConstTerm 
               ;

   36       AddExpList
       66      : 
       67      | AddExpList HalfA 
               ;

   37       SimpleConstExp
       68      : ConstTerm AddExpList 
       69      | Sign ConstTerm AddExpList 
               ;

   38       Relation
       70      : '=' 
       71      | '<>' 
       72      | '<' 
       73      | '<=' 
       74      | '>' 
       75      | '>=' 
               ;

   39       RelationExp
       76      : Relation SimpleConstExp 
               ;

   40       ConstExp
       77      : SimpleConstExp 
       78      | SimpleConstExp RelationExp 
               ;

   41       ConstExpList
       79      : ConstExp 
       80      | ConstExpList ',' ConstExp 
               ;

   42       BrackStrucConstExpList
       81      : '[' StrucConstExpList ']' 
               ;

   43       StrucConstExpList
       82      : StrucConstExp 
       83      | StrucConstExpList ',' StrucConstExp 
               ;

   44       StrucConstExp
       84      : ConstExp 
       85      | BrackStrucConstExpList 
               ;

   45       SigConstExpList
       86      : SigConstExp 
       87      | SigConstExpList ',' SigConstExp 
               ;

   46       ParenSigConstExpList
       88      : '(' SigConstExpList ')' 
               ;

   47       SigConstExp
       89      : ExtendedDesignator 
       90      | ParenSigConstExpList 
               ;

   48       ConstCollection
       91      : '(' '.' IdList '.' ')' 
               ;

   49       Cd
       92      : <identifier> '=' StrucConstExp 
               ;

   50       SigConstExpOrConstCollection
       93      : SigConstExp 
       94      | ConstCollection 
               ;

   51       SignalCd
       95      : <identifier> '=' SigConstExpOrConstCollection 
               ;

   52       Td
       96      : <identifier> '=' Type 
       97      | <identifier> FP '=' Type 
               ;

   53       Type
       98      : ArrayDecl 
       99      | ComponentDecl 
      100      | ExtendedQualident 
               ;

   54       ArrayDecl
      101      : 'ARRAY' 'OF' Type 
      102      | 'ARRAY' SubRangeType 'OF' Type 
               ;

   55       ExtendedQualident
      103      : Qualident 
      104      | Qualident ArgumentsOrBody 
               ;

   56       ArgumentsOrBody
      105      : ParenStrucConstExpList 
      106      | ComponentBody 
               ;

   57       ComponentBody
      107      : 'IS' Body 'END' 
               ;

   58       Body
      108      : DStatement 
      109      | Body DStatement 
               ;

   59       DStatement
      110      : ConnectionSpec 
      111      | ConstraintSpec 
      112      | DWhenStatement 
      113      | ConstDecl 
      114      | TypeDecl 
      115      | HardwareDecl 
      116      | HardwareModuleDecl 
               ;

   60       ParenStrucConstExpList
      117      : '(' '.' StrucConstExpList '.' ')' 
               ;

   61       TypeDecl
      118      : 'TYPE' 
      119      | TypeDecl Td ';' 
               ;

   62       Range
      120      : ConstExp '..' ConstExp 
      121      | ConstExp '..' ConstExp ':' <identifier> 
               ;

   63       RangeList
      122      : Range 
      123      | RangeList ',' Range 
               ;

   64       SubRangeType
      124      : '[' RangeList ']' 
               ;

   65       IdList
      125      : <identifier> 
      126      | IdList ',' <identifier> 
               ;

   66       ParamKind
      127      : 'IN' 
      128      | 'OUT' 
      129      | 'CLOCK' 
      130      | 'TYPE' 
               ;

   67       FParam
      131      : IdList ':' Type 
      132      | ParamKind IdList ':' Type 
               ;

   68       FParamList
      133      : FParam 
      134      | FParamList ';' FParam 
               ;

   69       FP
      135      : '(' ')' 
      136      | '(' FParamList ')' 
      137      | '(' ')' ':' Type 
      138      | '(' FParamList ')' ':' Type 
               ;

   70       FPOrPredefined
      139      : FP 
      140      | 'PREDEFINED' 
               ;

   71       ComponentDecl
      141      : ComponentHeading 
      142      | ComponentHeading ComponentBody 
               ;

   72       ComponentHeading
      143      : 'COMPONENT' FPOrPredefined 
               ;

   73       Hd
      144      : IdList ':' Type 
               ;

   74       HardwareDecl
      145      : 'HARDWARE' 
      146      | HardwareDecl Hd ';' 
               ;

   75       SimpleExp
      147      : Designator 
      148      | Designator '(' '.' StrucConstExpList '.' ')' 
      149      | Designator Exp 
      150      | Designator '(' '.' StrucConstExpList '.' ')' Exp 
               ;

   76       ExpList
      151      : Exp 
      152      | ExpList ',' Exp 
               ;

   77       StrucExp
      153      : '(' ExpList ')' DesignatorSelectorList 
               ;

   78       ElseIfAlt
      154      : 'ELSEIF' 'EXP' 'THEN' 'EXP' 
               ;

   79       ElseIfAltList
      155      : 
      156      | ElseIfAltList ElseIfAlt 
               ;

   80       IfExp
      157      : 'IF' Exp 'THEN' Exp ElseIfAltList 'ELSE' Exp 'END' 
               ;

   81       OtherwiseWhenAlt
      158      : 'OTHERWISE_WHEN' ConstExp 'THEN' Exp 
               ;

   82       OtherwiseWhenAltList
      159      : 
      160      | OtherwiseWhenAltList OtherwiseWhenAlt 
               ;

   83       WhenExp
      161      : 'WHEN' ConstExp 'THEN' Exp OtherwiseWhenAltList 'OTHERWISE' Exp 'END' 
               ;

   84       Exp
      162      : SimpleExp 
      163      | StrucExp 
      164      | IfExp 
      165      | WhenExp 
               ;

   85       Statement
      166      : Assignment 
      167      | Basic 
      168      | Connection 
      169      | IfStatement 
      170      | ForStatement 
      171      | WhenStatement 
      172      | Result 
               ;

   86       StatementList
      173      : 
      174      | StatementList Statement 
               ;

   87       StatementSeq
      175      : StatementList 
      176      | StatementSeq ',' StatementList 
               ;

   88       ConnectionSpec
      177      : 'CONNECT' StatementSeq 'END.' ';' 
               ;

   89       LCStatementSeq
      178      : LCStatementList 
      179      | LCStatementSeq ';' LCStatementList 
               ;

   90       LCStatementList
      180      : 
      181      | LCStatementList LCStatement 
               ;

   91       LCStatement
      182      : Basic 
      183      | ForStatement 
      184      | WhenStatement 
      185      | Order Boundaries 
               ;

   92       Order
      186      : 'ORDER' <identifier> LCStatementSeq 'END' 
               ;

   93       Boundaries
      187      : Boundary LCStatementSeq 'END' 
               ;

   94       Boundary
      188      : 'TOP' 
      189      | 'RIGHT' 
      190      | 'BOTTOM' 
      191      | 'LEFT' 
               ;

   95       ConstraintSpec
      192      : 'CONSTRAINTS' LCStatementSeq 'END.' ';' 
               ;

   96       DesignatorList
      193      : Designator 
      194      | DesignatorList ',' Designator 
               ;

   97       Basic
      195      : DesignatorList 
      196      | '[' <identifier> ']' DesignatorList 
               ;

   98       AssignOp
      197      : ':=' 
      198      | '==' 
               ;

   99       Assignment
      199      : Designator AssignOp Exp 
               ;

  100       ElseIfAltS
      200      : 'ELSEIF' Exp 'THEN' StatementSeq 
               ;

  101       ElseIfAltSList
      201      : 
      202      | ElseIfAltSList ElseIfAltS 
               ;

  102       IfStatement
      203      : 'IF' Exp 'THEN' StatementSeq ElseIfAltSList 'END' 
      204      | 'IF' Exp 'THEN' StatementSeq ElseIfAltSList 'ELSE' StatementSeq 'END' 
               ;

  103       Connection
      205      : Designator 
      206      | Designator Exp 
               ;

  104       VariableRange
      207      : <identifier> ':=' ConstExp 'TO' ConstExp 
      208      | <identifier> ':=' ConstExp 'TO' ConstExp 'BY' ConstExp 
               ;

  105       VariableRangeList
      209      : VariableRange 
      210      | VariableRangeList ',' VariableRange 
               ;

  106       ForConstDeclList
      211      : 
      212      | ForConstDeclList 'CONST' Cd ';' 
               ;

  107       ForStatement
      213      : 'FOR' VariableRangeList 'DO' ForConstDeclList StatementSeq 'END' 
               ;

  108       OtherwiseWhenAltS
      214      : 'OTHERWISE_WHEN' ConstExp 'THEN' StatementSeq 
               ;

  109       OtherwiseWhenAltSList
      215      : 
      216      | OtherwiseWhenAltSList OtherwiseWhenAltS 
               ;

  110       WhenStatement
      217      : 'WHEN' ConstExp 'THEN' StatementSeq OtherwiseWhenAltSList 'OTHERWISE' StatementSeq 'END' 
               ;

  111       DOtherwiseWhenAltSList
      218      : 
      219      | DOtherwiseWhenAltSList 'DOtherwiseWhenAltS' 
               ;

  112       DWhenStatement
      220      : 'WHEN' ConstExp 'THEN' Body DOtherwiseWhenAltSList 'OTHERWISE' Body 'END' 
               ;

  113       Result
      221      : 'RESULT' Exp 
               ;

/* End of Zeus grammar 


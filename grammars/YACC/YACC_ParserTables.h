
////////////////////////////////////////////////////////////////////////////////
//
//    YACC_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once



      #define TOP_DOWN  0
      #define PASS_OVER 1
      #define BOTTOM_UP 2

      class lrstar_parser_tables
      {
         friend class lrstar_parser;
         public:
         static const char *term_symb[    27]; // Terminal symbols of the grammar.
         static const char *head_symb[    17]; // Nonterminal symbols of the grammar.
         static const uchar  head_numb[    59]; // Head symbol number for a production.
         static const uchar  f_tail   [    60]; // First tail in a production.
         static const char   tail     [   110]; // Tail symbol number.

         private:
         static const uchar  Bm[    44]       ; // Boolean matrix.
         static const uchar  Br[    43]       ; // Boolean matrix row.
         static const uchar  Bc[    27]       ; // Boolean matrix column.
         static const uchar Bf[    27]       ; // Boolean matrix filter/mask.
         static const char   Tm[    86]       ; // Terminal transition matrix.
         static const uchar  Tr[    43]       ; // Terminal transition matrix row.
         static const uchar  Tc[    27]       ; // Terminal transition matrix column.
         static const char   Nm[    48]       ; // Nonterminal transition matrix.
         static const uchar  Nr[    43]       ; // Nonterminal transition matrix row.
         static const uchar  Nc[    59]       ; // Nonterminal transition matrix column.
         static const uchar  Rm[     1]       ; // Reduction matrix.
         static const uchar  Rr[    43]       ; // Reduction matrix row.
         static const uchar  Rc[    27]       ; // Reduction matrix column.
         static const char   PL[    59]       ; // Production length minus one.
      };

//
////////////////////////////////////////////////////////////////////////////////


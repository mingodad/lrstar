
/* COBOL grammar */

/* Terminal Symbols */

    0  <error>
    1  <eof>
    2  <ident>
    3  <decimal>
    4  <integer>
    5  <literal_start>
    6  <literal>
    7  <pseudo_text>
    8  <string>
    9  'IDENTIFICATION'
   10  'DIVISION'
   11  '.'
   12  'PROGRAM_ID'
   13  'INITIAL'
   14  'PROGRAM'
   15  'AUTHOR'
   16  'INSTALLATION'
   17  'DATE_WRITTEN'
   18  'DATE_COMPILED'
   19  'SECURITY'
   20  'ENVIRONMENT'
   21  'CONFIGURATION'
   22  'SECTION'
   23  'SOURCE_COMPUTER'
   24  'WITH'
   25  'DEBUGGING'
   26  'OBJECT_COMPUTER'
   27  'SPECIAL_NAMES'
   28  'FIGURATIVE_CONSTANTS'
   29  'INPUT_OUTPUT'
   30  'FILE_CONTROL'
   31  'I_O_CONTROL'
   32  'MEMORY'
   33  'SIZE'
   34  'COLLATING'
   35  'SEQUENCE'
   36  'WORDS'
   37  'CHARACTERS'
   38  'MODULES'
   39  'ALPHABET'
   40  'SYMBOLIC'
   41  'CLASS'
   42  'THRU'
   43  'CURRENCY'
   44  'SIGN'
   45  'DECIMAL'
   46  'POINT'
   47  'COMMA'
   48  'WORKSTATION'
   49  'ONE_LINE'
   50  'STATUS'
   51  'ON'
   52  'OFF'
   53  'STANDARD_1'
   54  'STANDARD_2'
   55  'NATIVE'
   56  'ALSO'
   57  'IN'
   58  'SELECT'
   59  'OPTIONAL'
   60  'ASSIGN'
   61  'TO'
   62  'DISPLAY'
   63  'NODISPLAY'
   64  'RESPECIFY'
   65  'ORGANIZATION'
   66  'ACCESS'
   67  'MODE'
   68  'RECORD'
   69  'KEY'
   70  'RELATIVE'
   71  'FILE'
   72  'CURSOR'
   73  'POSITION'
   74  'BUFFER'
   75  'BLOCKS'
   76  'PFKEY'
   77  'PADDING'
   78  'CHARACTER'
   79  'DELIMITER'
   80  'RESERVE'
   81  'AREA'
   82  'AREAS'
   83  'HASHSIZE'
   84  'OF'
   85  'ORDER'
   86  'BY'
   87  'ENTRY'
   88  'ALTERNATE'
   89  'SEQUENTIAL'
   90  'INDEXED'
   91  'DMS'
   92  'XDMS'
   93  'RANDOM'
   94  'DYNAMIC'
   95  'DUPLICATES'
   96  'RERUN'
   97  'EVERY'
   98  'RECORDS'
   99  'SAME'
  100  'FOR'
  101  'SORT'
  102  'MERGE'
  103  'DATA'
  104  'SYNCHRONIZED'
  105  'WORKING_STORAGE'
  106  'LINKAGE'
  107  'FD'
  108  'EXTERNAL'
  109  'GLOBAL'
  110  'BLOCK'
  111  'CONTAINS'
  112  'VARYING'
  113  'FROM'
  114  'LABEL'
  115  'STANDARD'
  116  'OMITTED'
  117  'LINAGE'
  118  'LINES'
  119  'FOOTING'
  120  'AT'
  121  'TOP'
  122  'BOTTOM'
  123  'CODE_SET'
  124  'VALUE'
  125  'FILENAME'
  126  'LIBRARY'
  127  'VOLUME'
  128  'SPACE'
  129  'INDEX'
  130  'PRINT_CLASS'
  131  'PRINT_FORM'
  132  'FILE_CLASS'
  133  'EXTENT'
  134  'RECOVERY'
  135  'DATABASE_NAME'
  136  'COMPRESSED'
  137  'USAGE'
  138  'DISPLAY_WS'
  139  'FILLER'
  140  'LEADING'
  141  'SEPARATE'
  142  'TRAILING'
  143  'NOT'
  144  'SYNC'
  145  'LEFT'
  146  'RIGHT'
  147  'JUST'
  148  'JUSTIFIED'
  149  'BLANK'
  150  'ZERO'
  151  'WHEN'
  152  'VALUES'
  153  'REDEFINES'
  154  'RENAMES'
  155  'COLUMN'
  156  'NUMBER'
  157  'ROW'
  158  'LINE'
  159  'RANGE'
  160  'OBJECT'
  161  'SOURCE'
  162  'PICTURE'
  163  'PIC'
  164  'NEGATIVE'
  165  'POSITIVE'
  166  'OCCURS'
  167  'TIMES'
  168  'DEPENDING'
  169  'ASCENDING'
  170  'DESCENDING'
  171  'BINARY'
  172  'COMPUTATIONAL'
  173  'COMP'
  174  'PACKED_DECIMAL'
  175  'PROCEDURE'
  176  'USING'
  177  'DECLARATIVES'
  178  'END'
  179  'ACCEPT'
  180  'DATE'
  181  'DAY'
  182  'DAY_OF_WEEK'
  183  'TIME'
  184  'ADD'
  185  'GIVING'
  186  'END_ADD'
  187  'CORR'
  188  'ALTER'
  189  'PROCEED'
  190  'BEGIN'
  191  'TRANSACTION'
  192  'SUBTRACTION'
  193  'END_BEGIN'
  194  'CALL'
  195  'END_CALL'
  196  'CONTENT'
  197  'REFERENCE'
  198  'EXCEPTION'
  199  'CANCEL'
  200  'CLOSE'
  201  'REMOVAL'
  202  'NO'
  203  'REWIND'
  204  'LOCK'
  205  'END_CLOSE'
  206  'REEL'
  207  'UNIT'
  208  'COMMIT'
  209  'END_COMMIT'
  210  'COMPUTE'
  211  '='
  212  'END_COMPUTE'
  213  'CONTINUE'
  214  'DELETE'
  215  'END_DELETE'
  216  'UPON'
  217  'ADVANCING'
  218  'AND'
  219  'READ'
  220  'ALTERED'
  221  'END_DISPLAY'
  222  'ONLY'
  223  'NO_MOD'
  224  'PFKEYS'
  225  'DIVIDE'
  226  'INTO'
  227  'REMAINDER'
  228  'END_DIVIDE'
  229  'ENTER'
  230  'EVALUATE'
  231  'END_EVALUATE'
  232  'OTHER'
  233  'EXIT'
  234  'FREE'
  235  'ALL'
  236  'END_FREE'
  237  'GO'
  238  'HOLD'
  239  'LIST'
  240  'END_CLAUSE'
  241  'RETRIEVAL'
  242  'UPDATE'
  243  'KEYS'
  244  'IF'
  245  'NEXT'
  246  'SENTENCE'
  247  'THEN'
  248  'ELSE'
  249  'END_IF'
  250  'INITIALIZE'
  251  'REPLACING'
  252  'INSPECT'
  253  'TALLYING'
  254  'CONVERTING'
  255  'BEFORE'
  256  'AFTER'
  257  'FIRST'
  258  'OUTPUT'
  259  'MOVE'
  260  'CONVERSION'
  261  'END_MOVE'
  262  'FAC'
  263  'ORDER_AREA'
  264  'MULTIPLY'
  265  'END_MULTIPLY'
  266  'OPEN'
  267  'PERFORM'
  268  'END_PERFORM'
  269  'UNTIL'
  270  'TEST'
  271  'MODIFIABLE'
  272  'END_READ'
  273  'RELEASE'
  274  'REPLACE'
  275  'RETURN'
  276  'END_RETURN'
  277  'REWRITE'
  278  'ALARM'
  279  'ROLL'
  280  'UP'
  281  'DOWN'
  282  'ERASE'
  283  'PROTECT'
  284  'MODIFY'
  285  'SETTING'
  286  'END_REWRITE'
  287  'ROLLBACK'
  288  'END_ROLLBACK'
  289  'SEARCH'
  290  'END_SEARCH'
  291  'SET'
  292  'INPUT'
  293  'START'
  294  'END_START'
  295  'STOP'
  296  'RUN'
  297  'STRING'
  298  'DELIMITED'
  299  'POINTER'
  300  'OVERFLOW'
  301  'END_STRING'
  302  'SPACES'
  303  'SUBTRACT'
  304  'END_SUBTRACT'
  305  'UNSTRING'
  306  'OR'
  307  'COUNT'
  308  'END_UNSTRING'
  309  'USE'
  310  'DEADLOCK'
  311  'ERROR'
  312  'WRITE'
  313  'PAGE'
  314  'END_WRITE'
  315  'INVALID'
  316  'TIMEOUT'
  317  'SECOND'
  318  'SECONDS'
  319  'HOLDER_ID'
  320  'I_O'
  321  'SHARED'
  322  'EXTEND'
  323  'SPECIAL_INPUT'
  324  'ANY'
  325  '('
  326  ')'
  327  '<'
  328  '>'
  329  '<='
  330  '>='
  331  'EQUAL'
  332  'LESS'
  333  'THAN'
  334  'GREATER'
  335  'NUMERIC'
  336  'ALPHABETIC'
  337  'ALPHANUMERIC'
  338  'ALPHANUMERIC_EDITED'
  339  'NUMERIC_EDITED'
  340  '+'
  341  '_'
  342  'ROUNDED'
  343  'TRUE'
  344  'FALSE'
  345  'ZEROS'
  346  ':'
  347  '*'
  348  '/'
  349  '**'
  350  '$'

/* Productions */

    0       Goal
        0      : Program <eof> 
               ;

    1       Program
        1      : IdentDiv EnvirDiv? DataDiv? ProcDiv? EndProgStmt? 
               ;

    2       IdentDiv
        2      : 'IDENTIFICATION' 'DIVISION' '.' 'PROGRAM_ID' '.' <ident> (INITIAL PROGRAM)? '.' (AUTHOR '.' (<error>+ '.')?)? (INSTALLATION '.' (<error>+ '.')?)? (DATE_WRITTEN '.' (<error>+ '.')?)? (DATE_COMPILED '.' (<error>+ '.')?)? (SECURITY '.' (<error>+ '.')?)? 
               ;

    3       EnvirDiv
        3      : 'ENVIRONMENT' 'DIVISION' '.' (CONFIGURATION SECTION '.')? (SOURCE_COMPUTER '.' (<ident> (WITH DEBUGGING)? '.')?)? (OBJECT_COMPUTER '.' (<ident> Memory? Sequence? '.')?)? (SPECIAL_NAMES '.' (SpecialClause+ '.')?)? (FIGURATIVE_CONSTANTS '.' FigConDef*)? (INPUT_OUTPUT SECTION '.' FILE_CONTROL '.' FileContrlEntry* (I_O_CONTROL '.' IOContrlEntry*)?)? 
               ;

    4       Memory
        4      : 'MEMORY' 'SIZE' <integer> Words 
               ;

    5       Sequence
        5      : 'COLLATING' 'SEQUENCE' <ident> 
               ;

    6       Words
        6      : 'WORDS' 
        7      | 'CHARACTERS' 
        8      | 'MODULES' 
               ;

    7       SpecialClause
        9      : WorkStation WorkStaStuff+ 
       10      | 'ALPHABET' <ident> Alphabet 
       11      | 'SYMBOLIC' 'CHARACTERS' SymbolicChars+ InName 
       12      | 'CLASS' <ident> (Literal (THRU Literal)?)+ 
       13      | 'CURRENCY' 'SIGN' Literal 
       14      | 'DECIMAL' 'POINT' 'COMMA' 
               ;

    8       WorkStation
       15      : 'WORKSTATION' 
       16      | 'ONE_LINE' 
       17      | <ident> 
               ;

    9       WorkStaStuff
       18      : 'STATUS' <ident> 
       19      | 'ON' 'STATUS' <ident> 
       20      | 'OFF' 'STATUS' <ident> 
               ;

   10       Alphabet
       21      : 'STANDARD_1' 
       22      | 'STANDARD_2' 
       23      | 'NATIVE' 
       24      | LiteralThru+ 
               ;

   11       LiteralThru
       25      : Literal (ThruLit | AlsoLit+)? 
               ;

   12       ThruLit
       26      : 'THRU' Literal 
               ;

   13       AlsoLit
       27      : 'ALSO' Literal 
               ;

   14       SymbolicChars
       28      : <ident>+ <integer>+ 
               ;

   15       InName
       29      : 'IN' <ident> 
               ;

   16       FigConDef
       30      : (<ident> Literal)+ '.' 
               ;

   17       FileContrlEntry
       31      : Select <ident> Assign SelectClause* '.' 
               ;

   18       Select
       32      : 'SELECT' 
       33      | 'SELECT' 'OPTIONAL' 
               ;

   19       Assign
       34      : 'ASSIGN' IdLit 
       35      | 'ASSIGN' 'TO' IdLit 
               ;

   20       SelectClause
       36      : Literal 
       37      | 'DISPLAY' 
       38      | 'NODISPLAY' 
       39      | 'RESPECIFY' 
       40      | ORGANIZATION? Organization 
       41      | 'ACCESS' AccessMode 
       42      | 'ACCESS' 'MODE' AccessMode 
       43      | 'RECORD' 'KEY' <ident> 
       44      | 'RELATIVE' 'KEY' <ident> 
       45      | 'STATUS' <ident> 
       46      | 'FILE' 'STATUS' <ident> 
       47      | 'CURSOR' 'POSITION' <ident> 
       48      | 'BUFFER' 'SIZE' <integer> BLOCKS? 
       49      | 'PFKEY' <ident> 
       50      | 'PADDING' 'CHARACTER' IdLit 
       51      | 'RECORD' 'DELIMITER' 'STANDARD_1' 
       52      | 'RECORD' 'DELIMITER' <ident> 
       53      | 'RESERVE' <integer> (AREA | AREAS)? 
       54      | 'WITH' 'HASHSIZE' 'OF' <integer> BLOCKS? 
       55      | 'ORDER' 'BY' 'KEY' 
       56      | 'ORDER' 'BY' 'ENTRY' 
       57      | 'ALTERNATE' 'RECORD' 'KEY' AltRecKey+ 
               ;

   21       Organization
       58      : 'SEQUENTIAL' 
       59      | 'RELATIVE' 
       60      | 'INDEXED' 
       61      | 'INDEXED' 'DMS' 
       62      | 'INDEXED' 'XDMS' 
               ;

   22       AccessMode
       63      : 'SEQUENTIAL' 
       64      | 'RANDOM' 
       65      | 'DYNAMIC' 
               ;

   23       AltRecKey
       66      : <ident> (WITH DUPLICATES)? 
       67      | <integer> <ident> (WITH DUPLICATES)? 
               ;

   24       IOContrlEntry
       68      : 'RERUN' (ON <ident>)? (EVERY <integer>)? 'RECORDS' OF? <ident> '.' 
       69      | 'SAME' Thing? (AREA FOR <ident>+)? '.' 
               ;

   25       Thing
       70      : 'RECORD' 
       71      | 'SORT' 
       72      | 'SORT' 'MERGE' 
               ;

   26       DataDiv
       73      : 'DATA' 'DIVISION' SYNCHRONIZED? '.' (FILE SECTION '.' FileDescEntry*)? (WORKING_STORAGE SECTION '.' DataDescEntry*)? (LINKAGE SECTION '.' DataDescEntry*)? 
               ;

   27       FileDescEntry
       74      : 'FD' <ident> FileDescClause* '.' DataDescEntry+ 
               ;

   28       FileDescClause
       75      : 'EXTERNAL' 
       76      | 'GLOBAL' 
       77      | 'BLOCK' CONTAINS? (<integer> TO)? <integer> (CHARACTERS | RECORDS)? 
       78      | 'RECORD' 'CONTAINS' <integer> Chars 
       79      | 'RECORD' 'VARYING' 'IN' 'SIZE' Chars 
       80      | 'RECORD' 'VARYING' 'IN' 'SIZE' 'FROM' <integer> 'TO' <integer> Chars 
       81      | 'LABEL' 'RECORD' 'STANDARD' 
       82      | 'LABEL' 'RECORDS' 'STANDARD' 
       83      | 'LABEL' 'RECORD' 'OMITTED' 
       84      | 'LABEL' 'RECORDS' 'OMITTED' 
       85      | 'DATA' 'RECORD' <ident>+ 
       86      | 'DATA' 'RECORDS' <ident>+ 
       87      | 'LINAGE' IdInt 'LINES' (WITH FOOTING AT IdInt)? 
       88      | 'LINES' 'AT' 'TOP' IdInt 
       89      | 'LINES' 'AT' 'BOTTOM' IdInt 
       90      | 'CODE_SET' <ident> 
       91      | 'VALUE' 'OF' StuffIs+ 
               ;

   29       StuffIs
       92      : 'FILENAME' IdLit 
       93      | 'LIBRARY' IdLit 
       94      | 'VOLUME' IdLit 
       95      | 'SPACE' IdLit 
       96      | 'POSITION' IdLit 
       97      | 'INDEX' 'AREA' IdLit 
       98      | 'DATA' 'AREA' IdLit 
       99      | 'PRINT_CLASS' IdLit 
      100      | 'PRINT_FORM' IdLit 
      101      | 'FILE_CLASS' IdLit 
      102      | 'EXTENT' 'SIZE' IdLit 
      103      | 'RECOVERY' 'BLOCKS' IdLit 
      104      | 'RECOVERY' 'STATUS' <ident> 
      105      | 'DATABASE_NAME' <ident> 
               ;

   30       Chars
      106      : 'CHARACTERS' 
      107      | 'COMPRESSED' 'CHARACTERS' 
               ;

   31       DataDescEntry
      108      : (<ident> UsageIs)? <integer> IdFiller DataClause* '.'? 
               ;

   32       UsageIs
      109      : 'USAGE' 'DISPLAY_WS' 
               ;

   33       IdFiller
      110      : <ident> 
      111      | 'FILLER' 
               ;

   34       DataClause
      112      : 'EXTERNAL' 
      113      | 'GLOBAL' 
      114      | USAGE? Usage 
      115      | SIGN? 'LEADING' 'SEPARATE' CHARACTERS? 
      116      | SIGN? 'TRAILING' 'SEPARATE' CHARACTERS? 
      117      | Occurs OccursClause* 
      118      | NOT? (SYNC | SYNCHRONIZED) (LEFT | RIGHT)? 
      119      | (JUST | JUSTIFIED) RIGHT? 
      120      | 'BLANK' 'ZERO' 
      121      | 'BLANK' 'WHEN' 'ZERO' 
      122      | 'VALUE' Value+ 
      123      | 'VALUES' Value+ 
      124      | 'REDEFINES' <ident> 
      125      | 'RENAMES' <ident> 'THRU' <ident> 
      126      | 'COLUMN' <integer> 
      127      | 'COLUMN' 'NUMBER' <integer> 
      128      | 'ROW' <integer> 
      129      | 'ROW' 'NUMBER' <integer> 
      130      | 'LINE' <integer> 
      131      | 'LINE' 'NUMBER' <integer> 
      132      | 'RANGE' Range 
      133      | 'OBJECT' <ident> 
      134      | 'SOURCE' <ident> 
      135      | 'PICTURE' Picture* 
      136      | 'PIC' Picture* 
               ;

   35       Range
      137      : 'NEGATIVE' IdLit 'TO' IdLit 
      138      | 'FROM' IdLit 'TO' IdLit 
      139      | 'POSITIVE' IdLit 'TO' IdLit 
      140      | <ident> IdLit 'TO' IdLit 
               ;

   36       Occurs
      141      : 'OCCURS' <integer> (TO <integer>)? TIMES? 
               ;

   37       OccursClause
      142      : Depending 
      143      | AscDesKey 
      144      | IndexedBy 
               ;

   38       Depending
      145      : 'DEPENDING' <ident> 
               ;

   39       AscDesKey
      146      : 'ASCENDING' 'KEY' <ident>+ 
      147      | 'DESCENDING' 'KEY' <ident>+ 
               ;

   40       IndexedBy
      148      : 'INDEXED' 'BY' <ident>+ 
               ;

   41       Usage
      149      : 'BINARY' 
      150      | 'COMPUTATIONAL' 
      151      | 'COMP' 
      152      | 'DISPLAY' 
      153      | 'DISPLAY_WS' 
      154      | 'INDEX' 
      155      | 'PACKED_DECIMAL' 
               ;

   42       Value
      156      : Primitive 
      157      | Primitive 'THRU' Primitive 
               ;

   43       ProcDiv
      158      : ProcStmt Declaratives Section+ 
      159      | ProcStmt Section+ 
               ;

   44       ProcStmt
      160      : 'PROCEDURE' 'DIVISION' (USING <ident>+)? '.' 
               ;

   45       Declaratives
      161      : 'DECLARATIVES' '.' Section+ 'END' 'DECLARATIVES' '.' 
               ;

   46       Section
      162      : <ident> 'SECTION' '.' 
      163      | <ident> '.' 
      164      | ImperStmt+ '.' 
               ;

   47       ImperStmt
      165      : IOStmt 
      166      | OtherStmt 
               ;

   48       IOStmt
      167      : CloseStmt 
      168      | OpenStmt 
      169      | ReadStmt 
      170      | RewriteStmt 
      171      | StartStmt 
      172      | WriteStmt 
               ;

   49       OtherStmt
      173      : AcceptStmt 
      174      | AddStmt 
      175      | AlterStmt 
      176      | BeginStmt 
      177      | CallStmt 
      178      | CancelStmt 
      179      | CommitStmt 
      180      | ComputeStmt 
      181      | ContinueStmt 
      182      | DeleteStmt 
      183      | DisplayStmt 
      184      | DispReadStmt 
      185      | DivideStmt 
      186      | EnterStmt 
      187      | EvaluateStmt 
      188      | ExitStmt 
      189      | ExitProgStmt 
      190      | FreeStmt 
      191      | GoToStmt 
      192      | HoldStmt 
      193      | IfStmt 
      194      | InitStmt 
      195      | InspectStmt 
      196      | MergeStmt 
      197      | MoveStmt 
      198      | MultStmt 
      199      | PerformStmt 
      200      | ReleaseStmt 
      201      | ReplaceStmt 
      202      | ReturnStmt 
      203      | RollbackStmt 
      204      | SearchStmt 
      205      | SetStmt 
      206      | SortStmt 
      207      | StopStmt 
      208      | StringStmt 
      209      | SubStmt 
      210      | UnstringStmt 
      211      | UseStmt 
               ;

   50       AcceptStmt
      212      : 'ACCEPT' <ident>+ (FROM From)? 
               ;

   51       From
      213      : <ident> 
      214      | 'DATE' 
      215      | 'DAY' 
      216      | 'DAY_OF_WEEK' 
      217      | 'TIME' 
               ;

   52       AddStmt
      218      : 'ADD' Exp 'TO' Target+ (GIVING Target+ SizeError? NotSizeError?)? END_ADD? 
      219      | 'ADD' Exp+ 'GIVING' Target+ SizeError? NotSizeError? END_ADD? 
      220      | 'ADD' 'CORR' <ident> 'TO' Target (GIVING Target+ SizeError? NotSizeError?)? END_ADD? 
               ;

   53       AlterStmt
      221      : 'ALTER' (<ident> TO <ident>)+ 
      222      | 'ALTER' (<ident> TO PROCEED TO <ident>)+ 
               ;

   54       BeginStmt
      223      : 'BEGIN' (TRANSACTION | SUBTRACTION) ErrorClause? NotErrorClause? END_BEGIN? 
               ;

   55       CallStmt
      224      : 'CALL' IdLit UsingClause? Exception? NotException? END_CALL? 
               ;

   56       UsingClause
      225      : 'USING' 
      226      | 'USING' Argument+ 
               ;

   57       Argument
      227      : <ident> 
      228      | 'BY' 'CONTENT' <ident> 
      229      | 'BY' 'REFERENCE' <ident> 
               ;

   58       Exception
      230      : 'EXCEPTION' ImperStmt 
               ;

   59       NotException
      231      : 'NOT' 'EXCEPTION' ImperStmt 
               ;

   60       CancelStmt
      232      : 'CANCEL' IdLit+ 
               ;

   61       CloseStmt
      233      : 'CLOSE' (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?)+ END_CLOSE? 
               ;

   62       Reel
      234      : 'REEL' 
      235      | 'UNIT' 
               ;

   63       CommitStmt
      236      : 'COMMIT' IdLit? ErrorClause? NotErrorClause? END_COMMIT? 
               ;

   64       ComputeStmt
      237      : 'COMPUTE' Target+ '=' Exp SizeError? NotSizeError? END_COMPUTE? 
               ;

   65       ContinueStmt
      238      : 'CONTINUE' 
               ;

   66       DeleteStmt
      239      : 'DELETE' <ident> RECORD? InvalidKeyPara? NotInvalidKeyPara? END_DELETE? 
               ;

   67       DisplayStmt
      240      : 'DISPLAY' Primitive+ (UPON WORKSTATION?)? (WITH NO ADVANCING)? 
               ;

   68       DispReadStmt
      241      : 'DISPLAY' 'AND' 'READ' ALTERED? <ident> 'ON' <ident> DispReadClause* END_DISPLAY? 
               ;

   69       DispReadClause
      242      : PfKey IdInt+ 
      243      | 'ONLY' PfKey IdInt+ 
      244      | PfKey IdInt+ 'ON' PfKey IdInt+ 
      245      | 'ONLY' PfKey IdInt+ 'ON' PfKey IdInt+ 
      246      | PfKey IdInt+ 'ON' PfKey IdInt+ ImperStmt 
      247      | 'ONLY' PfKey IdInt+ 'ON' PfKey IdInt+ ImperStmt 
      248      | 'NO_MOD' ImperStmt 
               ;

   70       PfKey
      249      : 'PFKEY' 
      250      | 'PFKEYS' 
               ;

   71       DivideStmt
      251      : 'DIVIDE' Exp (INTO | BY) Target+ (GIVING Target+)? (REMAINDER Target+)? SizeError? NotSizeError? END_DIVIDE? 
               ;

   72       EnterStmt
      252      : 'ENTER' <ident> '.' 
      253      | 'ENTER' <ident> <ident> '.' 
               ;

   73       EvaluateStmt
      254      : 'EVALUATE' Exp (ALSO Exp)* WhenAction+ WhenOtherAction? END_EVALUATE? 
               ;

   74       WhenAction
      255      : 'WHEN' CondClause ImperStmt+ 
      256      | 'WHEN' CondClause (ALSO CondClause)+ ImperStmt+ 
               ;

   75       WhenOtherAction
      257      : 'WHEN' 'OTHER' ImperStmt+ 
               ;

   76       CondClause
      258      : Condition 
      259      | Condition 'THRU' Primitive 
               ;

   77       ExitStmt
      260      : 'EXIT' 
               ;

   78       ExitProgStmt
      261      : 'EXIT' 'PROGRAM' 
               ;

   79       FreeStmt
      262      : 'FREE' 'ALL' ErrorClause? NotErrorClause? END_FREE? 
               ;

   80       GoToStmt
      263      : 'GO' 'TO' <ident> 
      264      | 'GO' 'TO' <ident>+ 'DEPENDING' <ident> 
               ;

   81       HoldStmt
      265      : 'HOLD' LIST? (RecordsClause | ForClause+ | ForKeysClause+) TimeOut? END_CLAUSE? 
               ;

   82       RecordsClause
      266      : 'RECORDS' OF? <ident> 
               ;

   83       ForClause
      267      : 'FOR' Retrieval 
               ;

   84       ForKeysClause
      268      : 'FOR' Retrieval KeysClause 
               ;

   85       Retrieval
      269      : 'RETRIEVAL' 
      270      | 'UPDATE' 
               ;

   86       KeysClause
      271      : 'KEYS' Key+ 
      272      | 'WITH' 'KEYS' Key+ 
               ;

   87       Key
      273      : IdLit 
      274      | 'INITIAL' IdLit 'CHARACTERS' 'OF' IdLit 
               ;

   88       IfStmt
      275      : 'IF' IfCondition Then Else EndIf 
               ;

   89       IfCondition
      276      : Condition 
               ;

   90       Then
      277      : ImperStmt+ 
      278      | 'NEXT' 'SENTENCE' 
      279      | 'THEN' ImperStmt+ 
      280      | 'THEN' 'NEXT' 'SENTENCE' 
               ;

   91       Else
      281      : 
      282      | 'ELSE' ImperStmt+ 
      283      | 'ELSE' 'NEXT' 'SENTENCE' 
               ;

   92       EndIf
      284      : 
      285      | 'END_IF' 
               ;

   93       Statement
      286      : ImperStmt+ 
      287      | 'NEXT' 'SENTENCE' 
               ;

   94       InitStmt
      288      : 'INITIALIZE' Variable+ (REPLACING (DataType DATA? BY IdLit)+)? 
               ;

   95       InspectStmt
      289      : 'INSPECT' Variable Tallying? Replacing? 
      290      | 'INSPECT' Variable Converting Before* 
               ;

   96       Tallying
      291      : 'TALLYING' (Variable FOR Characters+)+ 
               ;

   97       Replacing
      292      : 'REPLACING' CharactersBy+ 
               ;

   98       Converting
      293      : 'CONVERTING' IdLit 'TO' IdLit 
               ;

   99       Characters
      294      : 'CHARACTERS' Before* 
      295      | AllLeading (IdLit Before*)+ 
               ;

  100       Before
      296      : BeforeAfter 'INITIAL' IdLit 
               ;

  101       CharactersBy
      297      : 'CHARACTERS' BY? IdLit Before* 
      298      | AllLeadingFirst (IdLit BY IdLit Before*)+ 
               ;

  102       BeforeAfter
      299      : 'BEFORE' 
      300      | 'AFTER' 
               ;

  103       AllLeading
      301      : 'ALL' 
      302      | 'LEADING' 
               ;

  104       AllLeadingFirst
      303      : 'ALL' 
      304      | 'LEADING' 
      305      | 'FIRST' 
               ;

  105       MergeStmt
      306      : 'MERGE' <ident> AscDesClause+ SeqClause? 'USING' <ident>+ MergeClause 
               ;

  106       AscDesClause
      307      : 'ASCENDING' 'KEY' <ident>+ 
      308      | 'DESCENDING' 'KEY' <ident>+ 
               ;

  107       SeqClause
      309      : 'COLLATING' 'SEQUENCE' <ident> 
               ;

  108       MergeClause
      310      : 'OUTPUT' 'PROCEDURE' <ident> (THRU <ident>)? 
      311      | 'GIVING' <ident>+ 
               ;

  109       MoveStmt
      312      : 'MOVE' Exp 'TO' Target+ 
      313      | 'MOVE' 'CORR' Variable 'TO' Variable 
      314      | 'MOVE' 'WITH' 'CONVERSION' Variable 'TO' Variable ErrorClause? NotErrorClause? END_MOVE? 
      315      | 'MOVE' Exp 'TO' 'FAC' 'OF' Variable 
      316      | 'MOVE' 'FAC' 'OF' Variable 'TO' Exp 
      317      | 'MOVE' Exp 'TO' 'ORDER_AREA' 'OF' Variable 
      318      | 'MOVE' 'ORDER_AREA' 'OF' Variable 'TO' Variable 
               ;

  110       MultStmt
      319      : 'MULTIPLY' Exp 'BY' Target+ (GIVING Target+)? SizeError? NotSizeError? END_MULTIPLY? 
               ;

  111       OpenStmt
      320      : 'OPEN' (FileType (File (NO REWIND)?)+)+ 
               ;

  112       PerformStmt
      321      : Perform 
      322      | Perform PerformClause+ 
      323      | 'PERFORM' 'END_PERFORM' 
      324      | 'PERFORM' ImperStmt+ 'END_PERFORM' 
      325      | 'PERFORM' PerformClause+ 'END_PERFORM' 
      326      | 'PERFORM' PerformClause+ ImperStmt+ 'END_PERFORM' 
               ;

  113       Perform
      327      : 'PERFORM' <ident> 
      328      | 'PERFORM' <ident> 'THRU' <ident> 
               ;

  114       PerformClause
      329      : IdInt 'TIMES' 
      330      | 'UNTIL' Condition 
      331      | 'WITH' 'TEST' BeforeAfter 
      332      | Varying <ident> 'FROM' IdLitInt 'BY' IdLitInt 
               ;

  115       Varying
      333      : 'VARYING' 
      334      | 'AFTER' 
               ;

  116       ReadStmt
      335      : Read File ReadQual* ReadPara* EndRead 
               ;

  117       Read
      336      : 'READ' 
               ;

  118       File
      337      : <ident> 
               ;

  119       ReadQual
      338      : 'RECORD' 
      339      | 'NEXT' 
      340      | 'NEXT' 'RECORD' 
      341      | 'HOLD' 
      342      | 'WITH' 'HOLD' 
      343      | 'MODIFIABLE' 
      344      | 'ALTERED' 
      345      | 'INTO' <ident> 
      346      | 'KEY' <ident> 
      347      | TimeOut 
               ;

  120       ReadPara
      348      : AtEndPara 
      349      | NotAtEndPara 
      350      | InvalidKeyPara 
      351      | NotInvalidKeyPara 
               ;

  121       EndRead
      352      : 
      353      | 'END_READ' 
               ;

  122       ReleaseStmt
      354      : 'RELEASE' <ident> (FROM <ident>)? 
               ;

  123       ReplaceStmt
      355      : 'REPLACE' (<pseudo_text> BY <pseudo_text>)+ 
      356      | 'REPLACE' 'OFF' 
               ;

  124       ReturnStmt
      357      : 'RETURN' <ident> 'END' ImperStmt (NOT END ImperStmt)? END_RETURN? 
               ;

  125       RewriteStmt
      358      : 'REWRITE' Record RewriteQual* RewritePara* EndRewrite? 
               ;

  126       RewriteQual
      359      : 'FROM' <ident> 
      360      | 'ALARM' 
      361      | 'ROLL' 'UP' 
      362      | 'ROLL' 'DOWN' 
      363      | 'ERASE' 'PROTECT' 
      364      | 'ERASE' 'MODIFY' 
      365      | 'AFTER' 'ALARM' 
      366      | 'AFTER' 'ROLL' 'UP' 
      367      | 'AFTER' 'ROLL' 'DOWN' 
      368      | 'AFTER' 'ERASE' 'PROTECT' 
      369      | 'AFTER' 'ERASE' 'MODIFY' 
      370      | 'AFTER' 'SETTING' 'CURSOR' IdInt RowLine IdInt 
               ;

  127       RewritePara
      371      : InvalidKeyPara 
      372      | NotInvalidKeyPara 
               ;

  128       EndRewrite
      373      : 'END_REWRITE' 
               ;

  129       RollbackStmt
      374      : 'ROLLBACK' IdLit ErrorClause? NotErrorClause? END_ROLLBACK? 
               ;

  130       SearchStmt
      375      : 'SEARCH' ALL? <ident> (VARYING <ident>)? (AT END ImperStmt+)? (WHEN CondExp (AND CondExp)? Statement)+ END_SEARCH? 
               ;

  131       SetStmt
      376      : 'SET' VarFC+ Primitive 
      377      | 'SET' VarFC+ 'TO' Primitive 
      378      | 'SET' VarFC 'UP' 'BY' Primitive 
      379      | 'SET' VarFC 'DOWN' 'BY' Primitive 
               ;

  132       VarFC
      380      : Variable 
      381      | FigConst 
               ;

  133       SortStmt
      382      : 'SORT' <ident> (OnAscDesKey <ident>+)+ (Duplicates | SequenceIs)* InputProc OutputProc 
               ;

  134       OnAscDesKey
      383      : 'ON' 'ASCENDING' 
      384      | 'ON' 'DESCENDING' 
      385      | 'ON' 'ASCENDING' 'KEY' 
      386      | 'ON' 'DESCENDING' 'KEY' 
               ;

  135       Duplicates
      387      : 'WITH' 'DUPLICATES' (IN ORDER)? 
               ;

  136       SequenceIs
      388      : 'COLLATING' 'SEQUENCE' <ident> 
               ;

  137       InputProc
      389      : 'INPUT' ProcIs 
      390      | 'USING' <ident>+ 
               ;

  138       OutputProc
      391      : 'OUTPUT' ProcIs 
      392      | 'GIVING' <ident>+ 
               ;

  139       ProcIs
      393      : 'PROCEDURE' <ident> (THRU <ident>)? 
               ;

  140       StartStmt
      394      : 'START' <ident> KeyCondition? InvalidKeyPara? NotInvalidKeyPara? END_START? 
               ;

  141       KeyCondition
      395      : QualOper <ident> 
      396      | 'KEY' QualOper <ident> 
      397      | 'KEY' <ident> QualOper <ident> 
               ;

  142       StopStmt
      398      : 'STOP' 'RUN' 
      399      | 'STOP' Literal 
               ;

  143       StringStmt
      400      : 'STRING' (ConstVar+ DELIMITED BY? IdLitSize)+ 'INTO' <ident> (WITH POINTER <ident>)? (OVERFLOW ImperStmt)? (NOT OVERFLOW ImperStmt)? END_STRING? 
               ;

  144       ConstVar
      401      : Constant 
      402      | Variable 
               ;

  145       IdLitSize
      403      : <ident> 
      404      | Literal 
      405      | 'SIZE' 
      406      | 'SPACES' 
               ;

  146       SubStmt
      407      : 'SUBTRACT' Exp 'FROM' Target+ (GIVING Target+)? SizeError? NotSizeError? END_SUBTRACT? 
      408      | 'SUBTRACT' 'CORR' <ident> 'FROM' Target SizeError? NotSizeError? END_SUBTRACT? 
               ;

  147       UnstringStmt
      409      : 'UNSTRING' <ident> (DELIMITED BY? ALL? IdLit (OR ALL? IdLit)*)? 'INTO' (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?)+ (WITH POINTER <ident>)? (TALLYING IN? <ident>)? (OVERFLOW ImperStmt)? (NOT OVERFLOW ImperStmt)? END_UNSTRING? 
               ;

  148       UseStmt
      410      : 'USE' 'AFTER' 'DEADLOCK' 
      411      | 'USE' GlobalAfterStan (EXCEPTION | ERROR) ProcedureOn (<ident> | FileType) 
               ;

  149       GlobalAfterStan
      412      : 'AFTER' 
      413      | 'AFTER' 'STANDARD' 
      414      | 'GLOBAL' 'AFTER' 
      415      | 'GLOBAL' 'AFTER' 'STANDARD' 
               ;

  150       ProcedureOn
      416      : 'PROCEDURE' 
      417      | 'PROCEDURE' 'ON' 
               ;

  151       WriteStmt
      418      : 'WRITE' Record WriteQual* WritePara* EndWrite? 
               ;

  152       Record
      419      : <ident> 
               ;

  153       WriteQual
      420      : 'FROM' <ident> 
      421      | 'AFTER' Advance 
      422      | 'BEFORE' Advance 
      423      | 'AFTER' 'ADVANCING' Advance 
      424      | 'BEFORE' 'ADVANCING' Advance 
      425      | TimeOut 
               ;

  154       WritePara
      426      : AtEop 
      427      | NotAtEop 
      428      | InvalidKeyPara 
      429      | NotInvalidKeyPara 
               ;

  155       Advance
      430      : AdvId 
      431      | AdvId 'LINE' 
      432      | AdvId 'LINES' 
      433      | 'PAGE' 
               ;

  156       AdvId
      434      : <ident> 
      435      | <integer> 
               ;

  157       EndWrite
      436      : 'END_WRITE' 
               ;

  158       EndProgStmt
      437      : 'END' 'PROGRAM' <ident> '.' 
               ;

  159       ErrorClause
      438      : 'ERROR' ImperStmt 
               ;

  160       NotErrorClause
      439      : 'NOT' 'ERROR' ImperStmt 
               ;

  161       SizeError
      440      : 'SIZE' 'ERROR' ImperStmt 
               ;

  162       NotSizeError
      441      : 'NOT' 'SIZE' 'ERROR' ImperStmt 
               ;

  163       InvalidKeyPara
      442      : InvalidKey ImperStmt* 
               ;

  164       InvalidKey
      443      : 'INVALID' 'KEY' 
               ;

  165       NotInvalidKeyPara
      444      : NotInvalidKey ImperStmt* 
               ;

  166       NotInvalidKey
      445      : 'NOT' 'INVALID' 'KEY' 
               ;

  167       AtEndPara
      446      : AtEnd ImperStmt* 
               ;

  168       AtEnd
      447      : 'END' 
      448      | 'AT' 'END' 
               ;

  169       NotAtEndPara
      449      : NotAtEnd ImperStmt* 
               ;

  170       NotAtEnd
      450      : 'NOT' 'END' 
      451      | 'NOT' 'AT' 'END' 
               ;

  171       AtEop
      452      : 'END' 'OF' 'PAGE' ImperStmt* 
               ;

  172       NotAtEop
      453      : 'NOT' 'END' 'OF' 'PAGE' ImperStmt* 
               ;

  173       TimeOut
      454      : TimeOutQual ImperStmt 
      455      | TimeOutQual 'NEXT' 'SENTENCE' 
               ;

  174       TimeOutQual
      456      : TimeOutOf 
      457      | TimeOutOf Holder 
      458      | TimeOutOf Seconds 
      459      | TimeOutOf Seconds Holder 
               ;

  175       TimeOutOf
      460      : 'TIMEOUT' IdInt 
      461      | 'TIMEOUT' 'OF' IdInt 
               ;

  176       Seconds
      462      : 'SECOND' 
      463      | 'SECONDS' 
               ;

  177       Holder
      464      : 'HOLDER_ID' <ident> 
      465      | 'HOLDER_ID' 'IN' <ident> 
               ;

  178       IdInt
      466      : <ident> 
      467      | <integer> 
               ;

  179       RowLine
      468      : 'ROW' 
      469      | 'LINE' 
               ;

  180       FileType
      470      : 'INPUT' 
      471      | 'OUTPUT' 
      472      | 'I_O' 
      473      | 'SHARED' 
      474      | 'EXTEND' 
      475      | 'SPECIAL_INPUT' 
               ;

  181       Condition
      476      : CondExp 
      477      | Condition 'AND' CondExp 
      478      | Condition 'OR' CondExp 
      479      | Condition 'AND' QualOper CondPrim 
      480      | Condition 'OR' QualOper CondPrim 
               ;

  182       CondExp
      481      : CondPrim 
      482      | CondPrim DataType 
      483      | CondPrim 'NOT' DataType 
      484      | CondPrim QualOper CondPrim 
      485      | 'NOT' CondPrim 
      486      | 'ANY' CondPrim 
               ;

  183       CondPrim
      487      : Exp 
      488      | '(' Condition ')' 
      489      | 'FAC' 'OF' Variable 
      490      | 'FAC' 'OF' Variable 'ALTERED' 
               ;

  184       QualOper
      491      : CondOper 
      492      | NotPrefix CondOper 
               ;

  185       NotPrefix
      493      : 'NOT' 
               ;

  186       CondOper
      494      : '=' 
      495      | '<' 
      496      | '>' 
      497      | '<=' 
      498      | '>=' 
      499      | 'EQUAL' 
      500      | 'EQUAL' 'TO' 
      501      | 'LESS' 'THAN' 
      502      | 'GREATER' 'THAN' 
      503      | 'LESS' 'THAN' 'OR' 'EQUAL' 
      504      | 'LESS' 'THAN' 'OR' 'EQUAL' 'TO' 
      505      | 'GREATER' 'THAN' 'OR' 'EQUAL' 'TO' 
      506      | 'GREATER' 'THAN' 'OR' 'EQUAL' 
               ;

  187       DataType
      507      : 'NUMERIC' 
      508      | 'ALPHABETIC' 
      509      | 'ALPHANUMERIC' 
      510      | 'ALPHANUMERIC_EDITED' 
      511      | 'NUMERIC_EDITED' 
               ;

  188       Exp
      512      : Primitive 
      513      | Exp Operator Primitive 
               ;

  189       Primitive
      514      : Constant 
      515      | '+' Constant 
      516      | '_' Constant 
      517      | FigConst 
      518      | Variable 
      519      | '(' Exp ')' 
               ;

  190       FigConst
      520      : Variable (IN | OF) (FAC OF)? Variable 
      521      | FigConst (IN | OF) (FAC OF)? Variable 
               ;

  191       IdLit
      522      : <ident> 
      523      | Literal 
               ;

  192       Target
      524      : Constant 
      525      | Variable 
      526      | Variable 'ROUNDED' 
      527      | FigConst 
               ;

  193       Constant
      528      : <integer> 
      529      | <decimal> 
      530      | <integer> <decimal> 
      531      | <string> 
      532      | Literal 
      533      | 'TRUE' 
      534      | 'FALSE' 
      535      | 'ZERO' 
      536      | 'ZEROS' 
      537      | 'ALL' 'ZEROS' 
      538      | 'ALL' Literal 
      539      | 'SPACE' 
      540      | 'SPACES' 
      541      | 'ON' 
      542      | 'OFF' 
               ;

  194       Variable
      543      : Id 
      544      | Id '(' Exp+ ')' 
      545      | Id '(' IdLitInt ':' IdLitInt ')' 
               ;

  195       Id
      546      : <ident> 
               ;

  196       IdLitInt
      547      : <ident> 
      548      | Literal 
      549      | <integer> 
               ;

  197       Operator
      550      : '+' 
      551      | '_' 
      552      | '*' 
      553      | '/' 
      554      | '**' 
               ;

  198       Literal
      555      : <literal> 
      556      | LiteralStart <literal> 
               ;

  199       LiteralStart
      557      : <literal_start> 
      558      | LiteralStart <literal_start> 
               ;

  200       Picture
      559      : <ident> 
      560      | <integer> 
      561      | <decimal> 
      562      | '(' 
      563      | ')' 
      564      | '*' 
      565      | '/' 
      566      | '+' 
      567      | '_' 
      568      | '$' 
               ;

  201       EnvirDiv?
      569      : 
      570      | EnvirDiv 
               ;

  202       DataDiv?
      571      : 
      572      | DataDiv 
               ;

  203       ProcDiv?
      573      : 
      574      | ProcDiv 
               ;

  204       EndProgStmt?
      575      : 
      576      | EndProgStmt 
               ;

  205       (INITIAL PROGRAM)?
      577      : 
      578      | 'INITIAL' 'PROGRAM' 
               ;

  206       <error>+
      579      : <error> 
      580      | <error>+ <error> 
               ;

  207       (<error>+ '.')?
      581      : 
      582      | <error>+ '.' 
               ;

  208       (AUTHOR '.' (<error>+ '.')?)?
      583      : 
      584      | 'AUTHOR' '.' (<error>+ '.')? 
               ;

  209       (INSTALLATION '.' (<error>+ '.')?)?
      585      : 
      586      | 'INSTALLATION' '.' (<error>+ '.')? 
               ;

  210       (DATE_WRITTEN '.' (<error>+ '.')?)?
      587      : 
      588      | 'DATE_WRITTEN' '.' (<error>+ '.')? 
               ;

  211       (DATE_COMPILED '.' (<error>+ '.')?)?
      589      : 
      590      | 'DATE_COMPILED' '.' (<error>+ '.')? 
               ;

  212       (SECURITY '.' (<error>+ '.')?)?
      591      : 
      592      | 'SECURITY' '.' (<error>+ '.')? 
               ;

  213       (CONFIGURATION SECTION '.')?
      593      : 
      594      | 'CONFIGURATION' 'SECTION' '.' 
               ;

  214       (WITH DEBUGGING)?
      595      : 
      596      | 'WITH' 'DEBUGGING' 
               ;

  215       (<ident> (WITH DEBUGGING)? '.')?
      597      : 
      598      | <ident> (WITH DEBUGGING)? '.' 
               ;

  216       (SOURCE_COMPUTER '.' (<ident> (WITH DEBUGGING)? '.')?)?
      599      : 
      600      | 'SOURCE_COMPUTER' '.' (<ident> (WITH DEBUGGING)? '.')? 
               ;

  217       Memory?
      601      : 
      602      | Memory 
               ;

  218       Sequence?
      603      : 
      604      | Sequence 
               ;

  219       (<ident> Memory? Sequence? '.')?
      605      : 
      606      | <ident> Memory? Sequence? '.' 
               ;

  220       (OBJECT_COMPUTER '.' (<ident> Memory? Sequence? '.')?)?
      607      : 
      608      | 'OBJECT_COMPUTER' '.' (<ident> Memory? Sequence? '.')? 
               ;

  221       SpecialClause+
      609      : SpecialClause 
      610      | SpecialClause+ SpecialClause 
               ;

  222       (SpecialClause+ '.')?
      611      : 
      612      | SpecialClause+ '.' 
               ;

  223       (SPECIAL_NAMES '.' (SpecialClause+ '.')?)?
      613      : 
      614      | 'SPECIAL_NAMES' '.' (SpecialClause+ '.')? 
               ;

  224       FigConDef*
      615      : 
      616      | FigConDef* FigConDef 
               ;

  225       (FIGURATIVE_CONSTANTS '.' FigConDef*)?
      617      : 
      618      | 'FIGURATIVE_CONSTANTS' '.' FigConDef* 
               ;

  226       FileContrlEntry*
      619      : 
      620      | FileContrlEntry* FileContrlEntry 
               ;

  227       IOContrlEntry*
      621      : 
      622      | IOContrlEntry* IOContrlEntry 
               ;

  228       (I_O_CONTROL '.' IOContrlEntry*)?
      623      : 
      624      | 'I_O_CONTROL' '.' IOContrlEntry* 
               ;

  229       (INPUT_OUTPUT SECTION '.' FILE_CONTROL '.' FileContrlEntry* (I_O_CONTROL '.' IOContrlEntry*)?)?
      625      : 
      626      | 'INPUT_OUTPUT' 'SECTION' '.' 'FILE_CONTROL' '.' FileContrlEntry* (I_O_CONTROL '.' IOContrlEntry*)? 
               ;

  230       WorkStaStuff+
      627      : WorkStaStuff 
      628      | WorkStaStuff+ WorkStaStuff 
               ;

  231       SymbolicChars+
      629      : SymbolicChars 
      630      | SymbolicChars+ SymbolicChars 
               ;

  232       (THRU Literal)?
      631      : 
      632      | 'THRU' Literal 
               ;

  233       (Literal (THRU Literal)?)
      633      : Literal (THRU Literal)? 
               ;

  234       (Literal (THRU Literal)?)+
      634      : (Literal (THRU Literal)?) 
      635      | (Literal (THRU Literal)?)+ (Literal (THRU Literal)?) 
               ;

  235       LiteralThru+
      636      : LiteralThru 
      637      | LiteralThru+ LiteralThru 
               ;

  236       AlsoLit+
      638      : AlsoLit 
      639      | AlsoLit+ AlsoLit 
               ;

  237       (ThruLit | AlsoLit+)?
      640      : 
      641      | ThruLit 
      642      | AlsoLit+ 
               ;

  238       <ident>+
      643      : <ident> 
      644      | <ident>+ <ident> 
               ;

  239       <integer>+
      645      : <integer> 
      646      | <integer>+ <integer> 
               ;

  240       (<ident> Literal)
      647      : <ident> Literal 
               ;

  241       (<ident> Literal)+
      648      : (<ident> Literal) 
      649      | (<ident> Literal)+ (<ident> Literal) 
               ;

  242       SelectClause*
      650      : 
      651      | SelectClause* SelectClause 
               ;

  243       ORGANIZATION?
      652      : 
      653      | 'ORGANIZATION' 
               ;

  244       BLOCKS?
      654      : 
      655      | 'BLOCKS' 
               ;

  245       (AREA | AREAS)?
      656      : 
      657      | 'AREA' 
      658      | 'AREAS' 
               ;

  246       AltRecKey+
      659      : AltRecKey 
      660      | AltRecKey+ AltRecKey 
               ;

  247       (WITH DUPLICATES)?
      661      : 
      662      | 'WITH' 'DUPLICATES' 
               ;

  248       (ON <ident>)?
      663      : 
      664      | 'ON' <ident> 
               ;

  249       (EVERY <integer>)?
      665      : 
      666      | 'EVERY' <integer> 
               ;

  250       OF?
      667      : 
      668      | 'OF' 
               ;

  251       Thing?
      669      : 
      670      | Thing 
               ;

  252       (AREA FOR <ident>+)?
      671      : 
      672      | 'AREA' 'FOR' <ident>+ 
               ;

  253       SYNCHRONIZED?
      673      : 
      674      | 'SYNCHRONIZED' 
               ;

  254       FileDescEntry*
      675      : 
      676      | FileDescEntry* FileDescEntry 
               ;

  255       (FILE SECTION '.' FileDescEntry*)?
      677      : 
      678      | 'FILE' 'SECTION' '.' FileDescEntry* 
               ;

  256       DataDescEntry*
      679      : 
      680      | DataDescEntry* DataDescEntry 
               ;

  257       (WORKING_STORAGE SECTION '.' DataDescEntry*)?
      681      : 
      682      | 'WORKING_STORAGE' 'SECTION' '.' DataDescEntry* 
               ;

  258       (LINKAGE SECTION '.' DataDescEntry*)?
      683      : 
      684      | 'LINKAGE' 'SECTION' '.' DataDescEntry* 
               ;

  259       FileDescClause*
      685      : 
      686      | FileDescClause* FileDescClause 
               ;

  260       DataDescEntry+
      687      : DataDescEntry 
      688      | DataDescEntry+ DataDescEntry 
               ;

  261       CONTAINS?
      689      : 
      690      | 'CONTAINS' 
               ;

  262       (<integer> TO)?
      691      : 
      692      | <integer> 'TO' 
               ;

  263       (CHARACTERS | RECORDS)?
      693      : 
      694      | 'CHARACTERS' 
      695      | 'RECORDS' 
               ;

  264       (WITH FOOTING AT IdInt)?
      696      : 
      697      | 'WITH' 'FOOTING' 'AT' IdInt 
               ;

  265       StuffIs+
      698      : StuffIs 
      699      | StuffIs+ StuffIs 
               ;

  266       (<ident> UsageIs)?
      700      : 
      701      | <ident> UsageIs 
               ;

  267       DataClause*
      702      : 
      703      | DataClause* DataClause 
               ;

  268       '.'?
      704      : 
      705      | '.' 
               ;

  269       USAGE?
      706      : 
      707      | 'USAGE' 
               ;

  270       SIGN?
      708      : 
      709      | 'SIGN' 
               ;

  271       CHARACTERS?
      710      : 
      711      | 'CHARACTERS' 
               ;

  272       OccursClause*
      712      : 
      713      | OccursClause* OccursClause 
               ;

  273       NOT?
      714      : 
      715      | 'NOT' 
               ;

  274       (SYNC | SYNCHRONIZED)
      716      : 'SYNC' 
      717      | 'SYNCHRONIZED' 
               ;

  275       (LEFT | RIGHT)?
      718      : 
      719      | 'LEFT' 
      720      | 'RIGHT' 
               ;

  276       (JUST | JUSTIFIED)
      721      : 'JUST' 
      722      | 'JUSTIFIED' 
               ;

  277       RIGHT?
      723      : 
      724      | 'RIGHT' 
               ;

  278       Value+
      725      : Value 
      726      | Value+ Value 
               ;

  279       Picture*
      727      : 
      728      | Picture* Picture 
               ;

  280       (TO <integer>)?
      729      : 
      730      | 'TO' <integer> 
               ;

  281       TIMES?
      731      : 
      732      | 'TIMES' 
               ;

  282       Section+
      733      : Section 
      734      | Section+ Section 
               ;

  283       (USING <ident>+)?
      735      : 
      736      | 'USING' <ident>+ 
               ;

  284       ImperStmt+
      737      : ImperStmt 
      738      | ImperStmt+ ImperStmt 
               ;

  285       (FROM From)?
      739      : 
      740      | 'FROM' From 
               ;

  286       Target+
      741      : Target 
      742      | Target+ Target 
               ;

  287       SizeError?
      743      : 
      744      | SizeError 
               ;

  288       NotSizeError?
      745      : 
      746      | NotSizeError 
               ;

  289       (GIVING Target+ SizeError? NotSizeError?)?
      747      : 
      748      | 'GIVING' Target+ SizeError? NotSizeError? 
               ;

  290       END_ADD?
      749      : 
      750      | 'END_ADD' 
               ;

  291       Exp+
      751      : Exp 
      752      | Exp+ Exp 
               ;

  292       (<ident> TO <ident>)
      753      : <ident> 'TO' <ident> 
               ;

  293       (<ident> TO <ident>)+
      754      : (<ident> TO <ident>) 
      755      | (<ident> TO <ident>)+ (<ident> TO <ident>) 
               ;

  294       (<ident> TO PROCEED TO <ident>)
      756      : <ident> 'TO' 'PROCEED' 'TO' <ident> 
               ;

  295       (<ident> TO PROCEED TO <ident>)+
      757      : (<ident> TO PROCEED TO <ident>) 
      758      | (<ident> TO PROCEED TO <ident>)+ (<ident> TO PROCEED TO <ident>) 
               ;

  296       (TRANSACTION | SUBTRACTION)
      759      : 'TRANSACTION' 
      760      | 'SUBTRACTION' 
               ;

  297       ErrorClause?
      761      : 
      762      | ErrorClause 
               ;

  298       NotErrorClause?
      763      : 
      764      | NotErrorClause 
               ;

  299       END_BEGIN?
      765      : 
      766      | 'END_BEGIN' 
               ;

  300       UsingClause?
      767      : 
      768      | UsingClause 
               ;

  301       Exception?
      769      : 
      770      | Exception 
               ;

  302       NotException?
      771      : 
      772      | NotException 
               ;

  303       END_CALL?
      773      : 
      774      | 'END_CALL' 
               ;

  304       Argument+
      775      : Argument 
      776      | Argument+ Argument 
               ;

  305       IdLit+
      777      : IdLit 
      778      | IdLit+ IdLit 
               ;

  306       (FOR REMOVAL)?
      779      : 
      780      | 'FOR' 'REMOVAL' 
               ;

  307       (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?
      781      : 
      782      | Reel (FOR REMOVAL)? 
      783      | 'NO' 'REWIND' 
      784      | 'WITH' 'LOCK' 
               ;

  308       (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?)
      785      : File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)? 
               ;

  309       (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?)+
      786      : (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?) 
      787      | (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?)+ (File (Reel (FOR REMOVAL)? | NO REWIND | WITH LOCK)?) 
               ;

  310       END_CLOSE?
      788      : 
      789      | 'END_CLOSE' 
               ;

  311       IdLit?
      790      : 
      791      | IdLit 
               ;

  312       END_COMMIT?
      792      : 
      793      | 'END_COMMIT' 
               ;

  313       END_COMPUTE?
      794      : 
      795      | 'END_COMPUTE' 
               ;

  314       RECORD?
      796      : 
      797      | 'RECORD' 
               ;

  315       InvalidKeyPara?
      798      : 
      799      | InvalidKeyPara 
               ;

  316       NotInvalidKeyPara?
      800      : 
      801      | NotInvalidKeyPara 
               ;

  317       END_DELETE?
      802      : 
      803      | 'END_DELETE' 
               ;

  318       Primitive+
      804      : Primitive 
      805      | Primitive+ Primitive 
               ;

  319       WORKSTATION?
      806      : 
      807      | 'WORKSTATION' 
               ;

  320       (UPON WORKSTATION?)?
      808      : 
      809      | 'UPON' WORKSTATION? 
               ;

  321       (WITH NO ADVANCING)?
      810      : 
      811      | 'WITH' 'NO' 'ADVANCING' 
               ;

  322       ALTERED?
      812      : 
      813      | 'ALTERED' 
               ;

  323       DispReadClause*
      814      : 
      815      | DispReadClause* DispReadClause 
               ;

  324       END_DISPLAY?
      816      : 
      817      | 'END_DISPLAY' 
               ;

  325       IdInt+
      818      : IdInt 
      819      | IdInt+ IdInt 
               ;

  326       (INTO | BY)
      820      : 'INTO' 
      821      | 'BY' 
               ;

  327       (GIVING Target+)?
      822      : 
      823      | 'GIVING' Target+ 
               ;

  328       (REMAINDER Target+)?
      824      : 
      825      | 'REMAINDER' Target+ 
               ;

  329       END_DIVIDE?
      826      : 
      827      | 'END_DIVIDE' 
               ;

  330       (ALSO Exp)
      828      : 'ALSO' Exp 
               ;

  331       (ALSO Exp)*
      829      : 
      830      | (ALSO Exp)* (ALSO Exp) 
               ;

  332       WhenAction+
      831      : WhenAction 
      832      | WhenAction+ WhenAction 
               ;

  333       WhenOtherAction?
      833      : 
      834      | WhenOtherAction 
               ;

  334       END_EVALUATE?
      835      : 
      836      | 'END_EVALUATE' 
               ;

  335       (ALSO CondClause)
      837      : 'ALSO' CondClause 
               ;

  336       (ALSO CondClause)+
      838      : (ALSO CondClause) 
      839      | (ALSO CondClause)+ (ALSO CondClause) 
               ;

  337       END_FREE?
      840      : 
      841      | 'END_FREE' 
               ;

  338       LIST?
      842      : 
      843      | 'LIST' 
               ;

  339       ForClause+
      844      : ForClause 
      845      | ForClause+ ForClause 
               ;

  340       ForKeysClause+
      846      : ForKeysClause 
      847      | ForKeysClause+ ForKeysClause 
               ;

  341       (RecordsClause | ForClause+ | ForKeysClause+)
      848      : RecordsClause 
      849      | ForClause+ 
      850      | ForKeysClause+ 
               ;

  342       TimeOut?
      851      : 
      852      | TimeOut 
               ;

  343       END_CLAUSE?
      853      : 
      854      | 'END_CLAUSE' 
               ;

  344       Key+
      855      : Key 
      856      | Key+ Key 
               ;

  345       Variable+
      857      : Variable 
      858      | Variable+ Variable 
               ;

  346       DATA?
      859      : 
      860      | 'DATA' 
               ;

  347       (DataType DATA? BY IdLit)
      861      : DataType DATA? 'BY' IdLit 
               ;

  348       (DataType DATA? BY IdLit)+
      862      : (DataType DATA? BY IdLit) 
      863      | (DataType DATA? BY IdLit)+ (DataType DATA? BY IdLit) 
               ;

  349       (REPLACING (DataType DATA? BY IdLit)+)?
      864      : 
      865      | 'REPLACING' (DataType DATA? BY IdLit)+ 
               ;

  350       Tallying?
      866      : 
      867      | Tallying 
               ;

  351       Replacing?
      868      : 
      869      | Replacing 
               ;

  352       Before*
      870      : 
      871      | Before* Before 
               ;

  353       Characters+
      872      : Characters 
      873      | Characters+ Characters 
               ;

  354       (Variable FOR Characters+)
      874      : Variable 'FOR' Characters+ 
               ;

  355       (Variable FOR Characters+)+
      875      : (Variable FOR Characters+) 
      876      | (Variable FOR Characters+)+ (Variable FOR Characters+) 
               ;

  356       CharactersBy+
      877      : CharactersBy 
      878      | CharactersBy+ CharactersBy 
               ;

  357       (IdLit Before*)
      879      : IdLit Before* 
               ;

  358       (IdLit Before*)+
      880      : (IdLit Before*) 
      881      | (IdLit Before*)+ (IdLit Before*) 
               ;

  359       BY?
      882      : 
      883      | 'BY' 
               ;

  360       (IdLit BY IdLit Before*)
      884      : IdLit 'BY' IdLit Before* 
               ;

  361       (IdLit BY IdLit Before*)+
      885      : (IdLit BY IdLit Before*) 
      886      | (IdLit BY IdLit Before*)+ (IdLit BY IdLit Before*) 
               ;

  362       AscDesClause+
      887      : AscDesClause 
      888      | AscDesClause+ AscDesClause 
               ;

  363       SeqClause?
      889      : 
      890      | SeqClause 
               ;

  364       (THRU <ident>)?
      891      : 
      892      | 'THRU' <ident> 
               ;

  365       END_MOVE?
      893      : 
      894      | 'END_MOVE' 
               ;

  366       END_MULTIPLY?
      895      : 
      896      | 'END_MULTIPLY' 
               ;

  367       (NO REWIND)?
      897      : 
      898      | 'NO' 'REWIND' 
               ;

  368       (File (NO REWIND)?)
      899      : File (NO REWIND)? 
               ;

  369       (File (NO REWIND)?)+
      900      : (File (NO REWIND)?) 
      901      | (File (NO REWIND)?)+ (File (NO REWIND)?) 
               ;

  370       (FileType (File (NO REWIND)?)+)
      902      : FileType (File (NO REWIND)?)+ 
               ;

  371       (FileType (File (NO REWIND)?)+)+
      903      : (FileType (File (NO REWIND)?)+) 
      904      | (FileType (File (NO REWIND)?)+)+ (FileType (File (NO REWIND)?)+) 
               ;

  372       PerformClause+
      905      : PerformClause 
      906      | PerformClause+ PerformClause 
               ;

  373       ReadQual*
      907      : 
      908      | ReadQual* ReadQual 
               ;

  374       ReadPara*
      909      : 
      910      | ReadPara* ReadPara 
               ;

  375       (FROM <ident>)?
      911      : 
      912      | 'FROM' <ident> 
               ;

  376       (<pseudo_text> BY <pseudo_text>)
      913      : <pseudo_text> 'BY' <pseudo_text> 
               ;

  377       (<pseudo_text> BY <pseudo_text>)+
      914      : (<pseudo_text> BY <pseudo_text>) 
      915      | (<pseudo_text> BY <pseudo_text>)+ (<pseudo_text> BY <pseudo_text>) 
               ;

  378       (NOT END ImperStmt)?
      916      : 
      917      | 'NOT' 'END' ImperStmt 
               ;

  379       END_RETURN?
      918      : 
      919      | 'END_RETURN' 
               ;

  380       RewriteQual*
      920      : 
      921      | RewriteQual* RewriteQual 
               ;

  381       RewritePara*
      922      : 
      923      | RewritePara* RewritePara 
               ;

  382       EndRewrite?
      924      : 
      925      | EndRewrite 
               ;

  383       END_ROLLBACK?
      926      : 
      927      | 'END_ROLLBACK' 
               ;

  384       ALL?
      928      : 
      929      | 'ALL' 
               ;

  385       (VARYING <ident>)?
      930      : 
      931      | 'VARYING' <ident> 
               ;

  386       (AT END ImperStmt+)?
      932      : 
      933      | 'AT' 'END' ImperStmt+ 
               ;

  387       (AND CondExp)?
      934      : 
      935      | 'AND' CondExp 
               ;

  388       (WHEN CondExp (AND CondExp)? Statement)
      936      : 'WHEN' CondExp (AND CondExp)? Statement 
               ;

  389       (WHEN CondExp (AND CondExp)? Statement)+
      937      : (WHEN CondExp (AND CondExp)? Statement) 
      938      | (WHEN CondExp (AND CondExp)? Statement)+ (WHEN CondExp (AND CondExp)? Statement) 
               ;

  390       END_SEARCH?
      939      : 
      940      | 'END_SEARCH' 
               ;

  391       VarFC+
      941      : VarFC 
      942      | VarFC+ VarFC 
               ;

  392       (OnAscDesKey <ident>+)
      943      : OnAscDesKey <ident>+ 
               ;

  393       (OnAscDesKey <ident>+)+
      944      : (OnAscDesKey <ident>+) 
      945      | (OnAscDesKey <ident>+)+ (OnAscDesKey <ident>+) 
               ;

  394       (Duplicates | SequenceIs)
      946      : Duplicates 
      947      | SequenceIs 
               ;

  395       (Duplicates | SequenceIs)*
      948      : 
      949      | (Duplicates | SequenceIs)* (Duplicates | SequenceIs) 
               ;

  396       (IN ORDER)?
      950      : 
      951      | 'IN' 'ORDER' 
               ;

  397       KeyCondition?
      952      : 
      953      | KeyCondition 
               ;

  398       END_START?
      954      : 
      955      | 'END_START' 
               ;

  399       ConstVar+
      956      : ConstVar 
      957      | ConstVar+ ConstVar 
               ;

  400       (ConstVar+ DELIMITED BY? IdLitSize)
      958      : ConstVar+ 'DELIMITED' BY? IdLitSize 
               ;

  401       (ConstVar+ DELIMITED BY? IdLitSize)+
      959      : (ConstVar+ DELIMITED BY? IdLitSize) 
      960      | (ConstVar+ DELIMITED BY? IdLitSize)+ (ConstVar+ DELIMITED BY? IdLitSize) 
               ;

  402       (WITH POINTER <ident>)?
      961      : 
      962      | 'WITH' 'POINTER' <ident> 
               ;

  403       (OVERFLOW ImperStmt)?
      963      : 
      964      | 'OVERFLOW' ImperStmt 
               ;

  404       (NOT OVERFLOW ImperStmt)?
      965      : 
      966      | 'NOT' 'OVERFLOW' ImperStmt 
               ;

  405       END_STRING?
      967      : 
      968      | 'END_STRING' 
               ;

  406       END_SUBTRACT?
      969      : 
      970      | 'END_SUBTRACT' 
               ;

  407       (OR ALL? IdLit)
      971      : 'OR' ALL? IdLit 
               ;

  408       (OR ALL? IdLit)*
      972      : 
      973      | (OR ALL? IdLit)* (OR ALL? IdLit) 
               ;

  409       (DELIMITED BY? ALL? IdLit (OR ALL? IdLit)*)?
      974      : 
      975      | 'DELIMITED' BY? ALL? IdLit (OR ALL? IdLit)* 
               ;

  410       IN?
      976      : 
      977      | 'IN' 
               ;

  411       (DELIMITER IN? <ident>)?
      978      : 
      979      | 'DELIMITER' IN? <ident> 
               ;

  412       (COUNT IN? <ident>)?
      980      : 
      981      | 'COUNT' IN? <ident> 
               ;

  413       (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?)
      982      : <ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)? 
               ;

  414       (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?)+
      983      : (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?) 
      984      | (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?)+ (<ident> (DELIMITER IN? <ident>)? (COUNT IN? <ident>)?) 
               ;

  415       (TALLYING IN? <ident>)?
      985      : 
      986      | 'TALLYING' IN? <ident> 
               ;

  416       END_UNSTRING?
      987      : 
      988      | 'END_UNSTRING' 
               ;

  417       (EXCEPTION | ERROR)
      989      : 'EXCEPTION' 
      990      | 'ERROR' 
               ;

  418       (<ident> | FileType)
      991      : <ident> 
      992      | FileType 
               ;

  419       WriteQual*
      993      : 
      994      | WriteQual* WriteQual 
               ;

  420       WritePara*
      995      : 
      996      | WritePara* WritePara 
               ;

  421       EndWrite?
      997      : 
      998      | EndWrite 
               ;

  422       ImperStmt*
      999      : 
     1000      | ImperStmt* ImperStmt 
               ;

  423       (IN | OF)
     1001      : 'IN' 
     1002      | 'OF' 
               ;

  424       (FAC OF)?
     1003      : 
     1004      | 'FAC' 'OF' 
               ;

/* End of COBOL grammar 



/* Modula2 grammar */

/* Terminal Symbols */

    0  <error>
    1  <eof>
    2  <identifier>
    3  <string>
    4  <integer>
    5  <real>
    6  'IMPLEMENTATION'
    7  'DEFINITION'
    8  'MODULE'
    9  ';'
   10  'END'
   11  '.'
   12  'FROM'
   13  'IMPORT'
   14  'EXPORT'
   15  'QUALIFIED'
   16  '['
   17  ']'
   18  'CONST'
   19  'TYPE'
   20  '='
   21  'VAR'
   22  'BEGIN'
   23  ':'
   24  '('
   25  ')'
   26  '..'
   27  'ARRAY'
   28  ','
   29  'OF'
   30  'RECORD'
   31  'CASE'
   32  '|'
   33  'ELSE'
   34  'SET'
   35  'POINTER'
   36  'TO'
   37  'PROCEDURE'
   38  'EXIT'
   39  'RETURN'
   40  ':='
   41  'IF'
   42  'THEN'
   43  'ELSIF'
   44  'WHILE'
   45  'DO'
   46  'REPEAT'
   47  'UNTIL'
   48  'LOOP'
   49  'FOR'
   50  'BY'
   51  'WITH'
   52  '#'
   53  '<>'
   54  '<'
   55  '<='
   56  '>'
   57  '>='
   58  'IN'
   59  '+'
   60  '-'
   61  'OR'
   62  '*'
   63  '/'
   64  'DIV'
   65  'MOD'
   66  'AND'
   67  'NOT'
   68  '{'
   69  '}'
   70  '^'

/* Productions */

    0       Goal
        0      : CompilationUnit <eof> 
               ;

    1       CompilationUnit
        1      : IMPLEMENTATION? ProgramModule 
        2      | DefinitionModule 
               ;

    2       DefinitionModule
        3      : 'DEFINITION' 'MODULE' Identifier ';' Import* DefExport? Definition* 'END' Identifier '.' 
               ;

    3       ProgramModule
        4      : 'MODULE' Identifier Priority? ';' Import* Block Identifier '.' 
               ;

    4       Import
        5      : (FROM Identifier)? 'IMPORT' IdentifierList ';' 
               ;

    5       DefExport
        6      : 'EXPORT' 'QUALIFIED' IdentifierList ';' 
               ;

    6       Priority
        7      : '[' ConstExpression ']' 
               ;

    7       Definition
        8      : 'CONST' (ConstantDeclaration ';')* 
        9      | 'TYPE' (Identifier ('=' Type ';')?)* 
       10      | 'VAR' (VariableDeclaration ';')* 
       11      | ProcedureHeading ';' 
               ;

    8       Block
       12      : Declaration* (BEGIN StatementSequence)? 'END' 
               ;

    9       Declaration
       13      : 'CONST' (ConstantDeclaration ';')* 
       14      | 'TYPE' (TypeDeclaration ';')* 
       15      | 'VAR' (VariableDeclaration ';')* 
       16      | ProcedureDeclaration ';' 
       17      | ModuleDeclaration ';' 
               ;

   10       ConstantDeclaration
       18      : Identifier '=' ConstExpression 
               ;

   11       TypeDeclaration
       19      : Identifier '=' Type 
               ;

   12       VariableDeclaration
       20      : IdentifierList ':' Type 
               ;

   13       ProcedureDeclaration
       21      : ProcedureHeading ';' Block Identifier 
               ;

   14       ModuleDeclaration
       22      : 'MODULE' Identifier Priority? ';' Import* LocalExport* Block Identifier 
               ;

   15       LocalExport
       23      : 'EXPORT' QUALIFIED? IdentifierList ';' 
               ;

   16       Type
       24      : SimpleType 
       25      | ArrayType 
       26      | RecordType 
       27      | SetType 
       28      | PointerType 
       29      | ProcedureType 
               ;

   17       SimpleType
       30      : QualIdentifier 
       31      | Enumeration 
       32      | SubrangeType 
               ;

   18       Enumeration
       33      : '(' IdentifierList ')' 
               ;

   19       SubrangeType
       34      : QualIdentifier? '[' ConstExpression '..' ConstExpression ']' 
               ;

   20       ArrayType
       35      : 'ARRAY' SimpleType/','+ 'OF' Type 
               ;

   21       RecordType
       36      : 'RECORD' FieldListSequence 'END' 
               ;

   22       FieldListSequence
       37      : FieldList/';'+ 
               ;

   23       FieldList
       38      : 
       39      | IdentifierList ':' Type 
       40      | 'CASE' Identifier? ':'? QualIdentifier 'OF' Variant/'|'+ (ELSE FieldListSequence)? 'END' 
               ;

   24       Variant
       41      : 
       42      | CaseLabels/','+ ':' FieldListSequence 
               ;

   25       CaseLabels
       43      : ConstExpression ('..' ConstExpression)? 
               ;

   26       SetType
       44      : 'SET' 'OF' SimpleType 
               ;

   27       PointerType
       45      : 'POINTER' 'TO' Type 
               ;

   28       ProcedureType
       46      : 'PROCEDURE' FormalTypeList? 
               ;

   29       FormalTypeList
       47      : '(' (VAR? FormalType)/','* ')' (':' QualIdentifier)? 
               ;

   30       ProcedureHeading
       48      : 'PROCEDURE' Identifier FormalParameters? 
               ;

   31       FormalParameters
       49      : '(' FPSection/';'* ')' (':' QualIdentifier)? 
               ;

   32       FPSection
       50      : VAR? IdentifierList ':' FormalType 
               ;

   33       FormalType
       51      : (ARRAY OF)? QualIdentifier 
               ;

   34       StatementSequence
       52      : Statement/';'+ 
               ;

   35       Statement
       53      : 
       54      | Assignment 
       55      | ProcedureCall 
       56      | IfStatement 
       57      | CaseStatement 
       58      | WhileStatement 
       59      | RepeatStatement 
       60      | LoopStatement 
       61      | ForStatement 
       62      | WithStatement 
       63      | 'EXIT' 
       64      | 'RETURN' Expression? 
               ;

   36       Assignment
       65      : Designator ':=' Expression 
               ;

   37       ProcedureCall
       66      : Designator ActualParameters? 
               ;

   38       ActualParameters
       67      : '(' Expression/','* ')' 
               ;

   39       IfStatement
       68      : 'IF' Expression 'THEN' StatementSequence (ELSIF Expression THEN StatementSequence)* (ELSE StatementSequence)? 'END' 
               ;

   40       CaseStatement
       69      : 'CASE' Expression 'OF' Case/'|'+ 'ELSE' StatementSequence 'END' 
               ;

   41       Case
       70      : 
       71      | CaseLabels/','+ ':' StatementSequence 
               ;

   42       WhileStatement
       72      : 'WHILE' Expression 'DO' StatementSequence 'END' 
               ;

   43       RepeatStatement
       73      : 'REPEAT' StatementSequence 'UNTIL' Expression 
               ;

   44       LoopStatement
       74      : 'LOOP' StatementSequence 'END' 
               ;

   45       ForStatement
       75      : 'FOR' Identifier ':=' Expression 'TO' Expression (BY ConstExpression)? 'DO' StatementSequence 'END' 
               ;

   46       WithStatement
       76      : 'WITH' Designator 'DO' StatementSequence 'END' 
               ;

   47       ConstExpression
       77      : Expression 
               ;

   48       Expression
       78      : SimpleExpression (Relation SimpleExpression)? 
               ;

   49       Relation
       79      : '=' 
       80      | '#' 
       81      | '<>' 
       82      | '<' 
       83      | '<=' 
       84      | '>' 
       85      | '>=' 
       86      | 'IN' 
               ;

   50       SimpleExpression
       87      : ('+' | '-')? Term (AddOperator Term)* 
               ;

   51       AddOperator
       88      : '+' 
       89      | '-' 
       90      | 'OR' 
               ;

   52       Term
       91      : Factor (MulOperator Factor)* 
               ;

   53       MulOperator
       92      : '*' 
       93      | '/' 
       94      | 'DIV' 
       95      | 'MOD' 
       96      | 'AND' 
               ;

   54       Factor
       97      : Number 
       98      | String 
       99      | Set 
      100      | Designator ActualParameters? 
      101      | '(' Expression ')' 
      102      | 'NOT' Factor 
               ;

   55       Set
      103      : QualIdentifier? '{' Element/','* '}' 
               ;

   56       Element
      104      : ConstExpression ('..' ConstExpression)? 
               ;

   57       String
      105      : <string> 
               ;

   58       Designator
      106      : QualIdentifier ('^' | '[' Expression/','+ ']' | '.' Identifier)* 
               ;

   59       QualIdentifier
      107      : Identifier/'.'+ 
               ;

   60       Identifier
      108      : <identifier> 
               ;

   61       IdentifierList
      109      : Identifier/','+ 
               ;

   62       Number
      110      : Integer 
      111      | Real 
               ;

   63       Integer
      112      : <integer> 
               ;

   64       Real
      113      : <real> 
               ;

   65       IMPLEMENTATION?
      114      : 
      115      | 'IMPLEMENTATION' 
               ;

   66       Import*
      116      : 
      117      | Import* Import 
               ;

   67       DefExport?
      118      : 
      119      | DefExport 
               ;

   68       Definition*
      120      : 
      121      | Definition* Definition 
               ;

   69       Priority?
      122      : 
      123      | Priority 
               ;

   70       (FROM Identifier)?
      124      : 
      125      | 'FROM' Identifier 
               ;

   71       (ConstantDeclaration ';')
      126      : ConstantDeclaration ';' 
               ;

   72       (ConstantDeclaration ';')*
      127      : 
      128      | (ConstantDeclaration ';')* (ConstantDeclaration ';') 
               ;

   73       ('=' Type ';')?
      129      : 
      130      | '=' Type ';' 
               ;

   74       (Identifier ('=' Type ';')?)
      131      : Identifier ('=' Type ';')? 
               ;

   75       (Identifier ('=' Type ';')?)*
      132      : 
      133      | (Identifier ('=' Type ';')?)* (Identifier ('=' Type ';')?) 
               ;

   76       (VariableDeclaration ';')
      134      : VariableDeclaration ';' 
               ;

   77       (VariableDeclaration ';')*
      135      : 
      136      | (VariableDeclaration ';')* (VariableDeclaration ';') 
               ;

   78       Declaration*
      137      : 
      138      | Declaration* Declaration 
               ;

   79       (BEGIN StatementSequence)?
      139      : 
      140      | 'BEGIN' StatementSequence 
               ;

   80       (TypeDeclaration ';')
      141      : TypeDeclaration ';' 
               ;

   81       (TypeDeclaration ';')*
      142      : 
      143      | (TypeDeclaration ';')* (TypeDeclaration ';') 
               ;

   82       LocalExport*
      144      : 
      145      | LocalExport* LocalExport 
               ;

   83       QUALIFIED?
      146      : 
      147      | 'QUALIFIED' 
               ;

   84       QualIdentifier?
      148      : 
      149      | QualIdentifier 
               ;

   85       SimpleType/','+
      150      : SimpleType 
      151      | SimpleType/','+ ',' SimpleType 
               ;

   86       FieldList/';'+
      152      : FieldList 
      153      | FieldList/';'+ ';' FieldList 
               ;

   87       Identifier?
      154      : 
      155      | Identifier 
               ;

   88       ':'?
      156      : 
      157      | ':' 
               ;

   89       Variant/'|'+
      158      : Variant 
      159      | Variant/'|'+ '|' Variant 
               ;

   90       (ELSE FieldListSequence)?
      160      : 
      161      | 'ELSE' FieldListSequence 
               ;

   91       CaseLabels/','+
      162      : CaseLabels 
      163      | CaseLabels/','+ ',' CaseLabels 
               ;

   92       ('..' ConstExpression)?
      164      : 
      165      | '..' ConstExpression 
               ;

   93       FormalTypeList?
      166      : 
      167      | FormalTypeList 
               ;

   94       VAR?
      168      : 
      169      | 'VAR' 
               ;

   95       (VAR? FormalType)
      170      : VAR? FormalType 
               ;

   96       (VAR? FormalType)/','*
      171      : 
      172      | (VAR? FormalType) 
      173      | (VAR? FormalType)/','* ',' (VAR? FormalType) 
               ;

   97       (':' QualIdentifier)?
      174      : 
      175      | ':' QualIdentifier 
               ;

   98       FormalParameters?
      176      : 
      177      | FormalParameters 
               ;

   99       FPSection/';'*
      178      : 
      179      | FPSection 
      180      | FPSection/';'* ';' FPSection 
               ;

  100       (ARRAY OF)?
      181      : 
      182      | 'ARRAY' 'OF' 
               ;

  101       Statement/';'+
      183      : Statement 
      184      | Statement/';'+ ';' Statement 
               ;

  102       Expression?
      185      : 
      186      | Expression 
               ;

  103       ActualParameters?
      187      : 
      188      | ActualParameters 
               ;

  104       Expression/','*
      189      : 
      190      | Expression 
      191      | Expression/','* ',' Expression 
               ;

  105       (ELSIF Expression THEN StatementSequence)
      192      : 'ELSIF' Expression 'THEN' StatementSequence 
               ;

  106       (ELSIF Expression THEN StatementSequence)*
      193      : 
      194      | (ELSIF Expression THEN StatementSequence)* (ELSIF Expression THEN StatementSequence) 
               ;

  107       (ELSE StatementSequence)?
      195      : 
      196      | 'ELSE' StatementSequence 
               ;

  108       Case/'|'+
      197      : Case 
      198      | Case/'|'+ '|' Case 
               ;

  109       (BY ConstExpression)?
      199      : 
      200      | 'BY' ConstExpression 
               ;

  110       (Relation SimpleExpression)?
      201      : 
      202      | Relation SimpleExpression 
               ;

  111       ('+' | '-')?
      203      : 
      204      | '+' 
      205      | '-' 
               ;

  112       (AddOperator Term)
      206      : AddOperator Term 
               ;

  113       (AddOperator Term)*
      207      : 
      208      | (AddOperator Term)* (AddOperator Term) 
               ;

  114       (MulOperator Factor)
      209      : MulOperator Factor 
               ;

  115       (MulOperator Factor)*
      210      : 
      211      | (MulOperator Factor)* (MulOperator Factor) 
               ;

  116       Element/','*
      212      : 
      213      | Element 
      214      | Element/','* ',' Element 
               ;

  117       Expression/','+
      215      : Expression 
      216      | Expression/','+ ',' Expression 
               ;

  118       ('^' | '[' Expression/','+ ']' | '.' Identifier)
      217      : '^' 
      218      | '[' Expression/','+ ']' 
      219      | '.' Identifier 
               ;

  119       ('^' | '[' Expression/','+ ']' | '.' Identifier)*
      220      : 
      221      | ('^' | '[' Expression/','+ ']' | '.' Identifier)* ('^' | '[' Expression/','+ ']' | '.' Identifier) 
               ;

  120       Identifier/'.'+
      222      : Identifier 
      223      | Identifier/'.'+ '.' Identifier 
               ;

  121       Identifier/','+
      224      : Identifier 
      225      | Identifier/','+ ',' Identifier 
               ;

/* End of Modula2 grammar 


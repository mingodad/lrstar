
/* PLSQL grammar */

/* Terminal Symbols */

    0  <error>
    1  <eof>
    2  'SEMICOLON'
    3  'DROP'
    4  'FUNCTION'
    5  ';'
    6  'ALTER'
    7  'COMPILE'
    8  'DEBUG'
    9  'REUSE'
   10  'SETTINGS'
   11  'CREATE'
   12  'OR'
   13  'REPLACE'
   14  '('
   15  ','
   16  ')'
   17  'RETURN'
   18  'DETERMINISTIC'
   19  'PIPELINED'
   20  'IS'
   21  'AS'
   22  'DECLARE'
   23  'AGGREGATE'
   24  'USING'
   25  'PARALLEL_ENABLE'
   26  'PARTITION'
   27  'BY'
   28  'ANY'
   29  'HASH'
   30  'RANGE'
   31  'LIST'
   32  'RESULT_CACHE'
   33  'RELIES_ON'
   34  'ORDER'
   35  'CLUSTER'
   36  'PACKAGE'
   37  'BODY'
   38  '.'
   39  'SPECIFICATION'
   40  'END'
   41  'BEGIN'
   42  'PROCEDURE'
   43  'EXTERNAL'
   44  'TRIGGER'
   45  'alter_trigger_nametrigger_name'
   46  'ENABLE'
   47  'DISABLE'
   48  'RENAME'
   49  'TO'
   50  'rename_trigger_nametrigger_name'
   51  'FOLLOWS'
   52  'WHEN'
   53  'BEFORE'
   54  'AFTER'
   55  'INSTEAD'
   56  'OF'
   57  'FOR'
   58  'EACH'
   59  'ROW'
   60  'ON'
   61  'DATABASE'
   62  'SCHEMA'
   63  'COMPOUND'
   64  'CALL'
   65  'bkBEFORE'
   66  'STATEMENT'
   67  'akAFTER'
   68  'ANALYZE'
   69  'ASSOCIATE'
   70  'STATISTICS'
   71  'AUDIT'
   72  'COMMENT'
   73  'DISASSOCIATE'
   74  'GRANT'
   75  'NOAUDIT'
   76  'REVOKE'
   77  'TRUNCATE'
   78  'DDL'
   79  'STARTUP'
   80  'SHUTDOWN'
   81  'DB_ROLE_CHANGE'
   82  'LOGON'
   83  'LOGOFF'
   84  'SERVERERROR'
   85  'SUSPEND'
   86  'DELETE'
   87  'INSERT'
   88  'UPDATE'
   89  'NESTED'
   90  'TABLE'
   91  'REFERENCING'
   92  'NEW'
   93  'OLD'
   94  'PARENT'
   95  'TYPE'
   96  'FORCE'
   97  'VALIDATE'
   98  'OBJECT'
   99  'ADD'
  100  'MODIFY'
  101  'ATTRIBUTE'
  102  'LIMIT'
  103  'ELEMENT'
  104  'INVALIDATE'
  105  'CASCADE'
  106  'CONVERT'
  107  'SUBSTITUTABLE'
  108  'NOT'
  109  'INCLUDING'
  110  'DATA'
  111  'EXCEPTIONS'
  112  'INTO'
  113  'OID'
  114  'CHAR_STRING'
  115  'UNDER'
  116  'NULL_'
  117  'NAME'
  118  'LANGUAGE'
  119  'JAVA'
  120  'SQLDATA'
  121  'CUSTOMDATUM'
  122  'ORADATA'
  123  'MAP'
  124  'MEMBER'
  125  'STATIC'
  126  'FINAL'
  127  'INSTANTIABLE'
  128  'CONSTRUCTOR'
  129  'SELF'
  130  'IN'
  131  'OUT'
  132  'RESULT'
  133  'OVERRIDING'
  134  'VARIABLE'
  135  'PRAGMA'
  136  'RESTRICT_REFERENCES'
  137  'DEFAULT'
  138  'SEQUENCE'
  139  'SESSION'
  140  'ADVISE'
  141  'COMMIT'
  142  'ROLLBACK'
  143  'NOTHING'
  144  'CLOSE'
  145  'LINK'
  146  'GUARD'
  147  'PARALLEL'
  148  'DML'
  149  'QUERY'
  150  'SET'
  151  '='
  152  'INCREMENT'
  153  'UNSIGNED_INTEGER'
  154  'MAXVALUE'
  155  'NOMAXVALUE'
  156  'MINVALUE'
  157  'NOMINVALUE'
  158  'CYCLE'
  159  'NOCYCLE'
  160  'CACHE'
  161  'NOCACHE'
  162  'NOORDER'
  163  'START'
  164  'WITH'
  165  'UNIQUE'
  166  'BITMAP'
  167  'INDEX'
  168  'UNUSABLE'
  169  'ASC'
  170  'DESC'
  171  'FROM'
  172  'INDEXTYPE'
  173  'PARAMETERS'
  174  'LOCAL'
  175  'XDB'
  176  'XMLINDEX'
  177  'GLOBAL'
  178  'VALUES'
  179  'LESS'
  180  'THAN'
  181  'STORE'
  182  'TABLESPACE'
  183  'SUBPARTITION'
  184  'COALESCE'
  185  'USAGE'
  186  'BLOCK'
  187  'REFERENCES'
  188  'VISIBLE'
  189  'INVISIBLE'
  190  'MONITORING'
  191  'NOMONITORING'
  192  'REBUILD'
  193  'REVERSE'
  194  'NOREVERSE'
  195  'ONLINE'
  196  'ATTRIBUTES'
  197  'SPLIT'
  198  'AT'
  199  'USER'
  200  'IDENTIFIED'
  201  'EXTERNALLY'
  202  'GLOBALLY'
  203  'TEMPORARY'
  204  'QUOTA'
  205  'UNLIMITED'
  206  'PROFILE'
  207  'ALL'
  208  'EXCEPT'
  209  'ROLE'
  210  'NONE'
  211  'PASSWORD'
  212  'EXPIRE'
  213  'ACCOUNT'
  214  'LOCK'
  215  'UNLOCK'
  216  'EDITIONS'
  217  'CONNECT'
  218  'THROUGH'
  219  'ENTERPRISE'
  220  'USERS'
  221  'NO'
  222  'ROLES'
  223  'AUTHENTICATION'
  224  'REQUIRED'
  225  'AUTHENTICATED'
  226  'CERTIFICATE'
  227  'DISTINGUISHED'
  228  'LEFT_PAREN'
  229  'RIGHT_PAREN'
  230  'CONTAINER_DATA'
  231  'EQUALS_OP'
  232  'REMOVE'
  233  'CHAINED'
  234  'ROWS'
  235  'SYSTEM'
  236  'REF'
  237  'DANGLING'
  238  'STRUCTURE'
  239  'FAST'
  240  'OFFLINE'
  241  'COLUMNS'
  242  'FUNCTIONS'
  243  'PACKAGES'
  244  'TYPES'
  245  'INDEXES'
  246  'INDEXTYPES'
  247  'COST'
  248  'SELECTIVITY'
  249  'MANAGED'
  250  'STORAGE'
  251  'TABLES'
  252  {self_isVersion12}
  253  'POLICY'
  254  'WHENEVER'
  255  'SUCCESSFUL'
  256  'CONTEXT'
  257  'NAMESPACE'
  258  'CURRENT'
  259  'NETWORK'
  260  'ACCESS'
  261  'DIRECT_PATH'
  262  'CONTAINER'
  263  'STATEMENTS'
  264  'PRIVILEGES'
  265  'EXECUTE'
  266  'FLASHBACK'
  267  'READ'
  268  'SELECT'
  269  'DIRECTORY'
  270  'MINING'
  271  'MODEL'
  272  'SQL'
  273  'TRANSLATION'
  274  'DIMENSION'
  275  'MATERIALIZED'
  276  'VIEW'
  277  'EXISTS'
  278  'OUTLINE'
  279  'PLUGGABLE'
  280  'PUBLIC'
  281  'SYNONYM'
  282  'SEGMENT'
  283  'ADMIN'
  284  'DELEGATE'
  285  'OPTION'
  286  'HIERARCHY'
  287  'LIBRARY'
  288  'EDITIONABLE'
  289  'NONEDITIONABLE'
  290  'CONSTRAINT'
  291  'RELY'
  292  'NORELY'
  293  'PRIMARY'
  294  'KEY'
  295  'ONLY'
  296  'WRITE'
  297  'EDITIONING'
  298  'IDENTIFIER'
  299  'ID'
  300  'REGULAR_ID'
  301  'SCOPE'
  302  'ROWID'
  303  'ref_col_or_attrregular_id'
  304  'FOREIGN'
  305  'CHECK'
  306  'DEFERRABLE'
  307  'INITIALLY'
  308  'IMMEDIATE'
  309  'DEFERRED'
  310  'NOVALIDATE'
  311  'MINIMUM'
  312  'EXTENT'
  313  'RESIZE'
  314  'SHRINK'
  315  'SPACE_KEYWORD'
  316  'KEEP'
  317  'BACKUP'
  318  'DATAFILE'
  319  'TEMPFILE'
  320  'LOGGING'
  321  'GROUP'
  322  'NORMAL'
  323  'PERMANENT'
  324  'OFF'
  325  'BIGFILE'
  326  'SMALLFILE'
  327  'BLOCKSIZE'
  328  'ENCRYPTION'
  329  'encrypt_algorithmCHAR_STRING'
  330  'NOLOGGING'
  331  'FILESYSTEM_LIKE_LOGGING'
  332  'MANAGEMENT'
  333  'AUTOALLOCATE'
  334  'UNIFORM'
  335  'SIZE'
  336  'AUTO'
  337  'MANUAL'
  338  'tablespace_nameid_expression'
  339  'UNDO'
  340  'RETENTION'
  341  'GUARANTEE'
  342  'NOGUARANTEE'
  343  'AUTOEXTEND'
  344  'NEXT'
  345  'MAXSIZE'
  346  'BUILD'
  347  'NOPARALLEL'
  348  'parallel_countUNSIGNED_INTEGER'
  349  'REWRITE'
  350  'CONSIDER'
  351  'FRESH'
  352  'REFRESH'
  353  'COMPLETE'
  354  'DEMAND'
  355  'MASTER'
  356  'ENFORCED'
  357  'TRUSTED'
  358  'CONSTRAINTS'
  359  'ENCRYPT'
  360  'DECRYPT'
  361  'LOG'
  362  'MOVE'
  363  'SYNCHRONOUS'
  364  'ASYNCHRONOUS'
  365  'EXCLUDING'
  366  'SCN'
  367  'PURGE'
  368  'PREBUILT'
  369  'WITHOUT'
  370  'REDUCED'
  371  'PRECISION'
  372  'mv_tablespaceid_expression'
  373  'NEVER'
  374  'rb_segmentREGULAR_ID'
  375  'INITIALIZED'
  376  'ACCESSED'
  377  'SORT'
  378  'SINGLE'
  379  'HASHKEYS'
  380  'ROWDEPENDENCIES'
  381  'NOROWDEPENDENCIES'
  382  'XMLTYPE'
  383  'PRESERVE'
  384  'MODE'
  385  'VIRTUAL'
  386  'COLUMN'
  387  'RELATIONAL'
  388  'SECUREFILE'
  389  'BASICFILE'
  390  'CLOB'
  391  'BINARY'
  392  'XML'
  393  'VARRAYS'
  394  'LOBS'
  395  'XMLSCHEMA'
  396  'DELIMITED_ID'
  397  'NONSCHEMA'
  398  'ANYSCHEMA'
  399  'OIDINDEX'
  400  'GENERATED'
  401  'LEVELS'
  402  'INTERVAL'
  403  'PARTITIONS'
  404  'OVERFLOW'
  405  'REFERENCE'
  406  'TEMPLATE'
  407  'SUBPARTITIONS'
  408  'VARRAY'
  409  'LOB'
  410  'SALT'
  411  'COMPRESS'
  412  'BASIC'
  413  'OLTP'
  414  'ARCHIVE'
  415  'LOW'
  416  'HIGH'
  417  'NOCOMPRESS'
  418  'PCTFREE'
  419  'pctfreeUNSIGNED_INTEGER'
  420  'PCTUSED'
  421  'pctusedUNSIGNED_INTEGER'
  422  'INITRANS'
  423  'inittransUNSIGNED_INTEGER'
  424  'INITIAL'
  425  'initial_sizesize_clause'
  426  'next_sizesize_clause'
  427  'MINEXTENTS'
  428  'minextents'
  429  'MAXEXTENTS'
  430  'PCTINCREASE'
  431  'pctincreaseUNSIGNED_INTEGER'
  432  'FREELISTS'
  433  'freelistsUNSIGNED_INTEGER'
  434  'FREELIST'
  435  'GROUPS'
  436  'freelist_groupsUNSIGNED_INTEGER'
  437  'OPTIMAL'
  438  'BUFFER_POOL'
  439  'RECYCLE'
  440  'FLASH_CACHE'
  441  'CREATION'
  442  'MOVEMENT'
  443  'flashback_archiveREGULAR_ID'
  444  'SUPPLEMENTAL'
  445  'ALWAYS'
  446  'ALLOCATE'
  447  'datafileCHAR_STRING'
  448  'INSTANCE'
  449  'inst_numUNSIGNED_INTEGER'
  450  'DEALLOCATE'
  451  'UNUSED'
  452  'COMPACT'
  453  'MINIMIZE'
  454  'NOMINIMIZE'
  455  'RECORDS_PER_BLOCK'
  456  'UPGRADE'
  457  'ALLOW'
  458  'DISALLOW'
  459  'PERIOD'
  460  'AT_SIGN'
  461  'MOUNT'
  462  'STANDBY'
  463  'CLONE'
  464  'OPEN'
  465  'RESETLOGS'
  466  'NORESETLOGS'
  467  'DOWNGRADE'
  468  'RECOVER'
  469  'AUTOMATIC'
  470  'LOGFILE'
  471  'TEST'
  472  'CORRUPTION'
  473  'CONTINUE'
  474  'CANCEL'
  475  'UNTIL'
  476  'TIME'
  477  'CHANGE'
  478  'CONSISTENT'
  479  'CONTROLFILE'
  480  {self_isVersion10}
  481  'DISCONNECT'
  482  'NODELAY'
  483  'FINISH'
  484  'LOGICAL'
  485  'IDENTITY'
  486  'FILE'
  487  'DATAFILES'
  488  'ARCHIVELOG'
  489  'NOARCHIVELOG'
  490  'CLEAR'
  491  'UNARCHIVED'
  492  'UNRECOVERABLE'
  493  'THREAD'
  494  'SWITCH'
  495  'LOGFILES'
  496  'PROCEDURAL'
  497  'REPLICATION'
  498  'PHYSICAL'
  499  'TRACE'
  500  'ACTIVATE'
  501  'APPLY'
  502  'MAXIMIZE'
  503  'PROTECTION'
  504  'AVAILABILITY'
  505  'PERFORMANCE'
  506  'REGISTER'
  507  'PREPARE'
  508  'SWITCHOVER'
  509  'WAIT'
  510  'NOWAIT'
  511  'scn_valueUNSIGNED_INTEGER'
  512  'SKIP_'
  513  'FAILED'
  514  'TRANSACTION'
  515  'STOP'
  516  'ABORT'
  517  'SNAPSHOT'
  518  'EDITION'
  519  'GLOBAL_NAME'
  520  'TRACKING'
  521  'TIMEZONE'
  522  'TRIGGERS'
  523  'REKEY'
  524  'MAPPING'
  525  'NOSORT'
  526  'PCTTHRESHOLD'
  527  'NOMAPPING'
  528  'LOCATOR'
  529  'VALUE'
  530  'CHECKPOINT'
  531  'PCTVERSION'
  532  'FREEPOOLS'
  533  'READS'
  534  'CHUNK'
  535  'DEDUPLICATE'
  536  'KEEP_DUPLICATES'
  537  'MEDIUM'
  538  'MAX'
  539  'MIN'
  540  'COLUMN_VALUE'
  541  'columnregular_id'
  542  'EXCEPTION'
  543  'AUTHID'
  544  'CURRENT_USER'
  545  'DEFINER'
  546  'C_LETTER'
  547  'AGENT'
  548  'INOUT'
  549  'NOCOPY'
  550  'ASSIGN_OP'
  551  'CONSTANT'
  552  'SUBTYPE'
  553  '..'
  554  'CURSOR'
  555  'SERIALLY_REUSABLE'
  556  'AUTONOMOUS_TRANSACTION'
  557  'EXCEPTION_INIT'
  558  'INLINE'
  559  'id1identifier'
  560  'RECORD'
  561  'idx1INDEXED'
  562  'idx2INDEX'
  563  'VARYING'
  564  'ARRAY'
  565  'ltp1'
  566  '<'
  567  '>'
  568  'EXIT'
  569  'GOTO'
  570  'IF'
  571  'THEN'
  572  'ELSIF'
  573  'ELSE'
  574  'WHILE'
  575  'LOOP'
  576  'range_separator'
  577  'FORALL'
  578  'SAVE'
  579  'INDICES'
  580  'BETWEEN'
  581  'AND'
  582  'RAISE'
  583  'PIPE'
  584  'RETURNING'
  585  'FETCH'
  586  'it1INTO'
  587  'BULK'
  588  'COLLECT'
  589  'ISOLATION'
  590  'LEVEL'
  591  'SERIALIZABLE'
  592  'COMMITTED'
  593  'USE'
  594  'WORK'
  595  'CORRUPT_XID'
  596  'CORRUPT_XID_ALL'
  597  'BATCH'
  598  'SAVEPOINT'
  599  'EXPLAIN'
  600  'PLAN'
  601  'STATEMENT_ID'
  602  'SEARCH'
  603  'DEPTH'
  604  'BREADTH'
  605  'FIRST'
  606  'NULLS'
  607  'LAST'
  608  'UNION'
  609  'INTERSECT'
  610  'MINUS'
  611  'DISTINCT'
  612  '*'
  613  'ASTERISK'
  614  'CROSS'
  615  'NATURAL'
  616  'INNER'
  617  'JOIN'
  618  'FULL'
  619  'LEFT'
  620  'RIGHT'
  621  'OUTER'
  622  'VERSIONS'
  623  'TIMESTAMP'
  624  'PIVOT'
  625  'UNPIVOT'
  626  'INCLUDE'
  627  'EXCLUDE'
  628  'ROLLUP'
  629  'CUBE'
  630  'GROUPING'
  631  'SETS'
  632  'HAVING'
  633  'IGNORE'
  634  'NAV'
  635  'UPDATED'
  636  'MAIN'
  637  'MEASURES'
  638  'RULES'
  639  'UPSERT'
  640  'SEQUENTIAL'
  641  'ITERATE'
  642  'SIBLINGS'
  643  'OFFSET'
  644  'PERCENT_KEYWORD'
  645  'TIES'
  646  'LOCKED'
  647  'MERGE'
  648  'MATCHED'
  649  'SHARE'
  650  'EXCLUSIVE'
  651  'ERRORS'
  652  'REJECT'
  653  'THE'
  654  'SAMPLE'
  655  'SEED'
  656  'NAN'
  657  'PRESENT'
  658  'INFINITE'
  659  'A_LETTER'
  660  'EMPTY'
  661  'multiset_type'
  662  'SUBMULTISET'
  663  'like_type'
  664  'LIKE'
  665  'LIKEC'
  666  'LIKE2'
  667  'LIKE4'
  668  'ESCAPE'
  669  'NOT_EQUAL_OP'
  670  '!'
  671  '^'
  672  'ZONE'
  673  'ERROR'
  674  'op'
  675  'SOLIDUS'
  676  'PLUS_SIGN'
  677  'MINUS_SIGN'
  678  'BAR'
  679  'DAY'
  680  'SECOND'
  681  'YEAR'
  682  'MONTH'
  683  '['
  684  ']'
  685  'fromExprexpression'
  686  'toExprexpression'
  687  'action_type'
  688  'DECREMENT'
  689  'action_exprexpression'
  690  '-'
  691  '+'
  692  'PRIOR'
  693  'CONNECT_BY_ROOT'
  694  'ck1CASE'
  695  'CASE'
  696  'SOME'
  697  'SUBSTR'
  698  'TO_CHAR'
  699  'DECODE'
  700  'CHR'
  701  'NCHAR_CS'
  702  'NVL'
  703  'TRIM'
  704  'LEADING'
  705  'TRAILING'
  706  'BOTH'
  707  'TO_DATE'
  708  'SUM'
  709  'COUNT'
  710  'ROUND'
  711  'AVG'
  712  'LEAST'
  713  'GREATEST'
  714  'CAST'
  715  'XMLCAST'
  716  'MULTISET'
  717  'LISTAGG'
  718  'WITHIN'
  719  'PERCENT_ISOPEN'
  720  'PERCENT_FOUND'
  721  'PERCENT_NOTFOUND'
  722  'PERCENT_ROWCOUNT'
  723  'DECOMPOSE'
  724  'CANONICAL'
  725  'COMPATIBILITY'
  726  'EXTRACT'
  727  'FIRST_VALUE'
  728  'LAST_VALUE'
  729  'TRANSLATE'
  730  'CHAR_CS'
  731  'TREAT'
  732  'XMLAGG'
  733  'XMLCOLATTVAL'
  734  'XMLFOREST'
  735  'XMLELEMENT'
  736  'ENTITYESCAPING'
  737  'NOENTITYESCAPING'
  738  'EVALNAME'
  739  'XMLEXISTS'
  740  'XMLPARSE'
  741  'DOCUMENT'
  742  'CONTENT'
  743  'WELLFORMED'
  744  'XMLPI'
  745  'XMLQUERY'
  746  'XMLROOT'
  747  'XMLSERIALIZE'
  748  'HIDE'
  749  'SHOW'
  750  'DEFAULTS'
  751  'CORR'
  752  'LAG'
  753  'LEAD'
  754  'MEDIAN'
  755  'NTILE'
  756  'RATIO_TO_REPORT'
  757  'ROW_NUMBER'
  758  'VARIANCE'
  759  'REGR_'
  760  'STDDEV'
  761  'VAR_'
  762  'COVAR_'
  763  'CUME_DIST'
  764  'DENSE_RANK'
  765  'PERCENT_RANK'
  766  'PERCENTILE_CONT'
  767  'PERCENTILE_DISC'
  768  'RANK'
  769  'PREDICTION'
  770  'PREDICTION_BOUNDS'
  771  'PREDICTION_COST'
  772  'PREDICTION_DETAILS'
  773  'PREDICTION_PROBABILITY'
  774  'PREDICTION_SET'
  775  'OVER'
  776  'UNBOUNDED'
  777  'PRECEDING'
  778  'FOLLOWING'
  779  'PASSING'
  780  'XMLATTRIBUTES'
  781  'SCHEMACHECK'
  782  'NOSCHEMACHECK'
  783  'XMLNAMESPACES'
  784  'ORDINALITY'
  785  'PATH'
  786  'VERSION'
  787  'STANDALONE'
  788  'YES'
  789  'ENCODING'
  790  'INDENT'
  791  '/'
  792  'PROMPT_MESSAGE'
  793  'ERR'
  794  'START_CMD'
  795  'SQLERROR'
  796  'OSERROR'
  797  'SUCCESS'
  798  'FAILURE'
  799  'WARNING'
  800  'WHERE'
  801  '@'
  802  'INTRODUCER'
  803  'XMLTABLE'
  804  'SOURCE'
  805  'RESOURCE'
  806  'RESPECT'
  807  'PERCENT_ROWTYPE'
  808  'PERCENT_TYPE'
  809  'CHARACTER'
  810  'CHAR'
  811  'BYTE'
  812  'BINARY_INTEGER'
  813  'PLS_INTEGER'
  814  'BINARY_FLOAT'
  815  'BINARY_DOUBLE'
  816  'NATURALN'
  817  'POSITIVE'
  818  'POSITIVEN'
  819  'SIGNTYPE'
  820  'SIMPLE_INTEGER'
  821  'NVARCHAR2'
  822  'DEC'
  823  'INTEGER'
  824  'INT'
  825  'NUMERIC'
  826  'SMALLINT'
  827  'NUMBER'
  828  'DECIMAL'
  829  'DOUBLE'
  830  'FLOAT'
  831  'REAL'
  832  'NCHAR'
  833  'LONG'
  834  'RAW'
  835  'VARCHAR2'
  836  'VARCHAR'
  837  'STRING'
  838  'BOOLEAN'
  839  'DATE'
  840  'UROWID'
  841  'HOUR'
  842  'MINUTE'
  843  'TIMEZONE_HOUR'
  844  'TIMEZONE_MINUTE'
  845  'TIMEZONE_REGION'
  846  'TIMEZONE_ABBR'
  847  'TIMESTAMP_UNCONSTRAINED'
  848  'TIMESTAMP_TZ_UNCONSTRAINED'
  849  'TIMESTAMP_LTZ_UNCONSTRAINED'
  850  'YMINTERVAL_UNCONSTRAINED'
  851  'DSINTERVAL_UNCONSTRAINED'
  852  'BFILE'
  853  'BLOB'
  854  'NCLOB'
  855  'MLSLABEL'
  856  'BINDVAR'
  857  ':'
  858  'INDICATOR'
  859  'INHERIT'
  860  'ADVISOR'
  861  'ADMINISTER'
  862  'TUNING'
  863  'EXEMPT'
  864  'REDACTION'
  865  'DICTIONARY'
  866  'JOB'
  867  'CLASS'
  868  'PROGRAM'
  869  'MANAGE'
  870  'SCHEDULER'
  871  'LOGMINING'
  872  'MEASURE'
  873  'FOLDER'
  874  'PROCESS'
  875  'OPERATOR'
  876  'RESTRICTED'
  877  'BECOME'
  878  'NOTIFICATION'
  879  'PRIVILEGE'
  880  'SYSGUID'
  881  'DBA_RECYCLEBIN'
  882  'RESUMABLE'
  883  'SYSBACKUP'
  884  'SYSDBA'
  885  'SYSDG'
  886  'SYSKM'
  887  'SYSOPER'
  888  'TRUE'
  889  'FALSE'
  890  'DBTIMEZONE'
  891  'SESSIONTIMEZONE'
  892  'APPROXIMATE_NUM_LIT'
  893  'NATIONAL_CHAR_STRING_LIT'
  894  'ACL'
  895  'ACTION'
  896  'ACTIONS'
  897  'ACTIVE'
  898  'ACTIVE_DATA'
  899  'ACTIVITY'
  900  'ADAPTIVE_PLAN'
  901  'ADVANCED'
  902  'AFD_DISKSTRING'
  903  'ANOMALY'
  904  'ANSI_REARCH'
  905  'APPLICATION'
  906  'APPROX_COUNT_DISTINCT'
  907  'ARCHIVAL'
  908  'ARCHIVED'
  909  'ASIS'
  910  'ASSIGN'
  911  'AUTO_LOGIN'
  912  'AUTO_REOPTIMIZE'
  913  'AVRO'
  914  'BACKGROUND'
  915  'BATCHSIZE'
  916  'BATCH_TABLE_ACCESS_BY_ROWID'
  917  'BEGINNING'
  918  'BEQUEATH'
  919  'BITMAP_AND'
  920  'BSON'
  921  'CACHING'
  922  'CALCULATED'
  923  'CALLBACK'
  924  'CAPACITY'
  925  'CDBDEFAULT'
  926  'CLASSIFIER'
  927  'CLEANUP'
  928  'CLIENT'
  929  'CLUSTER_DETAILS'
  930  'CLUSTER_DISTANCE'
  931  'CLUSTERING'
  932  'COMMON_DATA'
  933  'COMPONENT'
  934  'COMPONENTS'
  935  'CON_DBID_TO_ID'
  936  'CONDITION'
  937  'CONDITIONAL'
  938  'CON_GUID_TO_ID'
  939  'CON_ID'
  940  'CON_NAME_TO_ID'
  941  'CONTAINERS'
  942  'CON_UID_TO_ID'
  943  'COOKIE'
  944  'COPY'
  945  'CREATE_FILE_DEST'
  946  'CREDENTIAL'
  947  'CRITICAL'
  948  'CUBE_AJ'
  949  'CUBE_SJ'
  950  'DATAMOVEMENT'
  951  'DATAOBJ_TO_MAT_PARTITION'
  952  'DATAPUMP'
  953  'DATA_SECURITY_REWRITE_LIMIT'
  954  'DAYS'
  955  'DB_UNIQUE_NAME'
  956  'DECORRELATE'
  957  'DEFINE'
  958  'DELETE_ALL'
  959  'DESTROY'
  960  'DIMENSIONS'
  961  'DISABLE_ALL'
  962  'DISABLE_PARALLEL_DML'
  963  'DISCARD'
  964  'DISTRIBUTE'
  965  'DUPLICATE'
  966  'DV'
  967  'ELIM_GROUPBY'
  968  'EM'
  969  'ENABLE_ALL'
  970  'ENABLE_PARALLEL_DML'
  971  'EQUIPART'
  972  'EVAL'
  973  'EVALUATE'
  974  'EXISTING'
  975  'EXPRESS'
  976  'EXTRACTCLOBXML'
  977  'FACTOR'
  978  'FAILOVER'
  979  'FAMILY'
  980  'FAR'
  981  'FASTSTART'
  982  'FEATURE_DETAILS'
  983  'FILE_NAME_CONVERT'
  984  'FIXED_VIEW_DATA'
  985  'FORMAT'
  986  'GATHER_OPTIMIZER_STATISTICS'
  987  'GET'
  988  'ILM'
  989  'INACTIVE'
  990  'INDEXING'
  991  'INMEMORY'
  992  'INMEMORY_PRUNING'
  993  'INPLACE'
  994  'INTERLEAVED'
  995  'JSON'
  996  'JSON_ARRAY'
  997  'JSON_ARRAYAGG'
  998  'JSON_EQUAL'
  999  'JSON_EXISTS'
 1000  'JSON_EXISTS2'
 1001  'JSONGET'
 1002  'JSON_OBJECT'
 1003  'JSON_OBJECTAGG'
 1004  'JSONPARSE'
 1005  'JSON_QUERY'
 1006  'JSON_SERIALIZE'
 1007  'JSON_TABLE'
 1008  'JSON_TEXTCONTAINS'
 1009  'JSON_TEXTCONTAINS2'
 1010  'JSON_VALUE'
 1011  'KEYSTORE'
 1012  'LABEL'
 1013  'LAX'
 1014  'LIFECYCLE'
 1015  'LINEAR'
 1016  'LOCKING'
 1017  'MATCH'
 1018  'MATCHES'
 1019  'MATCH_NUMBER'
 1020  'MATCH_RECOGNIZE'
 1021  'MAX_SHARED_TEMP_SIZE'
 1022  'MEMCOMPRESS'
 1023  'METADATA'
 1024  'MODEL_NB'
 1025  'MODEL_SV'
 1026  'MODIFICATION'
 1027  'MODULE'
 1028  'MONTHS'
 1029  'MULTIDIMENSIONAL'
 1030  'NEG'
 1031  'NO_ADAPTIVE_PLAN'
 1032  'NO_ANSI_REARCH'
 1033  'NO_AUTO_REOPTIMIZE'
 1034  'NO_BATCH_TABLE_ACCESS_BY_ROWID'
 1035  'NO_CLUSTERING'
 1036  'NO_COMMON_DATA'
 1037  'NO_DATA_SECURITY_REWRITE'
 1038  'NO_DECORRELATE'
 1039  'NO_ELIM_GROUPBY'
 1040  'NO_GATHER_OPTIMIZER_STATISTICS'
 1041  'NO_INMEMORY'
 1042  'NO_INMEMORY_PRUNING'
 1043  'NOKEEP'
 1044  'NO_OBJECT_LINK'
 1045  'NO_PARTIAL_JOIN'
 1046  'NO_PARTIAL_ROLLUP_PUSHDOWN'
 1047  'NOPARTITION'
 1048  'NO_PQ_CONCURRENT_UNION'
 1049  'NO_PQ_REPLICATE'
 1050  'NO_PQ_SKEW'
 1051  'NO_PX_FAULT_TOLERANCE'
 1052  'NORELOCATE'
 1053  'NOREPLAY'
 1054  'NO_ROOT_SW_FOR_LOCAL'
 1055  'NO_SQL_TRANSLATION'
 1056  'NO_USE_CUBE'
 1057  'NO_USE_VECTOR_AGGREGATION'
 1058  'NO_VECTOR_TRANSFORM'
 1059  'NO_VECTOR_TRANSFORM_DIMS'
 1060  'NO_VECTOR_TRANSFORM_FACT'
 1061  'NO_ZONEMAP'
 1062  'OBJ_ID'
 1063  'OLS'
 1064  'OMIT'
 1065  'ONE'
 1066  'ORA_CHECK_ACL'
 1067  'ORA_CHECK_PRIVILEGE'
 1068  'ORA_CLUSTERING'
 1069  'ORA_INVOKING_USER'
 1070  'ORA_INVOKING_USERID'
 1071  'ORA_INVOKING_XS_USER'
 1072  'ORA_INVOKING_XS_USER_GUID'
 1073  'ORA_RAWCOMPARE'
 1074  'ORA_RAWCONCAT'
 1075  'ORA_WRITE_TIME'
 1076  'PARTIAL'
 1077  'PARTIAL_JOIN'
 1078  'PARTIAL_ROLLUP_PUSHDOWN'
 1079  'PAST'
 1080  'PATCH'
 1081  'PATH_PREFIX'
 1082  'PATTERN'
 1083  'PER'
 1084  'PERIOD_KEYWORD'
 1085  'PERMUTE'
 1086  'POOL_16K'
 1087  'POOL_2K'
 1088  'POOL_32K'
 1089  'POOL_4K'
 1090  'POOL_8K'
 1091  'PQ_CONCURRENT_UNION'
 1092  'PQ_DISTRIBUTE_WINDOW'
 1093  'PQ_FILTER'
 1094  'PQ_REPLICATE'
 1095  'PQ_SKEW'
 1096  'PRELOAD'
 1097  'PRETTY'
 1098  'PREV'
 1099  'PRINTBLOBTOCLOB'
 1100  'PRIORITY'
 1101  'PRIVILEGED'
 1102  'PROXY'
 1103  'PRUNING'
 1104  'PX_FAULT_TOLERANCE'
 1105  'REALM'
 1106  'REDEFINE'
 1107  'RELOCATE'
 1108  'RESTART'
 1109  'ROLESET'
 1110  'ROWID_MAPPING_TABLE'
 1111  'RUNNING'
 1112  'SCRUB'
 1113  'SDO_GEOM_MBR'
 1114  'SECRET'
 1115  'SERIAL'
 1116  'SERVICE_NAME_CONVERT'
 1117  'SERVICES'
 1118  'SHARING'
 1119  'SHELFLIFE'
 1120  'SOURCE_FILE_DIRECTORY'
 1121  'SOURCE_FILE_NAME_CONVERT'
 1122  'SQL_TRANSLATION_PROFILE'
 1123  'STANDARD_HASH'
 1124  'STANDBYS'
 1125  'STATE'
 1126  'STREAM'
 1127  'SUBSCRIBE'
 1128  'SUBSET'
 1129  'SYS_CHECK_PRIVILEGE'
 1130  'SYS_GET_COL_ACLIDS'
 1131  'SYS_MKXTI'
 1132  'SYSOBJ'
 1133  'SYS_OP_CYCLED_SEQ'
 1134  'SYS_OP_HASH'
 1135  'SYS_OP_KEY_VECTOR_CREATE'
 1136  'SYS_OP_KEY_VECTOR_FILTER'
 1137  'SYS_OP_KEY_VECTOR_FILTER_LIST'
 1138  'SYS_OP_KEY_VECTOR_SUCCEEDED'
 1139  'SYS_OP_KEY_VECTOR_USE'
 1140  'SYS_OP_PART_ID'
 1141  'SYS_OP_ZONE_ID'
 1142  'SYS_RAW_TO_XSID'
 1143  'SYS_XSID_TO_RAW'
 1144  'SYS_ZMAP_FILTER'
 1145  'SYS_ZMAP_REFRESH'
 1146  'TAG'
 1147  'TEXT'
 1148  'TIER'
 1149  'TO_ACLID'
 1150  'TRUST'
 1151  'UCS2'
 1152  'UNCONDITIONAL'
 1153  'UNMATCHED'
 1154  'UNPLUG'
 1155  'UNSUBSCRIBE'
 1156  'USABLE'
 1157  'USE_CUBE'
 1158  'USE_HIDDEN_PARTITIONS'
 1159  'USER_DATA'
 1160  'USER_TABLESPACES'
 1161  'USE_VECTOR_AGGREGATION'
 1162  'USING_NO_EXPAND'
 1163  'UTF16BE'
 1164  'UTF16LE'
 1165  'UTF32'
 1166  'UTF8'
 1167  'V1'
 1168  'V2'
 1169  'VALID_TIME_END'
 1170  'VECTOR_TRANSFORM'
 1171  'VECTOR_TRANSFORM_DIMS'
 1172  'VECTOR_TRANSFORM_FACT'
 1173  'VERIFIER'
 1174  'VIOLATION'
 1175  'VISIBILITY'
 1176  'WEEK'
 1177  'WEEKS'
 1178  'WITH_PLSQL'
 1179  'WRAPPER'
 1180  'XS'
 1181  'YEARS'
 1182  'ZONEMAP'
 1183  'ABS'
 1184  'ACOS'
 1185  'ACTIVE_COMPONENT'
 1186  'ACTIVE_FUNCTION'
 1187  'ACTIVE_TAG'
 1188  'ADD_COLUMN'
 1189  'ADD_GROUP'
 1190  'ADD_MONTHS'
 1191  'ADJ_DATE'
 1192  'ADMINISTRATOR'
 1193  'ALIAS'
 1194  'ALL_ROWS'
 1195  'ANCILLARY'
 1196  'AND_EQUAL'
 1197  'ANTIJOIN'
 1198  'APPENDCHILDXML'
 1199  'APPEND'
 1200  'APPEND_VALUES'
 1201  'ASCII'
 1202  'ASCIISTR'
 1203  'ASIN'
 1204  'ASSEMBLY'
 1205  'ASYNC'
 1206  'ATAN2'
 1207  'ATAN'
 1208  'AUTHORIZATION'
 1209  'BEGIN_OUTLINE_DATA'
 1210  'BEHALF'
 1211  'BFILENAME'
 1212  'BINARY_DOUBLE_INFINITY'
 1213  'BINARY_DOUBLE_NAN'
 1214  'BINARY_FLOAT_INFINITY'
 1215  'BINARY_FLOAT_NAN'
 1216  'BIND_AWARE'
 1217  'BINDING'
 1218  'BIN_TO_NUM'
 1219  'BITAND'
 1220  'BITMAPS'
 1221  'BITMAP_TREE'
 1222  'BITS'
 1223  'BLOCK_RANGE'
 1224  'BLOCKS'
 1225  'BOUND'
 1226  'BRANCH'
 1227  'BROADCAST'
 1228  'BUFFER_CACHE'
 1229  'BUFFER'
 1230  'BYPASS_RECURSIVE_CHECK'
 1231  'BYPASS_UJVC'
 1232  'CACHE_CB'
 1233  'CACHE_INSTANCES'
 1234  'CACHE_TEMP_TABLE'
 1235  'CARDINALITY'
 1236  'CATEGORY'
 1237  'CEIL'
 1238  'CELL_FLASH_CACHE'
 1239  'CFILE'
 1240  'CHANGE_DUPKEY_ERROR_INDEX'
 1241  'CHARTOROWID'
 1242  'CHECK_ACL_REWRITE'
 1243  'CHILD'
 1244  'CHOOSE'
 1245  'CLOSE_CACHED_OPEN_CURSORS'
 1246  'CLUSTER_BY_ROWID'
 1247  'CLUSTER_ID'
 1248  'CLUSTERING_FACTOR'
 1249  'CLUSTER_PROBABILITY'
 1250  'CLUSTER_SET'
 1251  'COALESCE_SQ'
 1252  'COARSE'
 1253  'CO_AUTH_IND'
 1254  'COLD'
 1255  'COLUMNAR'
 1256  'COLUMN_AUTH_INDICATOR'
 1257  'COLUMN_STATS'
 1258  'COMPLIANCE'
 1259  'COMPOSE'
 1260  'COMPOSITE_LIMIT'
 1261  'COMPOSITE'
 1262  'COMPUTE'
 1263  'CONCAT'
 1264  'CONFIRM'
 1265  'CONFORMING'
 1266  'CONNECT_BY_CB_WHR_ONLY'
 1267  'CONNECT_BY_COMBINE_SW'
 1268  'CONNECT_BY_COST_BASED'
 1269  'CONNECT_BY_ELIM_DUPS'
 1270  'CONNECT_BY_FILTERING'
 1271  'CONNECT_BY_ISCYCLE'
 1272  'CONNECT_BY_ISLEAF'
 1273  'CONNECT_TIME'
 1274  'CONST'
 1275  'CONTENTS'
 1276  'CORR_K'
 1277  'CORR_S'
 1278  'COSH'
 1279  'COS'
 1280  'COST_XML_QUERY_REWRITE'
 1281  'COVAR_POP'
 1282  'COVAR_SAMP'
 1283  'CPU_COSTING'
 1284  'CPU_PER_CALL'
 1285  'CPU_PER_SESSION'
 1286  'CRASH'
 1287  'CREATE_STORED_OUTLINES'
 1288  'CROSSEDITION'
 1289  'CSCONVERT'
 1290  'CUBE_GB'
 1291  'CUME_DISTM'
 1292  'CURRENT_DATE'
 1293  'CURRENT_SCHEMA'
 1294  'CURRENT_TIME'
 1295  'CURRENT_TIMESTAMP'
 1296  'CURRENTV'
 1297  'CURSOR_SHARING_EXACT'
 1298  'CURSOR_SPECIFIC_SEGMENT'
 1299  'CV'
 1300  'DATAOBJNO'
 1301  'DATAOBJ_TO_PARTITION'
 1302  'DATE_MODE'
 1303  'DBA'
 1304  'DBMS_STATS'
 1305  'DB_VERSION'
 1306  'DEBUGGER'
 1307  'DECR'
 1308  'DEFINED'
 1309  'DEGREE'
 1310  'DELAY'
 1311  'DELETEXML'
 1312  'DENSE_RANKM'
 1313  'DEPENDENT'
 1314  'DEQUEUE'
 1315  'DEREF'
 1316  'DEREF_NO_REWRITE'
 1317  'DETACHED'
 1318  'DETERMINES'
 1319  'DIRECT_LOAD'
 1320  'DISABLE_PRESET'
 1321  'DISABLE_RPKE'
 1322  'DISKGROUP'
 1323  'DISK'
 1324  'DISKS'
 1325  'DISMOUNT'
 1326  'DISTRIBUTED'
 1327  'DML_UPDATE'
 1328  'DOCFIDELITY'
 1329  'DOMAIN_INDEX_FILTER'
 1330  'DOMAIN_INDEX_NO_SORT'
 1331  'DOMAIN_INDEX_SORT'
 1332  'DRIVING_SITE'
 1333  'DROP_COLUMN'
 1334  'DROP_GROUP'
 1335  'DST_UPGRADE_INSERT_CONV'
 1336  'DUMP'
 1337  'DYNAMIC'
 1338  'DYNAMIC_SAMPLING_EST_CDN'
 1339  'DYNAMIC_SAMPLING'
 1340  'ELIMINATE_JOIN'
 1341  'ELIMINATE_OBY'
 1342  'ELIMINATE_OUTER_JOIN'
 1343  'EMPTY_BLOB'
 1344  'EMPTY_CLOB'
 1345  'ENABLE_PRESET'
 1346  'END_OUTLINE_DATA'
 1347  'ENFORCE'
 1348  'ENQUEUE'
 1349  'ENTRY'
 1350  'ERROR_ARGUMENT'
 1351  'ERROR_ON_OVERLAP_TIME'
 1352  'ESTIMATE'
 1353  'EVALUATION'
 1354  'EVENTS'
 1355  'EVERY'
 1356  'EXCHANGE'
 1357  'EXISTSNODE'
 1358  'EXPAND_GSET_TO_UNION'
 1359  'EXPAND_TABLE'
 1360  'EXPLOSION'
 1361  'EXP'
 1362  'EXPORT'
 1363  'EXPR_CORR_CHECK'
 1364  'EXTENDS'
 1365  'EXTENTS'
 1366  'EXTRACTVALUE'
 1367  'EXTRA'
 1368  'FACILITY'
 1369  'FACT'
 1370  'FACTORIZE_JOIN'
 1371  'FAILED_LOGIN_ATTEMPTS'
 1372  'FAILGROUP'
 1373  'FBTSCAN'
 1374  'FEATURE_ID'
 1375  'FEATURE_SET'
 1376  'FEATURE_VALUE'
 1377  'FILTER'
 1378  'FINE'
 1379  'FIRSTM'
 1380  'FIRST_ROWS'
 1381  'FLAGGER'
 1382  'FLOB'
 1383  'FLOOR'
 1384  'FLUSH'
 1385  'FORCE_XML_QUERY_REWRITE'
 1386  'FOREVER'
 1387  'FORWARD'
 1388  'FRAGMENT_NUMBER'
 1389  'FROM_TZ'
 1390  'FULL_OUTER_JOIN_TO_OUTER'
 1391  'GATHER_PLAN_STATISTICS'
 1392  'GBY_CONC_ROLLUP'
 1393  'GBY_PUSHDOWN'
 1394  'GLOBAL_TOPIC_ENABLED'
 1395  'GROUP_BY'
 1396  'GROUP_ID'
 1397  'GROUPING_ID'
 1398  'GUARANTEED'
 1399  'HASH_AJ'
 1400  'HASH_SJ'
 1401  'HEADER'
 1402  'HEAP'
 1403  'HELP'
 1404  'HEXTORAW'
 1405  'HEXTOREF'
 1406  'HIDDEN_KEYWORD'
 1407  'HINTSET_BEGIN'
 1408  'HINTSET_END'
 1409  'HOT'
 1410  'HWM_BROKERED'
 1411  'HYBRID'
 1412  'IDGENERATORS'
 1413  'IDLE_TIME'
 1414  'IGNORE_OPTIM_EMBEDDED_HINTS'
 1415  'IGNORE_ROW_ON_DUPKEY_INDEX'
 1416  'IGNORE_WHERE_CLAUSE'
 1417  'IMPACT'
 1418  'IMPORT'
 1419  'INCLUDE_VERSION'
 1420  'INCREMENTAL'
 1421  'INCR'
 1422  'INDEX_ASC'
 1423  'INDEX_COMBINE'
 1424  'INDEX_DESC'
 1425  'INDEXED'
 1426  'INDEX_FFS'
 1427  'INDEX_FILTER'
 1428  'INDEX_JOIN'
 1429  'INDEX_ROWS'
 1430  'INDEX_RRS'
 1431  'INDEX_RS_ASC'
 1432  'INDEX_RS_DESC'
 1433  'INDEX_RS'
 1434  'INDEX_SCAN'
 1435  'INDEX_SKIP_SCAN'
 1436  'INDEX_SS_ASC'
 1437  'INDEX_SS_DESC'
 1438  'INDEX_SS'
 1439  'INDEX_STATS'
 1440  'INFORMATIONAL'
 1441  'INITCAP'
 1442  'INLINE_XMLTYPE_NT'
 1443  'IN_MEMORY_METADATA'
 1444  'INSERTCHILDXMLAFTER'
 1445  'INSERTCHILDXMLBEFORE'
 1446  'INSERTCHILDXML'
 1447  'INSERTXMLAFTER'
 1448  'INSERTXMLBEFORE'
 1449  'INSTANCES'
 1450  'INSTANTLY'
 1451  'INSTR2'
 1452  'INSTR4'
 1453  'INSTRB'
 1454  'INSTRC'
 1455  'INSTR'
 1456  'INTERMEDIATE'
 1457  'INTERNAL_CONVERT'
 1458  'INTERNAL_USE'
 1459  'INTERPRETED'
 1460  'IN_XQUERY'
 1461  'ISOLATION_LEVEL'
 1462  'ITERATION_NUMBER'
 1463  'KERBEROS'
 1464  'KEY_LENGTH'
 1465  'KEYSIZE'
 1466  'KEYS'
 1467  'KILL'
 1468  'LAST_DAY'
 1469  'LATERAL'
 1470  'LAYER'
 1471  'LDAP_REGISTRATION_ENABLED'
 1472  'LDAP_REGISTRATION'
 1473  'LDAP_REG_SYNC_INTERVAL'
 1474  'LENGTH2'
 1475  'LENGTH4'
 1476  'LENGTHB'
 1477  'LENGTHC'
 1478  'LENGTH'
 1479  'LIFE'
 1480  'LIFETIME'
 1481  'LIKE_EXPAND'
 1482  'LN'
 1483  'LNNVL'
 1484  'LOAD'
 1485  'LOBNVL'
 1486  'LOCAL_INDEXES'
 1487  'LOCALTIME'
 1488  'LOCALTIMESTAMP'
 1489  'LOCATION'
 1490  'LOGICAL_READS_PER_CALL'
 1491  'LOGICAL_READS_PER_SESSION'
 1492  'LOG_READ_ONLY_VIOLATIONS'
 1493  'LOWER'
 1494  'LPAD'
 1495  'LTRIM'
 1496  'MAKE_REF'
 1497  'MANAGER'
 1498  'MATERIALIZE'
 1499  'MAXARCHLOGS'
 1500  'MAXDATAFILES'
 1501  'MAXINSTANCES'
 1502  'MAXLOGFILES'
 1503  'MAXLOGHISTORY'
 1504  'MAXLOGMEMBERS'
 1505  'MAXTRANS'
 1506  'MEMORY'
 1507  'MERGEACTIONS'
 1508  'MERGE_AJ'
 1509  'MERGE_CONST_ON'
 1510  'MERGE_SJ'
 1511  'METHOD'
 1512  'MIGRATE'
 1513  'MIGRATION'
 1514  'MINUS_NULL'
 1515  'MIRRORCOLD'
 1516  'MIRRORHOT'
 1517  'MIRROR'
 1518  'MODEL_COMPILE_SUBQUERY'
 1519  'MODEL_DONTVERIFY_UNIQUENESS'
 1520  'MODEL_DYNAMIC_SUBQUERY'
 1521  'MODEL_MIN_ANALYSIS'
 1522  'MODEL_NO_ANALYSIS'
 1523  'MODEL_PBY'
 1524  'MODEL_PUSH_REF'
 1525  'MODIFY_COLUMN_TYPE'
 1526  'MOD'
 1527  'MONITOR'
 1528  'MONTHS_BETWEEN'
 1529  'MOUNTPATH'
 1530  'MV_MERGE'
 1531  'NAMED'
 1532  'NANVL'
 1533  'NATIONAL'
 1534  'NATIVE_FULL_OUTER_JOIN'
 1535  'NATIVE'
 1536  'NCHR'
 1537  'NEEDED'
 1538  'NESTED_TABLE_FAST_INSERT'
 1539  'NESTED_TABLE_GET_REFS'
 1540  'NESTED_TABLE_ID'
 1541  'NESTED_TABLE_SET_REFS'
 1542  'NESTED_TABLE_SET_SETID'
 1543  'NEW_TIME'
 1544  'NEXT_DAY'
 1545  'NL_AJ'
 1546  'NLJ_BATCHING'
 1547  'NLJ_INDEX_FILTER'
 1548  'NLJ_INDEX_SCAN'
 1549  'NLJ_PREFETCH'
 1550  'NLS_CALENDAR'
 1551  'NLS_CHARACTERSET'
 1552  'NLS_CHARSET_DECL_LEN'
 1553  'NLS_CHARSET_ID'
 1554  'NLS_CHARSET_NAME'
 1555  'NLS_COMP'
 1556  'NLS_CURRENCY'
 1557  'NLS_DATE_FORMAT'
 1558  'NLS_DATE_LANGUAGE'
 1559  'NLS_INITCAP'
 1560  'NLS_ISO_CURRENCY'
 1561  'NL_SJ'
 1562  'NLS_LANG'
 1563  'NLS_LANGUAGE'
 1564  'NLS_LENGTH_SEMANTICS'
 1565  'NLS_LOWER'
 1566  'NLS_NCHAR_CONV_EXCP'
 1567  'NLS_NUMERIC_CHARACTERS'
 1568  'NLS_SORT'
 1569  'NLSSORT'
 1570  'NLS_SPECIAL_CHARS'
 1571  'NLS_TERRITORY'
 1572  'NLS_UPPER'
 1573  'NO_ACCESS'
 1574  'NOAPPEND'
 1575  'NO_BASETABLE_MULTIMV_REWRITE'
 1576  'NO_BIND_AWARE'
 1577  'NO_BUFFER'
 1578  'NO_CARTESIAN'
 1579  'NO_CHECK_ACL_REWRITE'
 1580  'NO_CLUSTER_BY_ROWID'
 1581  'NO_COALESCE_SQ'
 1582  'NO_CONNECT_BY_CB_WHR_ONLY'
 1583  'NO_CONNECT_BY_COMBINE_SW'
 1584  'NO_CONNECT_BY_COST_BASED'
 1585  'NO_CONNECT_BY_ELIM_DUPS'
 1586  'NO_CONNECT_BY_FILTERING'
 1587  'NO_COST_XML_QUERY_REWRITE'
 1588  'NO_CPU_COSTING'
 1589  'NOCPU_COSTING'
 1590  'NO_DOMAIN_INDEX_FILTER'
 1591  'NO_DST_UPGRADE_INSERT_CONV'
 1592  'NO_ELIMINATE_JOIN'
 1593  'NO_ELIMINATE_OBY'
 1594  'NO_ELIMINATE_OUTER_JOIN'
 1595  'NO_EXPAND_GSET_TO_UNION'
 1596  'NO_EXPAND'
 1597  'NO_EXPAND_TABLE'
 1598  'NO_FACT'
 1599  'NO_FACTORIZE_JOIN'
 1600  'NO_FILTERING'
 1601  'NOFORCE'
 1602  'NO_FULL_OUTER_JOIN_TO_OUTER'
 1603  'NO_GBY_PUSHDOWN'
 1604  'NO_INDEX_FFS'
 1605  'NO_INDEX'
 1606  'NO_INDEX_SS'
 1607  'NO_LOAD'
 1608  'NOLOCAL'
 1609  'NO_MERGE'
 1610  'NO_MODEL_PUSH_REF'
 1611  'NO_MONITORING'
 1612  'NO_MONITOR'
 1613  'NO_MULTIMV_REWRITE'
 1614  'NO_NATIVE_FULL_OUTER_JOIN'
 1615  'NONBLOCKING'
 1616  'NO_NLJ_BATCHING'
 1617  'NO_NLJ_PREFETCH'
 1618  'NO_ORDER_ROLLUPS'
 1619  'NO_OUTER_JOIN_TO_ANTI'
 1620  'NO_OUTER_JOIN_TO_INNER'
 1621  'NOOVERRIDE'
 1622  'NO_PARALLEL_INDEX'
 1623  'NOPARALLEL_INDEX'
 1624  'NO_PARALLEL'
 1625  'NO_PARTIAL_COMMIT'
 1626  'NO_PLACE_DISTINCT'
 1627  'NO_PLACE_GROUP_BY'
 1628  'NO_PQ_MAP'
 1629  'NO_PRUNE_GSETS'
 1630  'NO_PULL_PRED'
 1631  'NO_PUSH_PRED'
 1632  'NO_PUSH_SUBQ'
 1633  'NO_PX_JOIN_FILTER'
 1634  'NO_QKN_BUFF'
 1635  'NO_QUERY_TRANSFORMATION'
 1636  'NO_REF_CASCADE'
 1637  'NOREPAIR'
 1638  'NO_RESULT_CACHE'
 1639  'NO_REWRITE'
 1640  'NOREWRITE'
 1641  'NOSEGMENT'
 1642  'NO_SEMIJOIN'
 1643  'NO_SEMI_TO_INNER'
 1644  'NO_SET_TO_JOIN'
 1645  'NO_SQL_TUNE'
 1646  'NO_STAR_TRANSFORMATION'
 1647  'NO_STATEMENT_QUEUING'
 1648  'NO_STATS_GSETS'
 1649  'NOSTRICT'
 1650  'NO_SUBQUERY_PRUNING'
 1651  'NO_SUBSTRB_PAD'
 1652  'NO_SWAP_JOIN_INPUTS'
 1653  'NOSWITCH'
 1654  'NO_TABLE_LOOKUP_BY_NL'
 1655  'NO_TEMP_TABLE'
 1656  'NO_TRANSFORM_DISTINCT_AGG'
 1657  'NO_UNNEST'
 1658  'NO_USE_HASH_AGGREGATION'
 1659  'NO_USE_HASH_GBY_FOR_PUSHDOWN'
 1660  'NO_USE_HASH'
 1661  'NO_USE_INVISIBLE_INDEXES'
 1662  'NO_USE_MERGE'
 1663  'NO_USE_NL'
 1664  'NO_XDB_FASTPATH_INSERT'
 1665  'NO_XML_DML_REWRITE'
 1666  'NO_XMLINDEX_REWRITE_IN_SELECT'
 1667  'NO_XMLINDEX_REWRITE'
 1668  'NO_XML_QUERY_REWRITE'
 1669  'NTH_VALUE'
 1670  'NULLIF'
 1671  'NUM_INDEX_KEYS'
 1672  'NUMTODSINTERVAL'
 1673  'NUMTOYMINTERVAL'
 1674  'NVL2'
 1675  'OBJECT2XML'
 1676  'OBJNO'
 1677  'OBJNO_REUSE'
 1678  'OCCURENCES'
 1679  'OLAP'
 1680  'OLD_PUSH_PRED'
 1681  'OPAQUE'
 1682  'OPAQUE_TRANSFORM'
 1683  'OPAQUE_XCANONICAL'
 1684  'OPCODE'
 1685  'OPERATIONS'
 1686  'OPT_ESTIMATE'
 1687  'OPTIMIZE'
 1688  'OPTIMIZER_FEATURES_ENABLE'
 1689  'OPTIMIZER_GOAL'
 1690  'OPT_PARAM'
 1691  'ORA_BRANCH'
 1692  'ORADEBUG'
 1693  'ORA_DST_AFFECTED'
 1694  'ORA_DST_CONVERT'
 1695  'ORA_DST_ERROR'
 1696  'ORA_GET_ACLIDS'
 1697  'ORA_GET_PRIVILEGES'
 1698  'ORA_HASH'
 1699  'ORA_ROWSCN'
 1700  'ORA_ROWSCN_RAW'
 1701  'ORA_ROWVERSION'
 1702  'ORA_TABVERSION'
 1703  'ORDERED'
 1704  'ORDERED_PREDICATES'
 1705  'OR_EXPAND'
 1706  'ORGANIZATION'
 1707  'OR_PREDICATES'
 1708  'OTHER'
 1709  'OUTER_JOIN_TO_ANTI'
 1710  'OUTER_JOIN_TO_INNER'
 1711  'OUTLINE_LEAF'
 1712  'OUT_OF_LINE'
 1713  'OVERFLOW_NOMOVE'
 1714  'OVERLAPS'
 1715  'OWNER'
 1716  'OWNERSHIP'
 1717  'OWN'
 1718  'PARALLEL_INDEX'
 1719  'PARAM'
 1720  'PARITY'
 1721  'PARTIALLY'
 1722  'PARTITION_HASH'
 1723  'PARTITION_LIST'
 1724  'PARTITION_RANGE'
 1725  'PARTNUMINST'
 1726  'PASSWORD_GRACE_TIME'
 1727  'PASSWORD_LIFE_TIME'
 1728  'PASSWORD_LOCK_TIME'
 1729  'PASSWORD_REUSE_MAX'
 1730  'PASSWORD_REUSE_TIME'
 1731  'PASSWORD_VERIFY_FUNCTION'
 1732  'PATHS'
 1733  'PBL_HS_BEGIN'
 1734  'PBL_HS_END'
 1735  'PENDING'
 1736  'PERCENT_RANKM'
 1737  'PERMISSION'
 1738  'PFILE'
 1739  'PIKEY'
 1740  'PIV_GB'
 1741  'PIV_SSF'
 1742  'PLACE_DISTINCT'
 1743  'PLACE_GROUP_BY'
 1744  'PLSCOPE_SETTINGS'
 1745  'PLSQL_CCFLAGS'
 1746  'PLSQL_CODE_TYPE'
 1747  'PLSQL_DEBUG'
 1748  'PLSQL_OPTIMIZE_LEVEL'
 1749  'PLSQL_WARNINGS'
 1750  'POINT'
 1751  'POST_TRANSACTION'
 1752  'POWERMULTISET_BY_CARDINALITY'
 1753  'POWERMULTISET'
 1754  'POWER'
 1755  'PQ_DISTRIBUTE'
 1756  'PQ_MAP'
 1757  'PQ_NOMAP'
 1758  'PRECEDES'
 1759  'PRECOMPUTE_SUBQUERY'
 1760  'PREDICATE_REORDERS'
 1761  'PRESENTNNV'
 1762  'PRESENTV'
 1763  'PRESERVE_OID'
 1764  'PREVIOUS'
 1765  'PRIVATE'
 1766  'PRIVATE_SGA'
 1767  'PROJECT'
 1768  'PROPAGATE'
 1769  'PROTECTED'
 1770  'PULL_PRED'
 1771  'PUSH_PRED'
 1772  'PUSH_SUBQ'
 1773  'PX_GRANULE'
 1774  'PX_JOIN_FILTER'
 1775  'QB_NAME'
 1776  'QUERY_BLOCK'
 1777  'QUEUE_CURR'
 1778  'QUEUE'
 1779  'QUEUE_ROWP'
 1780  'QUIESCE'
 1781  'QUORUM'
 1782  'RANDOM_LOCAL'
 1783  'RANDOM'
 1784  'RANKM'
 1785  'RAPIDLY'
 1786  'RAWTOHEX'
 1787  'RAWTONHEX'
 1788  'RBA'
 1789  'RBO_OUTLINE'
 1790  'RDBA'
 1791  'REBALANCE'
 1792  'RECOVERABLE'
 1793  'RECOVERY'
 1794  'RECYCLEBIN'
 1795  'REDO'
 1796  'REDUNDANCY'
 1797  'REF_CASCADE_CURSOR'
 1798  'REFERENCED'
 1799  'REFTOHEX'
 1800  'REGEXP_COUNT'
 1801  'REGEXP_INSTR'
 1802  'REGEXP_LIKE'
 1803  'REGEXP_REPLACE'
 1804  'REGEXP_SUBSTR'
 1805  'REGR_AVGX'
 1806  'REGR_AVGY'
 1807  'REGR_COUNT'
 1808  'REGR_INTERCEPT'
 1809  'REGR_R2'
 1810  'REGR_SLOPE'
 1811  'REGR_SXX'
 1812  'REGR_SXY'
 1813  'REGR_SYY'
 1814  'REGULAR'
 1815  'REMAINDER'
 1816  'REMOTE_MAPPED'
 1817  'REPAIR'
 1818  'REPEAT'
 1819  'RESET'
 1820  'RESOLVE'
 1821  'RESOLVER'
 1822  'RESTORE_AS_INTERVALS'
 1823  'RESTORE'
 1824  'RESTRICT_ALL_REF_CONS'
 1825  'RESTRICT'
 1826  'RESUME'
 1827  'RETRY_ON_ROW_CHANGE'
 1828  'REWRITE_OR_ERROR'
 1829  'ROLLING'
 1830  'ROWIDTOCHAR'
 1831  'ROWIDTONCHAR'
 1832  'ROW_LENGTH'
 1833  'ROWNUM'
 1834  'RPAD'
 1835  'RTRIM'
 1836  'RULE'
 1837  'SAVE_AS_INTERVALS'
 1838  'SB4'
 1839  'SCALE'
 1840  'SCALE_ROWS'
 1841  'SCAN_INSTANCES'
 1842  'SCAN'
 1843  'SCN_ASCENDING'
 1844  'SD_ALL'
 1845  'SD_INHIBIT'
 1846  'SD_SHOW'
 1847  'SECUREFILE_DBA'
 1848  'SECURITY'
 1849  'SEG_BLOCK'
 1850  'SEG_FILE'
 1851  'SEMIJOIN_DRIVER'
 1852  'SEMIJOIN'
 1853  'SEMI_TO_INNER'
 1854  'SEQUENCED'
 1855  'SESSION_CACHED_CURSORS'
 1856  'SESSIONS_PER_USER'
 1857  'SESSIONTZNAME'
 1858  'SET_TO_JOIN'
 1859  'SEVERE'
 1860  'SHARED'
 1861  'SHARED_POOL'
 1862  'SID'
 1863  'SIGNAL_COMPONENT'
 1864  'SIGNAL_FUNCTION'
 1865  'SIGN'
 1866  'SIMPLE'
 1867  'SINGLETASK'
 1868  'SINH'
 1869  'SIN'
 1870  'SKIP_EXT_OPTIMIZER'
 1871  'SKIP_UNQ_UNUSABLE_IDX'
 1872  'SKIP_UNUSABLE_INDEXES'
 1873  'SOUNDEX'
 1874  'SPFILE'
 1875  'SPREADSHEET'
 1876  'SQLLDR'
 1877  'SQL_TRACE'
 1878  'SQRT'
 1879  'STALE'
 1880  'STANDBY_MAX_DATA_DELAY'
 1881  'STAR'
 1882  'STAR_TRANSFORMATION'
 1883  'STATEMENT_QUEUING'
 1884  'STATS_BINOMIAL_TEST'
 1885  'STATS_CROSSTAB'
 1886  'STATS_F_TEST'
 1887  'STATS_KS_TEST'
 1888  'STATS_MODE'
 1889  'STATS_MW_TEST'
 1890  'STATS_ONE_WAY_ANOVA'
 1891  'STATS_T_TEST_INDEP'
 1892  'STATS_T_TEST_INDEPU'
 1893  'STATS_T_TEST_ONE'
 1894  'STATS_T_TEST_PAIRED'
 1895  'STATS_WSR_TEST'
 1896  'STDDEV_POP'
 1897  'STDDEV_SAMP'
 1898  'STREAMS'
 1899  'STRICT'
 1900  'STRIPE_COLUMNS'
 1901  'STRIPE_WIDTH'
 1902  'STRIP'
 1903  'SUBPARTITION_REL'
 1904  'SUBQUERIES'
 1905  'SUBQUERY_PRUNING'
 1906  'SUBSTR2'
 1907  'SUBSTR4'
 1908  'SUBSTRB'
 1909  'SUBSTRC'
 1910  'SUMMARY'
 1911  'SWAP_JOIN_INPUTS'
 1912  'SYNC'
 1913  'SYSASM'
 1914  'SYS_AUDIT'
 1915  'SYSAUX'
 1916  'SYS_CHECKACL'
 1917  'SYS_CONNECT_BY_PATH'
 1918  'SYS_CONTEXT'
 1919  'SYSDATE'
 1920  'SYS_DBURIGEN'
 1921  'SYS_DL_CURSOR'
 1922  'SYS_DM_RXFORM_CHR'
 1923  'SYS_DM_RXFORM_NUM'
 1924  'SYS_DOM_COMPARE'
 1925  'SYS_DST_PRIM2SEC'
 1926  'SYS_DST_SEC2PRIM'
 1927  'SYS_ET_BFILE_TO_RAW'
 1928  'SYS_ET_BLOB_TO_IMAGE'
 1929  'SYS_ET_IMAGE_TO_BLOB'
 1930  'SYS_ET_RAW_TO_BFILE'
 1931  'SYS_EXTPDTXT'
 1932  'SYS_EXTRACT_UTC'
 1933  'SYS_FBT_INSDEL'
 1934  'SYS_FILTER_ACLS'
 1935  'SYS_FNMATCHES'
 1936  'SYS_FNREPLACE'
 1937  'SYS_GET_ACLIDS'
 1938  'SYS_GET_PRIVILEGES'
 1939  'SYS_GETTOKENID'
 1940  'SYS_GETXTIVAL'
 1941  'SYS_GUID'
 1942  'SYS_MAKEXML'
 1943  'SYS_MAKE_XMLNODEID'
 1944  'SYS_MKXMLATTR'
 1945  'SYS_OP_ADT2BIN'
 1946  'SYS_OP_ADTCONS'
 1947  'SYS_OP_ALSCRVAL'
 1948  'SYS_OP_ATG'
 1949  'SYS_OP_BIN2ADT'
 1950  'SYS_OP_BITVEC'
 1951  'SYS_OP_BL2R'
 1952  'SYS_OP_BLOOM_FILTER_LIST'
 1953  'SYS_OP_BLOOM_FILTER'
 1954  'SYS_OP_C2C'
 1955  'SYS_OP_CAST'
 1956  'SYS_OP_CEG'
 1957  'SYS_OP_CL2C'
 1958  'SYS_OP_COMBINED_HASH'
 1959  'SYS_OP_COMP'
 1960  'SYS_OP_CONVERT'
 1961  'SYS_OP_COUNTCHG'
 1962  'SYS_OP_CSCONV'
 1963  'SYS_OP_CSCONVTEST'
 1964  'SYS_OP_CSR'
 1965  'SYS_OP_CSX_PATCH'
 1966  'SYS_OP_DECOMP'
 1967  'SYS_OP_DESCEND'
 1968  'SYS_OP_DISTINCT'
 1969  'SYS_OP_DRA'
 1970  'SYS_OP_DUMP'
 1971  'SYS_OP_DV_CHECK'
 1972  'SYS_OP_ENFORCE_NOT_NULL'
 1973  'SYS_OP_EXTRACT'
 1974  'SYS_OP_GROUPING'
 1975  'SYS_OP_GUID'
 1976  'SYS_OP_IIX'
 1977  'SYS_OP_ITR'
 1978  'SYS_OP_LBID'
 1979  'SYS_OP_LOBLOC2BLOB'
 1980  'SYS_OP_LOBLOC2CLOB'
 1981  'SYS_OP_LOBLOC2ID'
 1982  'SYS_OP_LOBLOC2NCLOB'
 1983  'SYS_OP_LOBLOC2TYP'
 1984  'SYS_OP_LSVI'
 1985  'SYS_OP_LVL'
 1986  'SYS_OP_MAKEOID'
 1987  'SYS_OP_MAP_NONNULL'
 1988  'SYS_OP_MSR'
 1989  'SYS_OP_NICOMBINE'
 1990  'SYS_OP_NIEXTRACT'
 1991  'SYS_OP_NII'
 1992  'SYS_OP_NIX'
 1993  'SYS_OP_NOEXPAND'
 1994  'SYS_OP_NTCIMG'
 1995  'SYS_OP_NUMTORAW'
 1996  'SYS_OP_OIDVALUE'
 1997  'SYS_OP_OPNSIZE'
 1998  'SYS_OP_PAR_1'
 1999  'SYS_OP_PARGID_1'
 2000  'SYS_OP_PARGID'
 2001  'SYS_OP_PAR'
 2002  'SYS_OP_PIVOT'
 2003  'SYS_OP_R2O'
 2004  'SYS_OP_RAWTONUM'
 2005  'SYS_OP_RDTM'
 2006  'SYS_OP_REF'
 2007  'SYS_OP_RMTD'
 2008  'SYS_OP_ROWIDTOOBJ'
 2009  'SYS_OP_RPB'
 2010  'SYS_OPTLOBPRBSC'
 2011  'SYS_OP_TOSETID'
 2012  'SYS_OP_TPR'
 2013  'SYS_OP_TRTB'
 2014  'SYS_OPTXICMP'
 2015  'SYS_OPTXQCASTASNQ'
 2016  'SYS_OP_UNDESCEND'
 2017  'SYS_OP_VECAND'
 2018  'SYS_OP_VECBIT'
 2019  'SYS_OP_VECOR'
 2020  'SYS_OP_VECXOR'
 2021  'SYS_OP_VERSION'
 2022  'SYS_OP_VREF'
 2023  'SYS_OP_VVD'
 2024  'SYS_OP_XMLCONS_FOR_CSX'
 2025  'SYS_OP_XPTHATG'
 2026  'SYS_OP_XPTHIDX'
 2027  'SYS_OP_XPTHOP'
 2028  'SYS_OP_XTXT2SQLT'
 2029  'SYS_ORDERKEY_DEPTH'
 2030  'SYS_ORDERKEY_MAXCHILD'
 2031  'SYS_ORDERKEY_PARENT'
 2032  'SYS_PARALLEL_TXN'
 2033  'SYS_PATHID_IS_ATTR'
 2034  'SYS_PATHID_IS_NMSPC'
 2035  'SYS_PATHID_LASTNAME'
 2036  'SYS_PATHID_LASTNMSPC'
 2037  'SYS_PATH_REVERSE'
 2038  'SYS_PXQEXTRACT'
 2039  'SYS_RID_ORDER'
 2040  'SYS_ROW_DELTA'
 2041  'SYS_SC_2_XMLT'
 2042  'SYS_SYNRCIREDO'
 2043  'SYSTEM_DEFINED'
 2044  'SYSTIMESTAMP'
 2045  'SYS_TYPEID'
 2046  'SYS_UMAKEXML'
 2047  'SYS_XMLANALYZE'
 2048  'SYS_XMLCONTAINS'
 2049  'SYS_XMLCONV'
 2050  'SYS_XMLEXNSURI'
 2051  'SYS_XMLGEN'
 2052  'SYS_XMLI_LOC_ISNODE'
 2053  'SYS_XMLI_LOC_ISTEXT'
 2054  'SYS_XMLINSTR'
 2055  'SYS_XMLLOCATOR_GETSVAL'
 2056  'SYS_XMLNODEID_GETCID'
 2057  'SYS_XMLNODEID_GETLOCATOR'
 2058  'SYS_XMLNODEID_GETOKEY'
 2059  'SYS_XMLNODEID_GETPATHID'
 2060  'SYS_XMLNODEID_GETPTRID'
 2061  'SYS_XMLNODEID_GETRID'
 2062  'SYS_XMLNODEID_GETSVAL'
 2063  'SYS_XMLNODEID_GETTID'
 2064  'SYS_XMLNODEID'
 2065  'SYS_XMLT_2_SC'
 2066  'SYS_XMLTRANSLATE'
 2067  'SYS_XMLTYPE2SQL'
 2068  'SYS_XQ_ASQLCNV'
 2069  'SYS_XQ_ATOMCNVCHK'
 2070  'SYS_XQBASEURI'
 2071  'SYS_XQCASTABLEERRH'
 2072  'SYS_XQCODEP2STR'
 2073  'SYS_XQCODEPEQ'
 2074  'SYS_XQCON2SEQ'
 2075  'SYS_XQCONCAT'
 2076  'SYS_XQDELETE'
 2077  'SYS_XQDFLTCOLATION'
 2078  'SYS_XQDOC'
 2079  'SYS_XQDOCURI'
 2080  'SYS_XQDURDIV'
 2081  'SYS_XQED4URI'
 2082  'SYS_XQENDSWITH'
 2083  'SYS_XQERRH'
 2084  'SYS_XQERR'
 2085  'SYS_XQESHTMLURI'
 2086  'SYS_XQEXLOBVAL'
 2087  'SYS_XQEXSTWRP'
 2088  'SYS_XQEXTRACT'
 2089  'SYS_XQEXTRREF'
 2090  'SYS_XQEXVAL'
 2091  'SYS_XQFB2STR'
 2092  'SYS_XQFNBOOL'
 2093  'SYS_XQFNCMP'
 2094  'SYS_XQFNDATIM'
 2095  'SYS_XQFNLNAME'
 2096  'SYS_XQFNNM'
 2097  'SYS_XQFNNSURI'
 2098  'SYS_XQFNPREDTRUTH'
 2099  'SYS_XQFNQNM'
 2100  'SYS_XQFNROOT'
 2101  'SYS_XQFORMATNUM'
 2102  'SYS_XQFTCONTAIN'
 2103  'SYS_XQFUNCR'
 2104  'SYS_XQGETCONTENT'
 2105  'SYS_XQINDXOF'
 2106  'SYS_XQINSERT'
 2107  'SYS_XQINSPFX'
 2108  'SYS_XQIRI2URI'
 2109  'SYS_XQLANG'
 2110  'SYS_XQLLNMFRMQNM'
 2111  'SYS_XQMKNODEREF'
 2112  'SYS_XQNILLED'
 2113  'SYS_XQNODENAME'
 2114  'SYS_XQNORMSPACE'
 2115  'SYS_XQNORMUCODE'
 2116  'SYS_XQ_NRNG'
 2117  'SYS_XQNSP4PFX'
 2118  'SYS_XQNSPFRMQNM'
 2119  'SYS_XQPFXFRMQNM'
 2120  'SYS_XQ_PKSQL2XML'
 2121  'SYS_XQPOLYABS'
 2122  'SYS_XQPOLYADD'
 2123  'SYS_XQPOLYCEL'
 2124  'SYS_XQPOLYCSTBL'
 2125  'SYS_XQPOLYCST'
 2126  'SYS_XQPOLYDIV'
 2127  'SYS_XQPOLYFLR'
 2128  'SYS_XQPOLYMOD'
 2129  'SYS_XQPOLYMUL'
 2130  'SYS_XQPOLYRND'
 2131  'SYS_XQPOLYSQRT'
 2132  'SYS_XQPOLYSUB'
 2133  'SYS_XQPOLYUMUS'
 2134  'SYS_XQPOLYUPLS'
 2135  'SYS_XQPOLYVEQ'
 2136  'SYS_XQPOLYVGE'
 2137  'SYS_XQPOLYVGT'
 2138  'SYS_XQPOLYVLE'
 2139  'SYS_XQPOLYVLT'
 2140  'SYS_XQPOLYVNE'
 2141  'SYS_XQREF2VAL'
 2142  'SYS_XQRENAME'
 2143  'SYS_XQREPLACE'
 2144  'SYS_XQRESVURI'
 2145  'SYS_XQRNDHALF2EVN'
 2146  'SYS_XQRSLVQNM'
 2147  'SYS_XQRYENVPGET'
 2148  'SYS_XQRYVARGET'
 2149  'SYS_XQRYWRP'
 2150  'SYS_XQSEQ2CON4XC'
 2151  'SYS_XQSEQ2CON'
 2152  'SYS_XQSEQDEEPEQ'
 2153  'SYS_XQSEQINSB'
 2154  'SYS_XQSEQRM'
 2155  'SYS_XQSEQRVS'
 2156  'SYS_XQSEQSUB'
 2157  'SYS_XQSEQTYPMATCH'
 2158  'SYS_XQSTARTSWITH'
 2159  'SYS_XQSTATBURI'
 2160  'SYS_XQSTR2CODEP'
 2161  'SYS_XQSTRJOIN'
 2162  'SYS_XQSUBSTRAFT'
 2163  'SYS_XQSUBSTRBEF'
 2164  'SYS_XQTOKENIZE'
 2165  'SYS_XQTREATAS'
 2166  'SYS_XQ_UPKXML2SQL'
 2167  'SYS_XQXFORM'
 2168  'TABLE_LOOKUP_BY_NL'
 2169  'TABLESPACE_NO'
 2170  'TABLE_STATS'
 2171  'TABNO'
 2172  'TANH'
 2173  'TAN'
 2174  'TBLORIDXPARTNUM'
 2175  'TEMP_TABLE'
 2176  'TIMEOUT'
 2177  'TIMES'
 2178  'TIME_ZONE'
 2179  'TIMEZONE_OFFSET'
 2180  'TIV_GB'
 2181  'TIV_SSF'
 2182  'TO_BINARY_DOUBLE'
 2183  'TO_BINARY_FLOAT'
 2184  'TO_BLOB'
 2185  'TO_CLOB'
 2186  'TO_DSINTERVAL'
 2187  'TO_LOB'
 2188  'TO_MULTI_BYTE'
 2189  'TO_NCHAR'
 2190  'TO_NCLOB'
 2191  'TO_NUMBER'
 2192  'TOPLEVEL'
 2193  'TO_SINGLE_BYTE'
 2194  'TO_TIME'
 2195  'TO_TIMESTAMP'
 2196  'TO_TIMESTAMP_TZ'
 2197  'TO_TIME_TZ'
 2198  'TO_YMINTERVAL'
 2199  'TRACING'
 2200  'TRANSFORM_DISTINCT_AGG'
 2201  'TRANSITIONAL'
 2202  'TRANSITION'
 2203  'TRUNC'
 2204  'TX'
 2205  'TZ_OFFSET'
 2206  'UB2'
 2207  'UBA'
 2208  'UID'
 2209  'UNBOUND'
 2210  'UNDROP'
 2211  'UNISTR'
 2212  'UNLOAD'
 2213  'UNNEST_INNERJ_DISTINCT_VIEW'
 2214  'UNNEST'
 2215  'UNNEST_NOSEMIJ_NODISTINCTVIEW'
 2216  'UNNEST_SEMIJ_VIEW'
 2217  'UNPACKED'
 2218  'UNPROTECTED'
 2219  'UNQUIESCE'
 2220  'UNRESTRICTED'
 2221  'UPDATABLE'
 2222  'UPDATEXML'
 2223  'UPD_INDEXES'
 2224  'UPD_JOININDEX'
 2225  'UPPER'
 2226  'USE_ANTI'
 2227  'USE_CONCAT'
 2228  'USE_HASH_AGGREGATION'
 2229  'USE_HASH_GBY_FOR_PUSHDOWN'
 2230  'USE_HASH'
 2231  'USE_INVISIBLE_INDEXES'
 2232  'USE_MERGE_CARTESIAN'
 2233  'USE_MERGE'
 2234  'USE_NL'
 2235  'USE_NL_WITH_INDEX'
 2236  'USE_PRIVATE_OUTLINES'
 2237  'USER_DEFINED'
 2238  'USERENV'
 2239  'USERGROUP'
 2240  'USER_RECYCLEBIN'
 2241  'USE_SEMI'
 2242  'USE_STORED_OUTLINES'
 2243  'USE_TTT_FOR_GSETS'
 2244  'USE_WEAK_NAME_RESL'
 2245  'VALIDATION'
 2246  'VAR_POP'
 2247  'VAR_SAMP'
 2248  'VECTOR_READ'
 2249  'VECTOR_READ_TRACE'
 2250  'VERIFY'
 2251  'VERSIONING'
 2252  'VERSIONS_ENDSCN'
 2253  'VERSIONS_ENDTIME'
 2254  'VERSIONS_OPERATION'
 2255  'VERSIONS_STARTSCN'
 2256  'VERSIONS_STARTTIME'
 2257  'VERSIONS_XID'
 2258  'VOLUME'
 2259  'VSIZE'
 2260  'WALLET'
 2261  'WHITESPACE'
 2262  'WIDTH_BUCKET'
 2263  'WRAPPED'
 2264  'XDB_FASTPATH_INSERT'
 2265  'X_DYN_PRUNE'
 2266  'XID'
 2267  'XML2OBJECT'
 2268  'XMLCDATA'
 2269  'XMLCOMMENT'
 2270  'XMLCONCAT'
 2271  'XMLDIFF'
 2272  'XML_DML_RWT_STMT'
 2273  'XMLEXISTS2'
 2274  'XMLINDEX_REWRITE_IN_SELECT'
 2275  'XMLINDEX_REWRITE'
 2276  'XMLINDEX_SEL_IDX_TBL'
 2277  'XMLISNODE'
 2278  'XMLISVALID'
 2279  'XMLPATCH'
 2280  'XMLQUERYVAL'
 2281  'XMLTRANSFORMBLOB'
 2282  'XMLTRANSFORM'
 2283  'XPATHTABLE'
 2284  'XS_SYS_CONTEXT'

/* Productions */

    0       sql_script
        0      : ((unit_statement | sql_plus_command) SEMICOLON?)* <eof> 
               ;

    1       unit_statement
        1      : transaction_control_statements 
        2      | alter_cluster 
        3      | alter_database 
        4      | alter_function 
        5      | alter_package 
        6      | alter_procedure 
        7      | alter_sequence 
        8      | alter_session 
        9      | alter_trigger 
       10      | alter_type 
       11      | alter_table 
       12      | alter_tablespace 
       13      | alter_index 
       14      | alter_library 
       15      | alter_materialized_view 
       16      | alter_materialized_view_log 
       17      | alter_user 
       18      | alter_view 
       19      | analyze 
       20      | associate_statistics 
       21      | audit_traditional 
       22      | unified_auditing 
       23      | create_function_body 
       24      | create_procedure_body 
       25      | create_package 
       26      | create_package_body 
       27      | create_index 
       28      | create_table 
       29      | create_tablespace 
       30      | create_cluster 
       31      | create_context 
       32      | create_view 
       33      | create_directory 
       34      | create_materialized_view 
       35      | create_materialized_view_log 
       36      | create_user 
       37      | create_sequence 
       38      | create_trigger 
       39      | create_type 
       40      | create_synonym 
       41      | drop_function 
       42      | drop_package 
       43      | drop_procedure 
       44      | drop_sequence 
       45      | drop_trigger 
       46      | drop_type 
       47      | data_manipulation_language_statements 
       48      | truncate_table 
       49      | drop_table 
       50      | drop_view 
       51      | drop_index 
       52      | rename_object 
       53      | comment_on_column 
       54      | comment_on_table 
       55      | anonymous_block 
       56      | grant_statement 
       57      | procedure_call 
               ;

    2       drop_function
       58      : 'DROP' 'FUNCTION' function_name ';' 
               ;

    3       alter_function
       59      : 'ALTER' 'FUNCTION' function_name 'COMPILE' DEBUG? compiler_parameters_clause* (REUSE SETTINGS)? ';' 
               ;

    4       create_function_body
       60      : 'CREATE' (OR REPLACE)? 'FUNCTION' function_name ('(' parameter (',' parameter)* ')')? 'RETURN' type_spec (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC)* ((PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) | (PIPELINED | AGGREGATE) USING implementation_type_name) ';' 
               ;

    5       parallel_enable_clause
       61      : 'PARALLEL_ENABLE' partition_by_clause? 
               ;

    6       partition_by_clause
       62      : '(' 'PARTITION' expression 'BY' (ANY | (HASH | RANGE | LIST) paren_column_list) streaming_clause? ')' 
               ;

    7       result_cache_clause
       63      : 'RESULT_CACHE' relies_on_part? 
               ;

    8       relies_on_part
       64      : 'RELIES_ON' '(' tableview_name (',' tableview_name)* ')' 
               ;

    9       streaming_clause
       65      : (ORDER | CLUSTER) expression 'BY' paren_column_list 
               ;

   10       drop_package
       66      : 'DROP' 'PACKAGE' BODY? (schema_object_name '.')? package_name ';' 
               ;

   11       alter_package
       67      : 'ALTER' 'PACKAGE' package_name 'COMPILE' DEBUG? (PACKAGE | BODY | SPECIFICATION)? compiler_parameters_clause* (REUSE SETTINGS)? ';' 
               ;

   12       create_package
       68      : 'CREATE' (OR REPLACE)? 'PACKAGE' (schema_object_name '.')? package_name invoker_rights_clause? (IS | AS) package_obj_spec* 'END' package_name? ';' 
               ;

   13       create_package_body
       69      : 'CREATE' (OR REPLACE)? 'PACKAGE' 'BODY' (schema_object_name '.')? package_name (IS | AS) package_obj_body* (BEGIN seq_of_statements)? 'END' package_name? ';' 
               ;

   14       package_obj_spec
       70      : pragma_declaration 
       71      | exception_declaration 
       72      | variable_declaration 
       73      | subtype_declaration 
       74      | cursor_declaration 
       75      | type_declaration 
       76      | procedure_spec 
       77      | function_spec 
               ;

   15       procedure_spec
       78      : 'PROCEDURE' identifier ('(' parameter (',' parameter)* ')')? ';' 
               ;

   16       function_spec
       79      : 'FUNCTION' identifier ('(' parameter (',' parameter)* ')')? 'RETURN' type_spec PIPELINED? DETERMINISTIC? RESULT_CACHE? ';' 
               ;

   17       package_obj_body
       80      : exception_declaration 
       81      | subtype_declaration 
       82      | cursor_declaration 
       83      | variable_declaration 
       84      | type_declaration 
       85      | procedure_body 
       86      | function_body 
       87      | procedure_spec 
       88      | function_spec 
               ;

   18       drop_procedure
       89      : 'DROP' 'PROCEDURE' procedure_name ';' 
               ;

   19       alter_procedure
       90      : 'ALTER' 'PROCEDURE' procedure_name 'COMPILE' DEBUG? compiler_parameters_clause* (REUSE SETTINGS)? ';' 
               ;

   20       function_body
       91      : 'FUNCTION' identifier ('(' parameter (',' parameter)* ')')? 'RETURN' type_spec (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC)* ((PIPELINED? DETERMINISTIC? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) | (PIPELINED | AGGREGATE) USING implementation_type_name) ';' 
               ;

   21       procedure_body
       92      : 'PROCEDURE' identifier ('(' parameter (',' parameter)* ')')? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec | EXTERNAL) ';' 
               ;

   22       create_procedure_body
       93      : 'CREATE' (OR REPLACE)? 'PROCEDURE' procedure_name ('(' parameter (',' parameter)* ')')? invoker_rights_clause? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec | EXTERNAL) ';' 
               ;

   23       drop_trigger
       94      : 'DROP' 'TRIGGER' trigger_name ';' 
               ;

   24       alter_trigger
       95      : 'ALTER' 'TRIGGER' 'alter_trigger_nametrigger_name' ((ENABLE | DISABLE) | RENAME TO rename_trigger_nametrigger_name | COMPILE DEBUG? compiler_parameters_clause* (REUSE SETTINGS)?) ';' 
               ;

   25       create_trigger
       96      : 'CREATE' (OR REPLACE)? 'TRIGGER' trigger_name (simple_dml_trigger | compound_dml_trigger | non_dml_trigger) trigger_follows_clause? (ENABLE | DISABLE)? trigger_when_clause? trigger_body ';' 
               ;

   26       trigger_follows_clause
       97      : 'FOLLOWS' trigger_name (',' trigger_name)* 
               ;

   27       trigger_when_clause
       98      : 'WHEN' '(' condition ')' 
               ;

   28       simple_dml_trigger
       99      : (BEFORE | AFTER | INSTEAD OF) dml_event_clause referencing_clause? for_each_row? 
               ;

   29       for_each_row
      100      : 'FOR' 'EACH' 'ROW' 
               ;

   30       compound_dml_trigger
      101      : 'FOR' dml_event_clause referencing_clause? 
               ;

   31       non_dml_trigger
      102      : (BEFORE | AFTER) non_dml_event (OR non_dml_event)* 'ON' (DATABASE | (schema_name '.')? SCHEMA) 
               ;

   32       trigger_body
      103      : 'COMPOUND' 'TRIGGER' 
      104      | 'CALL' identifier 
      105      | trigger_block 
               ;

   33       routine_clause
      106      : routine_name function_argument? 
               ;

   34       compound_trigger_block
      107      : 'COMPOUND' 'TRIGGER' seq_of_declare_specs? timing_point_section+ 'END' trigger_name 
               ;

   35       timing_point_section
      108      : 'bkBEFORE' 'STATEMENT' 'IS' trigger_block 'BEFORE' 'STATEMENT' ';' 
      109      | 'bkBEFORE' 'EACH' 'ROW' 'IS' trigger_block 'BEFORE' 'EACH' 'ROW' ';' 
      110      | 'akAFTER' 'STATEMENT' 'IS' trigger_block 'AFTER' 'STATEMENT' ';' 
      111      | 'akAFTER' 'EACH' 'ROW' 'IS' trigger_block 'AFTER' 'EACH' 'ROW' ';' 
               ;

   36       non_dml_event
      112      : 'ALTER' 
      113      | 'ANALYZE' 
      114      | 'ASSOCIATE' 'STATISTICS' 
      115      | 'AUDIT' 
      116      | 'COMMENT' 
      117      | 'CREATE' 
      118      | 'DISASSOCIATE' 'STATISTICS' 
      119      | 'DROP' 
      120      | 'GRANT' 
      121      | 'NOAUDIT' 
      122      | 'RENAME' 
      123      | 'REVOKE' 
      124      | 'TRUNCATE' 
      125      | 'DDL' 
      126      | 'STARTUP' 
      127      | 'SHUTDOWN' 
      128      | 'DB_ROLE_CHANGE' 
      129      | 'LOGON' 
      130      | 'LOGOFF' 
      131      | 'SERVERERROR' 
      132      | 'SUSPEND' 
      133      | 'DATABASE' 
      134      | 'SCHEMA' 
      135      | 'FOLLOWS' 
               ;

   37       dml_event_clause
      136      : dml_event_element (OR dml_event_element)* 'ON' dml_event_nested_clause? tableview_name 
               ;

   38       dml_event_element
      137      : (DELETE | INSERT | UPDATE) (OF column_list)? 
               ;

   39       dml_event_nested_clause
      138      : 'NESTED' 'TABLE' tableview_name 'OF' 
               ;

   40       referencing_clause
      139      : 'REFERENCING' referencing_element+ 
               ;

   41       referencing_element
      140      : (NEW | OLD | PARENT) column_alias 
               ;

   42       drop_type
      141      : 'DROP' 'TYPE' BODY? type_name (FORCE | VALIDATE)? ';' 
               ;

   43       alter_type
      142      : 'ALTER' 'TYPE' type_name (compile_type_clause | replace_type_clause | alter_method_spec | alter_collection_clauses | modifier_clause | overriding_subprogram_spec) dependent_handling_clause? ';' 
               ;

   44       compile_type_clause
      143      : 'COMPILE' DEBUG? (SPECIFICATION | BODY)? compiler_parameters_clause* (REUSE SETTINGS)? 
               ;

   45       replace_type_clause
      144      : 'REPLACE' invoker_rights_clause? 'AS' 'OBJECT' '(' object_member_spec (',' object_member_spec)* ')' 
               ;

   46       alter_method_spec
      145      : alter_method_element (',' alter_method_element)* 
               ;

   47       alter_method_element
      146      : (ADD | DROP) (map_order_function_spec | subprogram_spec) 
               ;

   48       alter_attribute_definition
      147      : (ADD | MODIFY | DROP) 'ATTRIBUTE' (attribute_definition | '(' attribute_definition (',' attribute_definition)* ')') 
               ;

   49       attribute_definition
      148      : attribute_name type_spec? 
               ;

   50       alter_collection_clauses
      149      : 'MODIFY' (LIMIT expression | ELEMENT TYPE type_spec) 
               ;

   51       dependent_handling_clause
      150      : 'INVALIDATE' 
      151      | 'CASCADE' (CONVERT TO SUBSTITUTABLE | NOT? INCLUDING TABLE DATA)? dependent_exceptions_part? 
               ;

   52       dependent_exceptions_part
      152      : FORCE? 'EXCEPTIONS' 'INTO' tableview_name 
               ;

   53       create_type
      153      : 'CREATE' (OR REPLACE)? 'TYPE' (type_definition | type_body) ';' 
               ;

   54       type_definition
      154      : type_name (OID CHAR_STRING)? FORCE? object_type_def? 
               ;

   55       object_type_def
      155      : invoker_rights_clause? (object_as_part | object_under_part) sqlj_object_type? ('(' object_member_spec (',' object_member_spec)* ')')? modifier_clause* 
               ;

   56       object_as_part
      156      : (IS | AS) (OBJECT | varray_type_def | nested_table_type_def) 
               ;

   57       object_under_part
      157      : 'UNDER' type_spec 
               ;

   58       nested_table_type_def
      158      : 'TABLE' 'OF' type_spec (NOT NULL_)? 
               ;

   59       sqlj_object_type
      159      : 'EXTERNAL' 'NAME' expression 'LANGUAGE' 'JAVA' 'USING' (SQLDATA | CUSTOMDATUM | ORADATA) 
               ;

   60       type_body
      160      : 'BODY' type_name (IS | AS) type_body_elements+ 'END' 
               ;

   61       type_body_elements
      161      : map_order_func_declaration 
      162      | subprog_decl_in_type 
      163      | overriding_subprogram_spec 
               ;

   62       map_order_func_declaration
      164      : (MAP | ORDER) 'MEMBER' func_decl_in_type 
               ;

   63       subprog_decl_in_type
      165      : (MEMBER | STATIC) (proc_decl_in_type | func_decl_in_type | constructor_declaration) 
               ;

   64       proc_decl_in_type
      166      : 'PROCEDURE' procedure_name '(' type_elements_parameter (',' type_elements_parameter)* ')' (IS | AS) (call_spec | DECLARE? seq_of_declare_specs? body ';') 
               ;

   65       func_decl_in_type
      167      : 'FUNCTION' function_name ('(' type_elements_parameter (',' type_elements_parameter)* ')')? 'RETURN' type_spec (IS | AS) (call_spec | DECLARE? seq_of_declare_specs? body ';') 
               ;

   66       constructor_declaration
      168      : FINAL? INSTANTIABLE? 'CONSTRUCTOR' 'FUNCTION' type_spec ('(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')')? 'RETURN' 'SELF' 'AS' 'RESULT' (IS | AS) (call_spec | DECLARE? seq_of_declare_specs? body ';') 
               ;

   67       modifier_clause
      169      : NOT? (INSTANTIABLE | FINAL | OVERRIDING) 
               ;

   68       object_member_spec
      170      : identifier type_spec sqlj_object_type_attr? 
      171      | element_spec 
               ;

   69       sqlj_object_type_attr
      172      : 'EXTERNAL' 'NAME' expression 
               ;

   70       element_spec
      173      : modifier_clause? element_spec_options+ (',' pragma_clause)? 
               ;

   71       element_spec_options
      174      : subprogram_spec 
      175      | constructor_spec 
      176      | map_order_function_spec 
               ;

   72       subprogram_spec
      177      : (MEMBER | STATIC) (type_procedure_spec | type_function_spec) 
               ;

   73       overriding_subprogram_spec
      178      : 'OVERRIDING' 'MEMBER' overriding_function_spec 
               ;

   74       overriding_function_spec
      179      : 'FUNCTION' function_name ('(' type_elements_parameter (',' type_elements_parameter)* ')')? 'RETURN' (type_spec | SELF AS RESULT) (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body))? ';'? 
               ;

   75       type_procedure_spec
      180      : 'PROCEDURE' procedure_name '(' type_elements_parameter (',' type_elements_parameter)* ')' ((IS | AS) call_spec)? 
               ;

   76       type_function_spec
      181      : 'FUNCTION' function_name ('(' type_elements_parameter (',' type_elements_parameter)* ')')? 'RETURN' (type_spec | SELF AS RESULT) ((IS | AS) call_spec | EXTERNAL VARIABLE? NAME expression)? 
               ;

   77       constructor_spec
      182      : FINAL? INSTANTIABLE? 'CONSTRUCTOR' 'FUNCTION' type_spec ('(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')')? 'RETURN' 'SELF' 'AS' 'RESULT' ((IS | AS) call_spec)? 
               ;

   78       map_order_function_spec
      183      : (MAP | ORDER) 'MEMBER' type_function_spec 
               ;

   79       pragma_clause
      184      : 'PRAGMA' 'RESTRICT_REFERENCES' '(' pragma_elements (',' pragma_elements)* ')' 
               ;

   80       pragma_elements
      185      : identifier 
      186      | 'DEFAULT' 
               ;

   81       type_elements_parameter
      187      : parameter_name type_spec 
               ;

   82       drop_sequence
      188      : 'DROP' 'SEQUENCE' sequence_name ';' 
               ;

   83       alter_sequence
      189      : 'ALTER' 'SEQUENCE' sequence_name sequence_spec+ ';' 
               ;

   84       alter_session
      190      : 'ALTER' 'SESSION' (ADVISE (COMMIT | ROLLBACK | NOTHING) | CLOSE DATABASE LINK parameter_name | enable_or_disable COMMIT IN PROCEDURE | enable_or_disable GUARD | (enable_or_disable | FORCE) PARALLEL (DML | DDL | QUERY) (PARALLEL (literal | parameter_name))? | SET alter_session_set_clause) 
               ;

   85       alter_session_set_clause
      191      : parameter_name '=' parameter_value 
               ;

   86       create_sequence
      192      : 'CREATE' 'SEQUENCE' sequence_name (sequence_start_clause | sequence_spec)* ';' 
               ;

   87       sequence_spec
      193      : 'INCREMENT' 'BY' 'UNSIGNED_INTEGER' 
      194      | 'MAXVALUE' 'UNSIGNED_INTEGER' 
      195      | 'NOMAXVALUE' 
      196      | 'MINVALUE' 'UNSIGNED_INTEGER' 
      197      | 'NOMINVALUE' 
      198      | 'CYCLE' 
      199      | 'NOCYCLE' 
      200      | 'CACHE' 'UNSIGNED_INTEGER' 
      201      | 'NOCACHE' 
      202      | 'ORDER' 
      203      | 'NOORDER' 
               ;

   88       sequence_start_clause
      204      : 'START' 'WITH' 'UNSIGNED_INTEGER' 
               ;

   89       create_index
      205      : 'CREATE' (UNIQUE | BITMAP)? 'INDEX' index_name 'ON' (cluster_index_clause | table_index_clause | bitmap_join_index_clause) UNUSABLE? ';' 
               ;

   90       cluster_index_clause
      206      : 'CLUSTER' cluster_name index_attributes? 
               ;

   91       cluster_name
      207      : (id_expression '.')? id_expression 
               ;

   92       table_index_clause
      208      : tableview_name table_alias? '(' index_expr (ASC | DESC)? (',' index_expr (ASC | DESC)?)* ')' index_properties? 
               ;

   93       bitmap_join_index_clause
      209      : tableview_name '(' (tableview_name | table_alias)? column_name (ASC | DESC)? (',' (tableview_name | table_alias)? column_name (ASC | DESC)?)* ')' 'FROM' tableview_name table_alias (',' tableview_name table_alias)* where_clause local_partitioned_index? index_attributes? 
               ;

   94       index_expr
      210      : column_name 
      211      | expression 
               ;

   95       index_properties
      212      : (global_partitioned_index | local_partitioned_index | index_attributes)+ 
      213      | 'INDEXTYPE' 'IS' (domain_index_clause | xmlindex_clause) 
               ;

   96       domain_index_clause
      214      : indextype local_domain_index_clause? parallel_clause? (PARAMETERS '(' odci_parameters ')')? 
               ;

   97       local_domain_index_clause
      215      : 'LOCAL' ('(' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')? (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* ')')? 
               ;

   98       xmlindex_clause
      216      : (XDB '.')? 'XMLINDEX' local_xmlindex_clause? parallel_clause? 
               ;

   99       local_xmlindex_clause
      217      : 'LOCAL' ('(' PARTITION partition_name (',' PARTITION partition_name)* ')')? 
               ;

  100       global_partitioned_index
      218      : 'GLOBAL' 'PARTITION' 'BY' (RANGE '(' column_name (',' column_name)* ')' '(' index_partitioning_clause ')' | HASH '(' column_name (',' column_name)* ')' (individual_hash_partitions | hash_partitions_by_quantity)) 
               ;

  101       index_partitioning_clause
      219      : 'PARTITION' partition_name? 'VALUES' 'LESS' 'THAN' '(' literal (',' literal)* ')' segment_attributes_clause? 
               ;

  102       local_partitioned_index
      220      : 'LOCAL' (on_range_partitioned_table | on_list_partitioned_table | on_hash_partitioned_table | on_comp_partitioned_table)? 
               ;

  103       on_range_partitioned_table
      221      : '(' partitioned_table (',' partitioned_table)* ')' 
               ;

  104       on_list_partitioned_table
      222      : '(' partitioned_table (',' partitioned_table)* ')' 
               ;

  105       partitioned_table
      223      : 'PARTITION' partition_name? (segment_attributes_clause | key_compression)* UNUSABLE? 
               ;

  106       on_hash_partitioned_table
      224      : 'STORE' 'IN' '(' tablespace (',' tablespace)* ')' 
      225      | '(' on_hash_partitioned_clause (',' on_hash_partitioned_clause)* ')' 
               ;

  107       on_hash_partitioned_clause
      226      : 'PARTITION' partition_name? (TABLESPACE tablespace)? key_compression? UNUSABLE? 
               ;

  108       on_comp_partitioned_table
      227      : (STORE IN '(' tablespace (',' tablespace)* ')')? '(' on_comp_partitioned_clause (',' on_comp_partitioned_clause)* ')' 
               ;

  109       on_comp_partitioned_clause
      228      : 'PARTITION' partition_name? (segment_attributes_clause | key_compression)* 'UNUSABLE' index_subpartition_clause? 
               ;

  110       index_subpartition_clause
      229      : 'STORE' 'IN' '(' tablespace (',' tablespace)* ')' 
      230      | '(' index_subpartition_subclause (',' index_subpartition_subclause)* ')' 
               ;

  111       index_subpartition_subclause
      231      : 'SUBPARTITION' subpartition_name? (TABLESPACE tablespace)? key_compression? UNUSABLE? 
               ;

  112       odci_parameters
      232      : 'CHAR_STRING' 
               ;

  113       indextype
      233      : (id_expression '.')? id_expression 
               ;

  114       alter_index
      234      : 'ALTER' 'INDEX' index_name (alter_index_ops_set1 | alter_index_ops_set2) ';' 
               ;

  115       alter_index_ops_set1
      235      : (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause)+ 
               ;

  116       alter_index_ops_set2
      236      : rebuild_clause 
      237      | 'PARAMETERS' '(' odci_parameters ')' 
      238      | 'COMPILE' 
      239      | enable_or_disable 
      240      | 'UNUSABLE' 
      241      | visible_or_invisible 
      242      | 'RENAME' 'TO' new_index_name 
      243      | 'COALESCE' 
      244      | monitoring_nomonitoring 'USAGE' 
      245      | 'UPDATE' 'BLOCK' 'REFERENCES' 
      246      | alter_index_partitioning 
               ;

  117       visible_or_invisible
      247      : 'VISIBLE' 
      248      | 'INVISIBLE' 
               ;

  118       monitoring_nomonitoring
      249      : 'MONITORING' 
      250      | 'NOMONITORING' 
               ;

  119       rebuild_clause
      251      : 'REBUILD' (PARTITION partition_name | SUBPARTITION subpartition_name | REVERSE | NOREVERSE)? (parallel_clause | TABLESPACE tablespace | PARAMETERS '(' odci_parameters ')' | ONLINE | physical_attributes_clause | key_compression | logging_clause)* 
               ;

  120       alter_index_partitioning
      252      : modify_index_default_attrs 
      253      | add_hash_index_partition 
      254      | modify_index_partition 
      255      | rename_index_partition 
      256      | drop_index_partition 
      257      | split_index_partition 
      258      | coalesce_index_partition 
      259      | modify_index_subpartition 
               ;

  121       modify_index_default_attrs
      260      : 'MODIFY' 'DEFAULT' 'ATTRIBUTES' (FOR PARTITION partition_name)? (physical_attributes_clause | TABLESPACE (tablespace | DEFAULT) | logging_clause) 
               ;

  122       add_hash_index_partition
      261      : 'ADD' 'PARTITION' partition_name? (TABLESPACE tablespace)? key_compression? parallel_clause? 
               ;

  123       coalesce_index_partition
      262      : 'COALESCE' 'PARTITION' parallel_clause? 
               ;

  124       modify_index_partition
      263      : 'MODIFY' 'PARTITION' partition_name (modify_index_partitions_ops+ | PARAMETERS '(' odci_parameters ')' | COALESCE | UPDATE BLOCK REFERENCES | UNUSABLE) 
               ;

  125       modify_index_partitions_ops
      264      : deallocate_unused_clause 
      265      | allocate_extent_clause 
      266      | physical_attributes_clause 
      267      | logging_clause 
      268      | key_compression 
               ;

  126       rename_index_partition
      269      : 'RENAME' (PARTITION partition_name | SUBPARTITION subpartition_name) 'TO' new_partition_name 
               ;

  127       drop_index_partition
      270      : 'DROP' 'PARTITION' partition_name 
               ;

  128       split_index_partition
      271      : 'SPLIT' 'PARTITION' partition_name_old 'AT' '(' literal (',' literal)* ')' (INTO '(' index_partition_description ',' index_partition_description ')')? parallel_clause? 
               ;

  129       index_partition_description
      272      : 'PARTITION' (partition_name ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')') UNUSABLE?)? 
               ;

  130       modify_index_subpartition
      273      : 'MODIFY' 'SUBPARTITION' subpartition_name (UNUSABLE | allocate_extent_clause | deallocate_unused_clause) 
               ;

  131       partition_name_old
      274      : partition_name 
               ;

  132       new_partition_name
      275      : partition_name 
               ;

  133       new_index_name
      276      : index_name 
               ;

  134       create_user
      277      : 'CREATE' 'USER' user_object_name (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause)+ ';' 
               ;

  135       alter_user
      278      : 'ALTER' 'USER' user_object_name (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause)+ ';' 
      279      | user_object_name (',' user_object_name)* proxy_clause ';' 
               ;

  136       alter_identified_by
      280      : identified_by (REPLACE id_expression)? 
               ;

  137       identified_by
      281      : 'IDENTIFIED' 'BY' id_expression 
               ;

  138       identified_other_clause
      282      : 'IDENTIFIED' (EXTERNALLY | GLOBALLY) (AS quoted_string)? 
               ;

  139       user_tablespace_clause
      283      : (DEFAULT | TEMPORARY) 'TABLESPACE' id_expression 
               ;

  140       quota_clause
      284      : 'QUOTA' (size_clause | UNLIMITED) 'ON' id_expression 
               ;

  141       profile_clause
      285      : 'PROFILE' id_expression 
               ;

  142       role_clause
      286      : role_name (',' role_name)* 
      287      | 'ALL' (EXCEPT role_name (',' role_name)*)* 
               ;

  143       user_default_role_clause
      288      : 'DEFAULT' 'ROLE' (NONE | role_clause) 
               ;

  144       password_expire_clause
      289      : 'PASSWORD' 'EXPIRE' 
               ;

  145       user_lock_clause
      290      : 'ACCOUNT' (LOCK | UNLOCK) 
               ;

  146       user_editions_clause
      291      : 'ENABLE' 'EDITIONS' 
               ;

  147       alter_user_editions_clause
      292      : user_editions_clause (FOR regular_id (',' regular_id)*)? FORCE? 
               ;

  148       proxy_clause
      293      : 'REVOKE' 'CONNECT' 'THROUGH' (ENTERPRISE USERS | user_object_name) 
      294      | 'GRANT' 'CONNECT' 'THROUGH' (ENTERPRISE USERS | user_object_name (WITH (NO ROLES | ROLE role_clause))? (AUTHENTICATION REQUIRED)? (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME))?) 
               ;

  149       container_names
      295      : 'LEFT_PAREN' id_expression (',' id_expression)* 'RIGHT_PAREN' 
               ;

  150       set_container_data
      296      : 'SET' 'CONTAINER_DATA' 'EQUALS_OP' (ALL | DEFAULT | container_names) 
               ;

  151       add_rem_container_data
      297      : (ADD | REMOVE) 'CONTAINER_DATA' 'EQUALS_OP' container_names 
               ;

  152       container_data_clause
      298      : set_container_data 
      299      | add_rem_container_data (FOR container_tableview_name)? 
               ;

  153       analyze
      300      : (ANALYZE (TABLE tableview_name | INDEX index_name) partition_extention_clause? | ANALYZE CLUSTER cluster_name) (validation_clauses | LIST CHAINED ROWS into_clause1? | DELETE SYSTEM? STATISTICS) ';' 
               ;

  154       partition_extention_clause
      301      : 'PARTITION' ('(' partition_name ')' | FOR '(' partition_key_value (',' partition_key_value)* ')') 
      302      | 'SUBPARTITION' ('(' subpartition_name ')' | FOR '(' subpartition_key_value (',' subpartition_key_value)* ')') 
               ;

  155       validation_clauses
      303      : 'VALIDATE' 'REF' 'UPDATE' (SET DANGLING TO NULL_)? 
      304      | 'VALIDATE' 'STRUCTURE' (CASCADE FAST | CASCADE online_or_offline? into_clause? | CASCADE)? online_or_offline? into_clause? 
               ;

  156       online_or_offline
      305      : 'OFFLINE' 
      306      | 'ONLINE' 
               ;

  157       into_clause1
      307      : 'INTO' tableview_name? 
               ;

  158       partition_key_value
      308      : literal 
               ;

  159       subpartition_key_value
      309      : literal 
               ;

  160       associate_statistics
      310      : 'ASSOCIATE' 'STATISTICS' 'WITH' (column_association | function_association) storage_table_clause? ';' 
               ;

  161       column_association
      311      : 'COLUMNS' tableview_name '.' column_name (',' tableview_name '.' column_name)* using_statistics_type 
               ;

  162       function_association
      312      : (FUNCTIONS function_name (',' function_name)* | PACKAGES package_name (',' package_name)* | TYPES type_name (',' type_name)* | INDEXES index_name (',' index_name)* | INDEXTYPES indextype_name (',' indextype_name)*) (using_statistics_type | default_cost_clause (',' default_selectivity_clause)? | default_selectivity_clause (',' default_cost_clause)?) 
               ;

  163       indextype_name
      313      : id_expression 
               ;

  164       using_statistics_type
      314      : 'USING' (statistics_type_name | NULL_) 
               ;

  165       statistics_type_name
      315      : regular_id 
               ;

  166       default_cost_clause
      316      : 'DEFAULT' 'COST' '(' cpu_cost ',' io_cost ',' network_cost ')' 
               ;

  167       cpu_cost
      317      : 'UNSIGNED_INTEGER' 
               ;

  168       io_cost
      318      : 'UNSIGNED_INTEGER' 
               ;

  169       network_cost
      319      : 'UNSIGNED_INTEGER' 
               ;

  170       default_selectivity_clause
      320      : 'DEFAULT' 'SELECTIVITY' default_selectivity 
               ;

  171       default_selectivity
      321      : 'UNSIGNED_INTEGER' 
               ;

  172       storage_table_clause
      322      : 'WITH' (SYSTEM | USER) 'MANAGED' 'STORAGE' 'TABLES' 
               ;

  173       unified_auditing
      323      : {self_isVersion12}? 'AUDIT' (POLICY policy_name ((BY | EXCEPT) audit_user (',' audit_user)*)? (WHENEVER NOT? SUCCESSFUL)? | CONTEXT NAMESPACE oracle_namespace ATTRIBUTES attribute_name (',' attribute_name)* (BY audit_user (',' audit_user)*)?) ';' 
               ;

  174       policy_name
      324      : identifier 
               ;

  175       audit_traditional
      325      : 'AUDIT' (audit_operation_clause (auditing_by_clause | IN SESSION CURRENT)? | audit_schema_object_clause | NETWORK | audit_direct_path) (BY (SESSION | ACCESS))? (WHENEVER NOT? SUCCESSFUL)? audit_container_clause? ';' 
               ;

  176       audit_direct_path
      326      : {self_isVersion12}? 'DIRECT_PATH' auditing_by_clause 
               ;

  177       audit_container_clause
      327      : {self_isVersion12}? (CONTAINER EQUALS_OP (CURRENT | ALL)) 
               ;

  178       audit_operation_clause
      328      : ((sql_statement_shortcut | ALL STATEMENTS?) (',' (sql_statement_shortcut | ALL STATEMENTS?))* | (system_privilege | ALL PRIVILEGES) (',' (system_privilege | ALL PRIVILEGES))*) 
               ;

  179       auditing_by_clause
      329      : 'BY' audit_user (',' audit_user)* 
               ;

  180       audit_user
      330      : regular_id 
               ;

  181       audit_schema_object_clause
      331      : (sql_operation (',' sql_operation)* | ALL) auditing_on_clause 
               ;

  182       sql_operation
      332      : 'ALTER' 
      333      | 'AUDIT' 
      334      | 'COMMENT' 
      335      | 'DELETE' 
      336      | 'EXECUTE' 
      337      | 'FLASHBACK' 
      338      | 'GRANT' 
      339      | 'INDEX' 
      340      | 'INSERT' 
      341      | 'LOCK' 
      342      | 'READ' 
      343      | 'RENAME' 
      344      | 'SELECT' 
      345      | 'UPDATE' 
               ;

  183       auditing_on_clause
      346      : 'ON' (object_name | DIRECTORY regular_id | MINING MODEL model_name | {self_isVersion12}? SQL TRANSLATION PROFILE profile_name | DEFAULT) 
               ;

  184       model_name
      347      : (id_expression '.')? id_expression 
               ;

  185       object_name
      348      : (id_expression '.')? id_expression 
               ;

  186       profile_name
      349      : (id_expression '.')? id_expression 
               ;

  187       sql_statement_shortcut
      350      : 'ALTER' 'SYSTEM' 
      351      | 'CLUSTER' 
      352      | 'CONTEXT' 
      353      | 'DATABASE' 'LINK' 
      354      | 'DIMENSION' 
      355      | 'DIRECTORY' 
      356      | 'INDEX' 
      357      | 'MATERIALIZED' 'VIEW' 
      358      | 'NOT' 'EXISTS' 
      359      | 'OUTLINE' 
      360      | {self_isVersion12}? 'PLUGGABLE' 'DATABASE' 
      361      | 'PROCEDURE' 
      362      | 'PROFILE' 
      363      | 'PUBLIC' 'DATABASE' 'LINK' 
      364      | 'PUBLIC' 'SYNONYM' 
      365      | 'ROLE' 
      366      | 'ROLLBACK' 'SEGMENT' 
      367      | 'SEQUENCE' 
      368      | 'SESSION' 
      369      | 'SYNONYM' 
      370      | 'SYSTEM' 'AUDIT' 
      371      | 'SYSTEM' 'GRANT' 
      372      | 'TABLE' 
      373      | 'TABLESPACE' 
      374      | 'TRIGGER' 
      375      | 'TYPE' 
      376      | 'USER' 
      377      | 'VIEW' 
      378      | 'ALTER' 'SEQUENCE' 
      379      | 'ALTER' 'TABLE' 
      380      | 'COMMENT' 'TABLE' 
      381      | 'DELETE' 'TABLE' 
      382      | 'EXECUTE' 'PROCEDURE' 
      383      | 'GRANT' 'DIRECTORY' 
      384      | 'GRANT' 'PROCEDURE' 
      385      | 'GRANT' 'SEQUENCE' 
      386      | 'GRANT' 'TABLE' 
      387      | 'GRANT' 'TYPE' 
      388      | 'INSERT' 'TABLE' 
      389      | 'LOCK' 'TABLE' 
      390      | 'SELECT' 'SEQUENCE' 
      391      | 'SELECT' 'TABLE' 
      392      | 'UPDATE' 'TABLE' 
               ;

  188       drop_index
      393      : 'DROP' 'INDEX' index_name ';' 
               ;

  189       rename_object
      394      : 'RENAME' object_name 'TO' object_name ';' 
               ;

  190       grant_statement
      395      : 'GRANT' (','? (role_name | system_privilege | object_privilege paren_column_list?))+ (ON grant_object_name)? 'TO' (grantee_name | PUBLIC) (',' (grantee_name | PUBLIC))* (WITH (ADMIN | DELEGATE) OPTION)? (WITH HIERARCHY OPTION)? (WITH GRANT OPTION)? container_clause? ';' 
               ;

  191       container_clause
      396      : 'CONTAINER' 'EQUALS_OP' (CURRENT | ALL) 
               ;

  192       create_directory
      397      : 'CREATE' (OR REPLACE)? 'DIRECTORY' directory_name 'AS' directory_path ';' 
               ;

  193       directory_name
      398      : regular_id 
               ;

  194       directory_path
      399      : 'CHAR_STRING' 
               ;

  195       alter_library
      400      : 'ALTER' 'LIBRARY' library_name (COMPILE library_debug? compiler_parameters_clause* (REUSE SETTINGS)? | library_editionable) ';' 
               ;

  196       library_editionable
      401      : {self_isVersion12}? (EDITIONABLE | NONEDITIONABLE) 
               ;

  197       library_debug
      402      : {self_isVersion12}? 'DEBUG' 
               ;

  198       compiler_parameters_clause
      403      : parameter_name 'EQUALS_OP' parameter_value 
               ;

  199       parameter_value
      404      : regular_id 
               ;

  200       library_name
      405      : (regular_id '.')? regular_id 
               ;

  201       alter_view
      406      : 'ALTER' 'VIEW' tableview_name (ADD out_of_line_constraint | MODIFY CONSTRAINT constraint_name (RELY | NORELY) | DROP (CONSTRAINT constraint_name | PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')') | COMPILE | READ (ONLY | WRITE) | alter_view_editionable?) ';' 
               ;

  202       alter_view_editionable
      407      : {self_isVersion12}? (EDITIONABLE | NONEDITIONABLE) 
               ;

  203       create_view
      408      : 'CREATE' (OR REPLACE)? (OR? FORCE)? EDITIONABLE? EDITIONING? 'VIEW' tableview_name view_options? 'AS' select_only_statement subquery_restriction_clause? 
               ;

  204       view_options
      409      : view_alias_constraint 
      410      | object_view_clause 
               ;

  205       view_alias_constraint
      411      : '(' (','? (table_alias inline_constraint* | out_of_line_constraint))+ ')' 
               ;

  206       object_view_clause
      412      : 'OF' type_name (WITH OBJECT (IDENTIFIER | ID | OID) (DEFAULT | '(' REGULAR_ID (',' REGULAR_ID)* ')') | UNDER tableview_name) ('(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')')* 
               ;

  207       inline_constraint
      413      : (CONSTRAINT constraint_name)? (NOT? NULL_ | UNIQUE | PRIMARY KEY | references_clause | check_constraint) constraint_state? 
               ;

  208       inline_ref_constraint
      414      : 'SCOPE' 'IS' tableview_name 
      415      | 'WITH' 'ROWID' 
      416      | (CONSTRAINT constraint_name)? references_clause constraint_state? 
               ;

  209       out_of_line_ref_constraint
      417      : 'SCOPE' 'FOR' '(' 'ref_col_or_attrregular_id' ')' 'IS' tableview_name 
      418      | 'REF' '(' 'ref_col_or_attrregular_id' ')' 'WITH' 'ROWID' 
      419      | (CONSTRAINT constraint_name)? 'FOREIGN' 'KEY' '(' (','? ref_col_or_attrregular_id)+ ')' references_clause constraint_state? 
               ;

  210       out_of_line_constraint
      420      : ((CONSTRAINT constraint_name)? (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY '(' column_name (',' column_name)* ')' | foreign_key_clause | CHECK '(' expression ')')) constraint_state? 
               ;

  211       constraint_state
      421      : (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause)+ 
               ;

  212       alter_tablespace
      422      : 'ALTER' 'TABLESPACE' tablespace (DEFAULT table_compression? storage_clause? | MINIMUM EXTENT size_clause | RESIZE size_clause | COALESCE | SHRINK SPACE_KEYWORD (KEEP size_clause)? | RENAME TO new_tablespace_name | begin_or_end BACKUP | datafile_tempfile_clauses | tablespace_logging_clauses | tablespace_group_clause | tablespace_state_clauses | autoextend_clause | flashback_mode_clause | tablespace_retention_clause) ';' 
               ;

  213       datafile_tempfile_clauses
      423      : 'ADD' (datafile_specification | tempfile_specification) 
      424      | 'DROP' (DATAFILE | TEMPFILE) (filename | UNSIGNED_INTEGER) (KEEP size_clause)? 
      425      | 'SHRINK' 'TEMPFILE' (filename | UNSIGNED_INTEGER) (KEEP size_clause)? 
      426      | 'RENAME' 'DATAFILE' filename (',' filename)* 'TO' filename (',' filename)* 
      427      | (DATAFILE | TEMPFILE) online_or_offline 
               ;

  214       tablespace_logging_clauses
      428      : logging_clause 
      429      | NO? 'FORCE' 'LOGGING' 
               ;

  215       tablespace_group_clause
      430      : 'TABLESPACE' 'GROUP' (tablespace_group_name | CHAR_STRING) 
               ;

  216       tablespace_group_name
      431      : regular_id 
               ;

  217       tablespace_state_clauses
      432      : 'ONLINE' 
      433      | 'OFFLINE' (NORMAL | TEMPORARY | IMMEDIATE)? 
      434      | 'READ' (ONLY | WRITE) 
      435      | 'PERMANENT' 
      436      | 'TEMPORARY' 
               ;

  218       flashback_mode_clause
      437      : 'FLASHBACK' (ON | OFF) 
               ;

  219       new_tablespace_name
      438      : tablespace 
               ;

  220       create_tablespace
      439      : 'CREATE' (BIGFILE | SMALLFILE)? (permanent_tablespace_clause | temporary_tablespace_clause | undo_tablespace_clause) ';' 
               ;

  221       permanent_tablespace_clause
      440      : 'TABLESPACE' id_expression datafile_specification? (MINIMUM EXTENT size_clause | BLOCKSIZE size_clause | logging_clause | FORCE LOGGING | (ONLINE | OFFLINE) | ENCRYPTION tablespace_encryption_spec | DEFAULT | extent_management_clause | segment_management_clause | flashback_mode_clause)* 
               ;

  222       tablespace_encryption_spec
      441      : 'USING' 'encrypt_algorithmCHAR_STRING' 
               ;

  223       logging_clause
      442      : 'LOGGING' 
      443      | 'NOLOGGING' 
      444      | 'FILESYSTEM_LIKE_LOGGING' 
               ;

  224       extent_management_clause
      445      : 'EXTENT' 'MANAGEMENT' 'LOCAL' (AUTOALLOCATE | UNIFORM (SIZE size_clause)?)? 
               ;

  225       segment_management_clause
      446      : 'SEGMENT' 'SPACE_KEYWORD' 'MANAGEMENT' (AUTO | MANUAL) 
               ;

  226       temporary_tablespace_clause
      447      : 'TEMPORARY' 'TABLESPACE' 'tablespace_nameid_expression' tempfile_specification? tablespace_group_clause? extent_management_clause? 
               ;

  227       undo_tablespace_clause
      448      : 'UNDO' 'TABLESPACE' 'tablespace_nameid_expression' datafile_specification? extent_management_clause? tablespace_retention_clause? 
               ;

  228       tablespace_retention_clause
      449      : 'RETENTION' (GUARANTEE | NOGUARANTEE) 
               ;

  229       datafile_specification
      450      : 'DATAFILE' (','? datafile_tempfile_spec) 
               ;

  230       tempfile_specification
      451      : 'TEMPFILE' (','? datafile_tempfile_spec) 
               ;

  231       datafile_tempfile_spec
      452      : CHAR_STRING? (SIZE size_clause)? REUSE? autoextend_clause? 
               ;

  232       redo_log_file_spec
      453      : (DATAFILE CHAR_STRING | '(' (','? CHAR_STRING)+ ')')? (SIZE size_clause)? (BLOCKSIZE size_clause)? REUSE? 
               ;

  233       autoextend_clause
      454      : 'AUTOEXTEND' (OFF | ON (NEXT size_clause)? maxsize_clause?) 
               ;

  234       maxsize_clause
      455      : 'MAXSIZE' (UNLIMITED | size_clause) 
               ;

  235       build_clause
      456      : 'BUILD' (IMMEDIATE | DEFERRED) 
               ;

  236       parallel_clause
      457      : 'NOPARALLEL' 
      458      | 'PARALLEL' parallel_countUNSIGNED_INTEGER? 
               ;

  237       alter_materialized_view
      459      : 'ALTER' 'MATERIALIZED' 'VIEW' tableview_name (physical_attributes_clause | modify_mv_column_clause | table_compression | lob_storage_clause (',' lob_storage_clause)* | modify_lob_storage_clause (',' modify_lob_storage_clause)* | parallel_clause | logging_clause | allocate_extent_clause | deallocate_unused_clause | shrink_clause | cache_or_nocache)? alter_iot_clauses? (USING INDEX physical_attributes_clause)? alter_mv_option1? (enable_or_disable QUERY REWRITE | COMPILE | CONSIDER FRESH)? ';' 
               ;

  238       alter_mv_option1
      460      : alter_mv_refresh 
               ;

  239       alter_mv_refresh
      461      : 'REFRESH' (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS)+ 
               ;

  240       rollback_segment
      462      : regular_id 
               ;

  241       modify_mv_column_clause
      463      : 'MODIFY' '(' column_name (ENCRYPT encryption_spec | DECRYPT)? ')' 
               ;

  242       alter_materialized_view_log
      464      : 'ALTER' 'MATERIALIZED' 'VIEW' 'LOG' FORCE? 'ON' tableview_name (physical_attributes_clause | add_mv_log_column_clause | parallel_clause | logging_clause | allocate_extent_clause | shrink_clause | move_mv_log_clause | cache_or_nocache)? mv_log_augmentation? mv_log_purge_clause? ';' 
               ;

  243       add_mv_log_column_clause
      465      : 'ADD' '(' column_name ')' 
               ;

  244       move_mv_log_clause
      466      : 'MOVE' segment_attributes_clause parallel_clause? 
               ;

  245       mv_log_augmentation
      467      : 'ADD' ((OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE) ('(' column_name (',' column_name)* ')')? | '(' column_name (',' column_name)* ')') new_values_clause? 
               ;

  246       datetime_expr
      468      : expression 
               ;

  247       interval_expr
      469      : expression 
               ;

  248       synchronous_or_asynchronous
      470      : 'SYNCHRONOUS' 
      471      | 'ASYNCHRONOUS' 
               ;

  249       including_or_excluding
      472      : 'INCLUDING' 
      473      | 'EXCLUDING' 
               ;

  250       create_materialized_view_log
      474      : 'CREATE' 'MATERIALIZED' 'VIEW' 'LOG' 'ON' tableview_name (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause | (CACHE | NOCACHE))* parallel_clause? (WITH (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause?)* 
               ;

  251       new_values_clause
      475      : (INCLUDING | EXCLUDING) 'NEW' 'VALUES' 
               ;

  252       mv_log_purge_clause
      476      : 'PURGE' (IMMEDIATE (SYNCHRONOUS | ASYNCHRONOUS)?) 
               ;

  253       create_materialized_view
      477      : 'CREATE' 'MATERIALIZED' 'VIEW' tableview_name (OF type_name)? (ON PREBUILT TABLE ((WITH | WITHOUT) REDUCED PRECISION)? | physical_properties? (CACHE | NOCACHE)? parallel_clause? build_clause?) (USING INDEX (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* | USING NO INDEX)? create_mv_refresh? (FOR UPDATE)? ((DISABLE | ENABLE) QUERY REWRITE)? 'AS' select_only_statement ';' 
               ;

  254       create_mv_refresh
      478      : (NEVER REFRESH | REFRESH ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)+) 
               ;

  255       create_context
      479      : 'CREATE' (OR REPLACE)? 'CONTEXT' oracle_namespace 'USING' (schema_object_name '.')? package_name (INITIALIZED (EXTERNALLY | GLOBALLY) | ACCESSED GLOBALLY)? ';' 
               ;

  256       oracle_namespace
      480      : id_expression 
               ;

  257       create_cluster
      481      : 'CREATE' 'CLUSTER' cluster_name '(' column_name datatype SORT? (',' column_name datatype SORT?)* ')' (physical_attributes_clause | SIZE size_clause | TABLESPACE tablespace | INDEX | (SINGLE TABLE)? HASHKEYS UNSIGNED_INTEGER (HASH IS expression)?)* parallel_clause? (ROWDEPENDENCIES | NOROWDEPENDENCIES)? (CACHE | NOCACHE)? ';' 
               ;

  258       create_table
      482      : 'CREATE' (GLOBAL TEMPORARY)? 'TABLE' tableview_name (relational_table | object_table | xmltype_table) (AS select_only_statement)? ';' 
               ;

  259       xmltype_table
      483      : 'OF' 'XMLTYPE' ('(' object_properties ')')? (XMLTYPE xmltype_storage)? xmlschema_spec? xmltype_virtual_columns? (ON COMMIT (DELETE | PRESERVE) ROWS)? oid_clause? oid_index_clause? physical_properties? column_properties? table_partitioning_clauses? (CACHE | NOCACHE)? (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')')? parallel_clause? (ROWDEPENDENCIES | NOROWDEPENDENCIES)? enable_disable_clause* row_movement_clause? flashback_archive_clause? 
               ;

  260       xmltype_virtual_columns
      484      : 'VIRTUAL' 'COLUMNS' '(' column_name 'AS' '(' expression ')' (',' column_name AS '(' expression ')')* ')' 
               ;

  261       xmltype_column_properties
      485      : 'XMLTYPE' COLUMN? column_name xmltype_storage? xmlschema_spec? 
               ;

  262       xmltype_storage
      486      : 'STORE' 'AS' (OBJECT RELATIONAL | (SECUREFILE | BASICFILE)? (CLOB | BINARY XML) (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')')?) 
      487      | 'STORE' 'VARRAYS' 'AS' (LOBS | TABLES) 
               ;

  263       xmlschema_spec
      488      : (XMLSCHEMA DELIMITED_ID)? 'ELEMENT' 'DELIMITED_ID' (allow_or_disallow NONSCHEMA)? (allow_or_disallow ANYSCHEMA)? 
               ;

  264       object_table
      489      : 'OF' type_name object_table_substitution? ('(' object_properties (',' object_properties)* ')')? (ON COMMIT (DELETE | PRESERVE) ROWS)? oid_clause? oid_index_clause? physical_properties? column_properties? table_partitioning_clauses? (CACHE | NOCACHE)? (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')')? parallel_clause? (ROWDEPENDENCIES | NOROWDEPENDENCIES)? enable_disable_clause* row_movement_clause? flashback_archive_clause? 
               ;

  265       oid_index_clause
      490      : 'OIDINDEX' index_name? '(' (physical_attributes_clause | TABLESPACE tablespace)+ ')' 
               ;

  266       oid_clause
      491      : 'OBJECT' 'IDENTIFIER' 'IS' (SYSTEM GENERATED | PRIMARY KEY) 
               ;

  267       object_properties
      492      : (column_name | attribute_name) (DEFAULT expression)? (inline_constraint (',' inline_constraint)* | inline_ref_constraint)? 
      493      | out_of_line_constraint 
      494      | out_of_line_ref_constraint 
      495      | supplemental_logging_props 
               ;

  268       object_table_substitution
      496      : NOT? 'SUBSTITUTABLE' 'AT' 'ALL' 'LEVELS' 
               ;

  269       relational_table
      497      : ('(' relational_property (',' relational_property)* ')')? (ON COMMIT (DELETE | PRESERVE) ROWS)? physical_properties? column_properties? table_partitioning_clauses? (CACHE | NOCACHE)? (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')')? parallel_clause? (ROWDEPENDENCIES | NOROWDEPENDENCIES)? enable_disable_clause* row_movement_clause? flashback_archive_clause? 
               ;

  270       relational_property
      498      : (column_definition | virtual_column_definition | out_of_line_constraint | out_of_line_ref_constraint | supplemental_logging_props) 
               ;

  271       table_partitioning_clauses
      499      : range_partitions 
      500      | list_partitions 
      501      | hash_partitions 
      502      | composite_range_partitions 
      503      | composite_list_partitions 
      504      | composite_hash_partitions 
      505      | reference_partitioning 
      506      | system_partitioning 
               ;

  272       range_partitions
      507      : 'PARTITION' 'BY' 'RANGE' '(' column_name (',' column_name)* ')' (INTERVAL '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')?)? '(' 'PARTITION' partition_name? range_values_clause table_partition_description (',' PARTITION partition_name? range_values_clause table_partition_description)* ')' 
               ;

  273       list_partitions
      508      : 'PARTITION' 'BY' 'LIST' '(' column_name ')' '(' 'PARTITION' partition_name? list_values_clause table_partition_description (',' PARTITION partition_name? list_values_clause table_partition_description)* ')' 
               ;

  274       hash_partitions
      509      : 'PARTITION' 'BY' 'HASH' '(' column_name (',' column_name)* ')' (individual_hash_partitions | hash_partitions_by_quantity) 
               ;

  275       individual_hash_partitions
      510      : '(' 'PARTITION' partition_name? partitioning_storage_clause? (',' PARTITION partition_name? partitioning_storage_clause?)* ')' 
               ;

  276       hash_partitions_by_quantity
      511      : 'PARTITIONS' hash_partition_quantity (STORE IN '(' tablespace (',' tablespace)* ')')? (table_compression | key_compression)? (OVERFLOW STORE IN '(' tablespace (',' tablespace)* ')')? 
               ;

  277       hash_partition_quantity
      512      : 'UNSIGNED_INTEGER' 
               ;

  278       composite_range_partitions
      513      : 'PARTITION' 'BY' 'RANGE' '(' column_name (',' column_name)* ')' (INTERVAL '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')?)? (subpartition_by_range | subpartition_by_list | subpartition_by_hash) '(' range_partition_desc (',' range_partition_desc)* ')' 
               ;

  279       composite_list_partitions
      514      : 'PARTITION' 'BY' 'LIST' '(' column_name ')' (subpartition_by_range | subpartition_by_list | subpartition_by_hash) '(' list_partition_desc (',' list_partition_desc)* ')' 
               ;

  280       composite_hash_partitions
      515      : 'PARTITION' 'BY' 'HASH' '(' (',' column_name)+ ')' (subpartition_by_range | subpartition_by_list | subpartition_by_hash) (individual_hash_partitions | hash_partitions_by_quantity) 
               ;

  281       reference_partitioning
      516      : 'PARTITION' 'BY' 'REFERENCE' '(' regular_id ')' ('(' reference_partition_desc (',' reference_partition_desc)* ')')? 
               ;

  282       reference_partition_desc
      517      : 'PARTITION' partition_name? table_partition_description 
               ;

  283       system_partitioning
      518      : 'PARTITION' 'BY' 'SYSTEM' (PARTITIONS UNSIGNED_INTEGER | reference_partition_desc (',' reference_partition_desc)*)? 
               ;

  284       range_partition_desc
      519      : 'PARTITION' partition_name? range_values_clause table_partition_description ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subparts_by_quantity)? 
               ;

  285       list_partition_desc
      520      : 'PARTITION' partition_name? list_values_clause table_partition_description ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subparts_by_quantity)? 
               ;

  286       subpartition_template
      521      : 'SUBPARTITION' 'TEMPLATE' ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subpartition_quantity) 
               ;

  287       hash_subpartition_quantity
      522      : 'UNSIGNED_INTEGER' 
               ;

  288       subpartition_by_range
      523      : 'SUBPARTITION' 'BY' 'RANGE' '(' column_name (',' column_name)* ')' subpartition_template? 
               ;

  289       subpartition_by_list
      524      : 'SUBPARTITION' 'BY' 'LIST' '(' column_name ')' subpartition_template? 
               ;

  290       subpartition_by_hash
      525      : 'SUBPARTITION' 'BY' 'HASH' '(' column_name (',' column_name)* ')' (SUBPARTITIONS UNSIGNED_INTEGER (STORE IN '(' tablespace (',' tablespace)* ')')? | subpartition_template)? 
               ;

  291       subpartition_name
      526      : partition_name 
               ;

  292       range_subpartition_desc
      527      : 'SUBPARTITION' subpartition_name? range_values_clause partitioning_storage_clause? 
               ;

  293       list_subpartition_desc
      528      : 'SUBPARTITION' subpartition_name? list_values_clause partitioning_storage_clause? 
               ;

  294       individual_hash_subparts
      529      : 'SUBPARTITION' subpartition_name? partitioning_storage_clause? 
               ;

  295       hash_subparts_by_quantity
      530      : 'SUBPARTITIONS' 'UNSIGNED_INTEGER' (STORE IN '(' tablespace (',' tablespace)* ')')? 
               ;

  296       range_values_clause
      531      : 'VALUES' 'LESS' 'THAN' '(' literal (',' literal)* ')' 
               ;

  297       list_values_clause
      532      : 'VALUES' '(' (literal (',' literal)* | DEFAULT) ')' 
               ;

  298       table_partition_description
      533      : deferred_segment_creation? segment_attributes_clause? (table_compression | key_compression)? (OVERFLOW segment_attributes_clause?)? (lob_storage_clause | varray_col_properties | nested_table_col_properties)? 
               ;

  299       partitioning_storage_clause
      534      : (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname)+ 
               ;

  300       lob_partitioning_storage
      535      : 'LOB' '(' lob_item ')' 'STORE' 'AS' (BASICFILE | SECUREFILE)? (lob_segname ('(' TABLESPACE tablespace ')')? | '(' TABLESPACE tablespace ')') 
               ;

  301       datatype_null_enable
      536      : column_name datatype SORT? (DEFAULT expression)? (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)?)? (NOT NULL_)? (ENABLE | DISABLE)? 
               ;

  302       size_clause
      537      : 'UNSIGNED_INTEGER' REGULAR_ID? 
               ;

  303       table_compression
      538      : 'COMPRESS' (BASIC | FOR (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?))? 
      539      | 'NOCOMPRESS' 
               ;

  304       physical_attributes_clause
      540      : (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause)+ 
               ;

  305       storage_clause
      541      : 'STORAGE' '(' (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT)+ ')' 
               ;

  306       deferred_segment_creation
      542      : 'SEGMENT' 'CREATION' (IMMEDIATE | DEFERRED) 
               ;

  307       segment_attributes_clause
      543      : (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause)+ 
               ;

  308       physical_properties
      544      : deferred_segment_creation? segment_attributes_clause table_compression? 
               ;

  309       row_movement_clause
      545      : (ENABLE | DISABLE)? 'ROW' 'MOVEMENT' 
               ;

  310       flashback_archive_clause
      546      : 'FLASHBACK' 'ARCHIVE' 'flashback_archiveREGULAR_ID' 
      547      | 'NO' 'FLASHBACK' 'ARCHIVE' 
               ;

  311       log_grp
      548      : 'UNSIGNED_INTEGER' 
               ;

  312       supplemental_table_logging
      549      : 'ADD' 'SUPPLEMENTAL' 'LOG' (supplemental_log_grp_clause | supplemental_id_key_clause) (',' SUPPLEMENTAL LOG (supplemental_log_grp_clause | supplemental_id_key_clause))* 
      550      | 'DROP' 'SUPPLEMENTAL' 'LOG' (supplemental_id_key_clause | GROUP log_grp) (',' SUPPLEMENTAL LOG (supplemental_id_key_clause | GROUP log_grp))* 
               ;

  313       supplemental_log_grp_clause
      551      : 'GROUP' log_grp '(' regular_id (NO LOG)? (',' regular_id (NO LOG)?)* ')' ALWAYS? 
               ;

  314       supplemental_id_key_clause
      552      : 'DATA' '(' (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY))+ ')' 'COLUMNS' 
               ;

  315       allocate_extent_clause
      553      : 'ALLOCATE' 'EXTENT' ('(' (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ ')')? 
               ;

  316       deallocate_unused_clause
      554      : 'DEALLOCATE' 'UNUSED' (KEEP size_clause)? 
               ;

  317       shrink_clause
      555      : 'SHRINK' 'SPACE_KEYWORD' COMPACT? CASCADE? 
               ;

  318       records_per_block_clause
      556      : (MINIMIZE | NOMINIMIZE)? 'RECORDS_PER_BLOCK' 
               ;

  319       upgrade_table_clause
      557      : 'UPGRADE' (NOT? INCLUDING DATA) column_properties 
               ;

  320       truncate_table
      558      : 'TRUNCATE' 'TABLE' tableview_name PURGE? 'SEMICOLON' 
               ;

  321       drop_table
      559      : 'DROP' 'TABLE' tableview_name PURGE? 'SEMICOLON' 
               ;

  322       drop_view
      560      : 'DROP' 'VIEW' tableview_name (CASCADE CONSTRAINT)? 'SEMICOLON' 
               ;

  323       comment_on_column
      561      : 'COMMENT' 'ON' 'COLUMN' column_name 'IS' quoted_string 
               ;

  324       enable_or_disable
      562      : 'ENABLE' 
      563      | 'DISABLE' 
               ;

  325       allow_or_disallow
      564      : 'ALLOW' 
      565      | 'DISALLOW' 
               ;

  326       create_synonym
      566      : 'CREATE' (OR REPLACE)? 'PUBLIC' 'SYNONYM' synonym_name 'FOR' (schema_name PERIOD)? schema_object_name (AT_SIGN link_name)? 
      567      | 'CREATE' (OR REPLACE)? 'SYNONYM' (schema_name PERIOD)? synonym_name 'FOR' (schema_name PERIOD)? schema_object_name (AT_SIGN link_name)? 
               ;

  327       comment_on_table
      568      : 'COMMENT' 'ON' 'TABLE' tableview_name 'IS' quoted_string 
               ;

  328       alter_cluster
      569      : 'ALTER' 'CLUSTER' cluster_name (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache)+ parallel_clause? ';' 
               ;

  329       cache_or_nocache
      570      : 'CACHE' 
      571      | 'NOCACHE' 
               ;

  330       database_name
      572      : regular_id 
               ;

  331       alter_database
      573      : 'ALTER' 'DATABASE' database_name? (startup_clauses | recovery_clauses | database_file_clauses | logfile_clauses | controlfile_clauses | standby_database_clauses | default_settings_clause | instance_clauses | security_clause) ';' 
               ;

  332       startup_clauses
      574      : 'MOUNT' ((STANDBY | CLONE) DATABASE)? 
      575      | 'OPEN' (READ WRITE)? resetlogs_or_noresetlogs? upgrade_or_downgrade? 
      576      | 'OPEN' 'READ' 'ONLY' 
               ;

  333       resetlogs_or_noresetlogs
      577      : 'RESETLOGS' 
      578      | 'NORESETLOGS' 
               ;

  334       upgrade_or_downgrade
      579      : 'UPGRADE' 
      580      | 'DOWNGRADE' 
               ;

  335       recovery_clauses
      581      : general_recovery 
      582      | managed_standby_recovery 
      583      | begin_or_end 'BACKUP' 
               ;

  336       begin_or_end
      584      : 'BEGIN' 
      585      | 'END' 
               ;

  337       general_recovery
      586      : 'RECOVER' AUTOMATIC? (FROM CHAR_STRING)? ((full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING)? (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)* | CONTINUE DEFAULT? | CANCEL) 
               ;

  338       full_database_recovery
      587      : STANDBY? 'DATABASE' (UNTIL (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) | USING BACKUP CONTROLFILE)* 
               ;

  339       partial_database_recovery
      588      : 'TABLESPACE' tablespace (',' tablespace)* 
      589      | 'DATAFILE' 'CHAR_STRING' 
      590      | filenumber (',' CHAR_STRING | filenumber)* 
      591      | partial_database_recovery_10g 
               ;

  340       partial_database_recovery_10g
      592      : {self_isVersion10}? 'STANDBY' (TABLESPACE tablespace (',' tablespace)* | DATAFILE CHAR_STRING | filenumber (',' CHAR_STRING | filenumber)*) 'UNTIL' (CONSISTENT WITH)? 'CONTROLFILE' 
               ;

  341       managed_standby_recovery
      593      : 'RECOVER' (MANAGED STANDBY DATABASE ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL)? | TO LOGICAL STANDBY (db_name | KEEP IDENTITY)) 
               ;

  342       db_name
      594      : regular_id 
               ;

  343       database_file_clauses
      595      : 'RENAME' 'FILE' filename (',' filename)* 'TO' filename 
      596      | create_datafile_clause 
      597      | alter_datafile_clause 
      598      | alter_tempfile_clause 
               ;

  344       create_datafile_clause
      599      : 'CREATE' 'DATAFILE' (filename | filenumber) (',' (filename | filenumber))* (AS NEW)? 
               ;

  345       alter_datafile_clause
      600      : 'DATAFILE' (filename | filenumber) (',' (filename | filenumber))* (ONLINE | OFFLINE (FOR DROP)? | RESIZE size_clause | autoextend_clause | END BACKUP) 
               ;

  346       alter_tempfile_clause
      601      : 'TEMPFILE' (filename | filenumber) (',' (filename | filenumber))* (RESIZE size_clause | autoextend_clause | DROP (INCLUDING DATAFILES) | ONLINE | OFFLINE) 
               ;

  347       logfile_clauses
      602      : (ARCHIVELOG MANUAL? | NOARCHIVELOG) 
      603      | NO? 'FORCE' 'LOGGING' 
      604      | 'RENAME' 'FILE' filename (',' filename)* 'TO' filename 
      605      | 'CLEAR' UNARCHIVED? 'LOGFILE' logfile_descriptor (',' logfile_descriptor)* (UNRECOVERABLE DATAFILE)? 
      606      | add_logfile_clauses 
      607      | drop_logfile_clauses 
      608      | switch_logfile_clause 
      609      | supplemental_db_logging 
               ;

  348       add_logfile_clauses
      610      : 'ADD' STANDBY? 'LOGFILE' ((log_file_group redo_log_file_spec)+ | MEMBER filename REUSE? (',' filename REUSE?)* TO logfile_descriptor (',' logfile_descriptor)*) 
               ;

  349       log_file_group
      611      : (','? (THREAD UNSIGNED_INTEGER)? GROUP UNSIGNED_INTEGER) 
               ;

  350       drop_logfile_clauses
      612      : 'DROP' STANDBY? 'LOGFILE' (logfile_descriptor (',' logfile_descriptor)* | MEMBER filename (',' filename)*) 
               ;

  351       switch_logfile_clause
      613      : 'SWITCH' 'ALL' 'LOGFILES' 'TO' 'BLOCKSIZE' 'UNSIGNED_INTEGER' 
               ;

  352       supplemental_db_logging
      614      : add_or_drop 'SUPPLEMENTAL' 'LOG' (DATA | supplemental_id_key_clause | supplemental_plsql_clause) 
               ;

  353       add_or_drop
      615      : 'ADD' 
      616      | 'DROP' 
               ;

  354       supplemental_plsql_clause
      617      : 'DATA' 'FOR' 'PROCEDURAL' 'REPLICATION' 
               ;

  355       logfile_descriptor
      618      : 'GROUP' 'UNSIGNED_INTEGER' 
      619      | '(' filename (',' filename)* ')' 
      620      | filename 
               ;

  356       controlfile_clauses
      621      : 'CREATE' (LOGICAL | PHYSICAL)? 'STANDBY' 'CONTROLFILE' 'AS' filename REUSE? 
      622      | 'BACKUP' 'CONTROLFILE' 'TO' (filename REUSE? | trace_file_clause) 
               ;

  357       trace_file_clause
      623      : 'TRACE' (AS filename REUSE?)? (RESETLOGS | NORESETLOGS)? 
               ;

  358       standby_database_clauses
      624      : (activate_standby_db_clause | maximize_standby_db_clause | register_logfile_clause | commit_switchover_clause | start_standby_clause | stop_standby_clause | convert_database_clause) parallel_clause? 
               ;

  359       activate_standby_db_clause
      625      : 'ACTIVATE' (PHYSICAL | LOGICAL)? 'STANDBY' 'DATABASE' (FINISH APPLY)? 
               ;

  360       maximize_standby_db_clause
      626      : 'SET' 'STANDBY' 'DATABASE' 'TO' 'MAXIMIZE' (PROTECTION | AVAILABILITY | PERFORMANCE) 
               ;

  361       register_logfile_clause
      627      : 'REGISTER' (OR REPLACE)? (PHYSICAL | LOGICAL) 'LOGFILE' 
               ;

  362       commit_switchover_clause
      628      : (PREPARE | COMMIT) 'TO' 'SWITCHOVER' ((TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY) | CANCEL)? 
               ;

  363       start_standby_clause
      629      : 'START' 'LOGICAL' 'STANDBY' 'APPLY' IMMEDIATE? NODELAY? (NEW PRIMARY regular_id | INITIAL scn_valueUNSIGNED_INTEGER? | SKIP_ FAILED TRANSACTION | FINISH)? 
               ;

  364       stop_standby_clause
      630      : (STOP | ABORT) 'LOGICAL' 'STANDBY' 'APPLY' 
               ;

  365       convert_database_clause
      631      : 'CONVERT' 'TO' (PHYSICAL | SNAPSHOT) 'STANDBY' 
               ;

  366       default_settings_clause
      632      : 'DEFAULT' 'EDITION' 'EQUALS_OP' edition_name 
      633      | 'SET' 'DEFAULT' (BIGFILE | SMALLFILE) 'TABLESPACE' 
      634      | 'DEFAULT' 'TABLESPACE' tablespace 
      635      | 'DEFAULT' 'TEMPORARY' 'TABLESPACE' (tablespace | tablespace_group_name) 
      636      | 'RENAME' 'GLOBAL_NAME' 'TO' database ('.' domain)+ 
      637      | 'ENABLE' 'BLOCK' 'CHANGE' 'TRACKING' (USING FILE filename REUSE?)? 
      638      | 'DISABLE' 'BLOCK' 'CHANGE' 'TRACKING' 
      639      | flashback_mode_clause 
      640      | set_time_zone_clause 
               ;

  367       set_time_zone_clause
      641      : 'SET' 'TIMEZONE' 'EQUALS_OP' 'CHAR_STRING' 
               ;

  368       instance_clauses
      642      : enable_or_disable 'INSTANCE' 'CHAR_STRING' 
               ;

  369       security_clause
      643      : 'GUARD' (ALL | STANDBY | NONE) 
               ;

  370       domain
      644      : regular_id 
               ;

  371       database
      645      : regular_id 
               ;

  372       edition_name
      646      : regular_id 
               ;

  373       filenumber
      647      : 'UNSIGNED_INTEGER' 
               ;

  374       filename
      648      : 'CHAR_STRING' 
               ;

  375       alter_table
      649      : 'ALTER' 'TABLE' tableview_name (alter_table_properties | constraint_clauses | column_clauses | move_table_clause)? (enable_disable_clause | enable_or_disable (TABLE LOCK | ALL TRIGGERS))* ';' 
               ;

  376       alter_table_properties
      650      : alter_table_properties_1 
      651      | 'RENAME' 'TO' tableview_name 
      652      | shrink_clause 
      653      | 'READ' 'ONLY' 
      654      | 'READ' 'WRITE' 
      655      | 'REKEY' 'CHAR_STRING' 
               ;

  377       alter_table_properties_1
      656      : (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause)+ alter_iot_clauses? 
               ;

  378       alter_iot_clauses
      657      : index_org_table_clause 
      658      | alter_overflow_clause 
      659      | alter_mapping_table_clause 
      660      | 'COALESCE' 
               ;

  379       alter_mapping_table_clause
      661      : 'MAPPING' 'TABLE' (allocate_extent_clause | deallocate_unused_clause) 
               ;

  380       alter_overflow_clause
      662      : add_overflow_clause 
      663      | 'OVERFLOW' (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+ 
               ;

  381       add_overflow_clause
      664      : 'ADD' 'OVERFLOW' segment_attributes_clause? ('(' PARTITION segment_attributes_clause? (',' PARTITION segment_attributes_clause?)* ')')? 
               ;

  382       enable_disable_clause
      665      : (ENABLE | DISABLE) (VALIDATE | NOVALIDATE)? (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY | CONSTRAINT constraint_name) using_index_clause? exceptions_clause? CASCADE? ((KEEP | DROP) INDEX)? 
               ;

  383       using_index_clause
      666      : 'USING' 'INDEX' (index_name | '(' create_index ')' | index_attributes)? 
               ;

  384       index_attributes
      667      : (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause)+ 
               ;

  385       sort_or_nosort
      668      : 'SORT' 
      669      | 'NOSORT' 
               ;

  386       exceptions_clause
      670      : 'EXCEPTIONS' 'INTO' tableview_name 
               ;

  387       move_table_clause
      671      : 'MOVE' ONLINE? segment_attributes_clause? table_compression? index_org_table_clause? (lob_storage_clause | varray_col_properties)* parallel_clause? 
               ;

  388       index_org_table_clause
      672      : (mapping_table_clause | PCTTHRESHOLD UNSIGNED_INTEGER | key_compression) index_org_overflow_clause? 
               ;

  389       mapping_table_clause
      673      : 'MAPPING' 'TABLE' 
      674      | 'NOMAPPING' 
               ;

  390       key_compression
      675      : 'NOCOMPRESS' 
      676      | 'COMPRESS' 'UNSIGNED_INTEGER' 
               ;

  391       index_org_overflow_clause
      677      : (INCLUDING column_name)? 'OVERFLOW' segment_attributes_clause? 
               ;

  392       column_clauses
      678      : add_modify_drop_column_clauses 
      679      | rename_column_clause 
      680      | modify_collection_retrieval 
      681      | modify_lob_storage_clause 
               ;

  393       modify_collection_retrieval
      682      : 'MODIFY' 'NESTED' 'TABLE' collection_item 'RETURN' 'AS' (LOCATOR | VALUE) 
               ;

  394       collection_item
      683      : tableview_name 
               ;

  395       rename_column_clause
      684      : 'RENAME' 'COLUMN' old_column_name 'TO' new_column_name 
               ;

  396       old_column_name
      685      : column_name 
               ;

  397       new_column_name
      686      : column_name 
               ;

  398       add_modify_drop_column_clauses
      687      : (add_column_clause | modify_column_clauses | drop_column_clause)+ 
               ;

  399       drop_column_clause
      688      : 'SET' 'UNUSED' (COLUMN column_name | ('(' column_name (',' column_name)* ')')) (CASCADE CONSTRAINTS | INVALIDATE)* 
      689      | 'DROP' (COLUMN column_name | '(' column_name (',' column_name)* ')') (CASCADE CONSTRAINTS | INVALIDATE)* (CHECKPOINT UNSIGNED_INTEGER)? 
      690      | 'DROP' (UNUSED COLUMNS | COLUMNS CONTINUE) (CHECKPOINT UNSIGNED_INTEGER) 
               ;

  400       modify_column_clauses
      691      : 'MODIFY' ('(' modify_col_properties (',' modify_col_properties)* ')' | modify_col_properties | modify_col_substitutable) 
               ;

  401       modify_col_properties
      692      : column_name datatype? (DEFAULT expression)? (ENCRYPT encryption_spec | DECRYPT)? inline_constraint* lob_storage_clause? 
               ;

  402       modify_col_substitutable
      693      : 'COLUMN' column_name NOT? 'SUBSTITUTABLE' 'AT' 'ALL' 'LEVELS' FORCE? 
               ;

  403       add_column_clause
      694      : 'ADD' ('(' (column_definition | virtual_column_definition) (',' (column_definition | virtual_column_definition))* ')' | (column_definition | virtual_column_definition)) column_properties? 
               ;

  404       alter_varray_col_properties
      695      : 'MODIFY' 'VARRAY' varray_item '(' modify_lob_parameters ')' 
               ;

  405       varray_col_properties
      696      : 'VARRAY' varray_item (substitutable_column_clause? varray_storage_clause | substitutable_column_clause) 
               ;

  406       varray_storage_clause
      697      : 'STORE' 'AS' (SECUREFILE | BASICFILE)? 'LOB' (lob_segname? '(' lob_storage_parameters ')' | lob_segname) 
               ;

  407       lob_segname
      698      : regular_id 
               ;

  408       lob_item
      699      : regular_id 
               ;

  409       lob_storage_parameters
      700      : 'TABLESPACE' tablespace 
      701      | (lob_parameters storage_clause?) 
      702      | storage_clause 
               ;

  410       lob_storage_clause
      703      : 'LOB' ('(' lob_item (',' lob_item)* ')' STORE AS ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')+ | '(' lob_item ')' STORE AS ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')+) 
               ;

  411       modify_lob_storage_clause
      704      : 'MODIFY' 'LOB' '(' lob_item ')' '(' modify_lob_parameters ')' 
               ;

  412       modify_lob_parameters
      705      : (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+ 
               ;

  413       lob_parameters
      706      : ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?)+ 
               ;

  414       lob_deduplicate_clause
      707      : 'DEDUPLICATE' 
      708      | 'KEEP_DUPLICATES' 
               ;

  415       lob_compression_clause
      709      : 'NOCOMPRESS' 
      710      | 'COMPRESS' (HIGH | MEDIUM | LOW)? 
               ;

  416       lob_retention_clause
      711      : 'RETENTION' (MAX | MIN UNSIGNED_INTEGER | AUTO | NONE)? 
               ;

  417       encryption_spec
      712      : (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)? 
               ;

  418       tablespace
      713      : regular_id 
               ;

  419       varray_item
      714      : (id_expression '.')? (id_expression '.')? id_expression 
               ;

  420       column_properties
      715      : object_type_col_properties 
      716      | nested_table_col_properties 
      717      | (varray_col_properties | lob_storage_clause) 
      718      | xmltype_column_properties 
               ;

  421       period_definition
      719      : {self_isVersion12}? 'PERIOD' 'FOR' column_name ('(' start_time_column ',' end_time_column ')')? 
               ;

  422       start_time_column
      720      : column_name 
               ;

  423       end_time_column
      721      : column_name 
               ;

  424       column_definition
      722      : column_name (datatype | type_name) SORT? (DEFAULT expression)? (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY regular_id)? CHAR_STRING? (NO? SALT)?)? (inline_constraint* | inline_ref_constraint) 
               ;

  425       virtual_column_definition
      723      : column_name datatype? autogenerated_sequence_definition? VIRTUAL? inline_constraint* 
               ;

  426       autogenerated_sequence_definition
      724      : 'GENERATED' (ALWAYS | BY DEFAULT (ON NULL_)?)? 'AS' 'IDENTITY' ('(' (sequence_start_clause | sequence_spec)* ')')? 
               ;

  427       out_of_line_part_storage
      725      : 'PARTITION' partition_name 
               ;

  428       nested_table_col_properties
      726      : 'NESTED' 'TABLE' (nested_item | COLUMN_VALUE) substitutable_column_clause? (LOCAL | GLOBAL)? 'STORE' 'AS' tableview_name ('(' ('(' object_properties ')' | physical_properties | column_properties)+ ')')? (RETURN AS? (LOCATOR | VALUE))? 
               ;

  429       nested_item
      727      : regular_id 
               ;

  430       substitutable_column_clause
      728      : ELEMENT? 'IS' 'OF' TYPE? '(' type_name ')' 
      729      | NOT? 'SUBSTITUTABLE' 'AT' 'ALL' 'LEVELS' 
               ;

  431       partition_name
      730      : regular_id 
               ;

  432       supplemental_logging_props
      731      : 'SUPPLEMENTAL' 'LOG' (supplemental_log_grp_clause | supplemental_id_key_clause) 
               ;

  433       column_or_attribute
      732      : regular_id 
               ;

  434       object_type_col_properties
      733      : 'COLUMN' 'columnregular_id' substitutable_column_clause 
               ;

  435       constraint_clauses
      734      : 'ADD' '(' (out_of_line_constraint* | out_of_line_ref_constraint) ')' 
      735      | 'ADD' (out_of_line_constraint* | out_of_line_ref_constraint) 
      736      | 'MODIFY' (CONSTRAINT constraint_name | PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')') constraint_state CASCADE? 
      737      | 'RENAME' 'CONSTRAINT' old_constraint_name 'TO' new_constraint_name 
      738      | drop_constraint_clause+ 
               ;

  436       old_constraint_name
      739      : constraint_name 
               ;

  437       new_constraint_name
      740      : constraint_name 
               ;

  438       drop_constraint_clause
      741      : 'DROP' drop_primary_key_or_unique_or_generic_clause 
               ;

  439       drop_primary_key_or_unique_or_generic_clause
      742      : (PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')') CASCADE? (KEEP | DROP)? 
      743      | 'CONSTRAINT' constraint_name CASCADE? 
               ;

  440       add_constraint
      744      : 'ADD' (CONSTRAINT constraint_name)? add_constraint_clause (',' (CONSTRAINT constraint_name)? add_constraint_clause)+ 
               ;

  441       add_constraint_clause
      745      : primary_key_clause 
      746      | foreign_key_clause 
      747      | unique_key_clause 
      748      | check_constraint 
               ;

  442       check_constraint
      749      : 'CHECK' '(' condition ')' DISABLE? 
               ;

  443       drop_constraint
      750      : 'DROP' 'CONSTRAINT' constraint_name 
               ;

  444       enable_constraint
      751      : 'ENABLE' 'CONSTRAINT' constraint_name 
               ;

  445       disable_constraint
      752      : 'DISABLE' 'CONSTRAINT' constraint_name 
               ;

  446       foreign_key_clause
      753      : 'FOREIGN' 'KEY' paren_column_list references_clause on_delete_clause? 
               ;

  447       references_clause
      754      : 'REFERENCES' tableview_name paren_column_list 
               ;

  448       on_delete_clause
      755      : 'ON' 'DELETE' (CASCADE | SET NULL_) 
               ;

  449       unique_key_clause
      756      : 'UNIQUE' paren_column_list using_index_clause? 
               ;

  450       primary_key_clause
      757      : 'PRIMARY' 'KEY' paren_column_list using_index_clause? 
               ;

  451       anonymous_block
      758      : (DECLARE seq_of_declare_specs)? 'BEGIN' seq_of_statements (EXCEPTION exception_handler+)? 'END' 'SEMICOLON' 
               ;

  452       invoker_rights_clause
      759      : 'AUTHID' (CURRENT_USER | DEFINER) 
               ;

  453       call_spec
      760      : 'LANGUAGE' (java_spec | c_spec) 
               ;

  454       java_spec
      761      : 'JAVA' 'NAME' 'CHAR_STRING' 
               ;

  455       c_spec
      762      : 'C_LETTER' (NAME CHAR_STRING)? 'LIBRARY' identifier c_agent_in_clause? (WITH CONTEXT)? c_parameters_clause? 
               ;

  456       c_agent_in_clause
      763      : 'AGENT' 'IN' '(' expressions ')' 
               ;

  457       c_parameters_clause
      764      : 'PARAMETERS' '(' (expressions | '.' '.' '.') ')' 
               ;

  458       parameter
      765      : parameter_name (IN | OUT | INOUT | NOCOPY)* type_spec? default_value_part? 
               ;

  459       default_value_part
      766      : (ASSIGN_OP | DEFAULT) expression 
               ;

  460       seq_of_declare_specs
      767      : declare_spec+ 
               ;

  461       declare_spec
      768      : pragma_declaration 
      769      | exception_declaration 
      770      | variable_declaration 
      771      | subtype_declaration 
      772      | cursor_declaration 
      773      | type_declaration 
      774      | procedure_spec 
      775      | function_spec 
      776      | procedure_body 
      777      | function_body 
               ;

  462       variable_declaration
      778      : identifier CONSTANT? type_spec (NOT NULL_)? default_value_part? ';' 
               ;

  463       subtype_declaration
      779      : 'SUBTYPE' identifier 'IS' type_spec (RANGE expression '..' expression)? (NOT NULL_)? ';' 
               ;

  464       cursor_declaration
      780      : 'CURSOR' identifier ('(' parameter_spec (',' parameter_spec)* ')')? (RETURN type_spec)? (IS select_statement)? ';' 
               ;

  465       parameter_spec
      781      : parameter_name (IN? type_spec)? default_value_part? 
               ;

  466       exception_declaration
      782      : identifier 'EXCEPTION' ';' 
               ;

  467       pragma_declaration
      783      : 'PRAGMA' (SERIALLY_REUSABLE | AUTONOMOUS_TRANSACTION | EXCEPTION_INIT '(' exception_name ',' numeric_negative ')' | INLINE '(' id1identifier ',' expression ')' | RESTRICT_REFERENCES '(' (identifier | DEFAULT) (',' identifier)+ ')') ';' 
               ;

  468       record_type_def
      784      : 'RECORD' '(' field_spec (',' field_spec)* ')' 
               ;

  469       field_spec
      785      : column_name type_spec? (NOT NULL_)? default_value_part? 
               ;

  470       ref_cursor_type_def
      786      : 'REF' 'CURSOR' (RETURN type_spec)? 
               ;

  471       type_declaration
      787      : 'TYPE' identifier 'IS' (table_type_def | varray_type_def | record_type_def | ref_cursor_type_def) ';' 
               ;

  472       table_type_def
      788      : 'TABLE' 'OF' type_spec table_indexed_by_part? (NOT NULL_)? 
               ;

  473       table_indexed_by_part
      789      : (idx1INDEXED | idx2INDEX) 'BY' type_spec 
               ;

  474       varray_type_def
      790      : (VARRAY | VARYING ARRAY) '(' expression ')' 'OF' type_spec (NOT NULL_)? 
               ;

  475       seq_of_statements
      791      : (statement ';' | label_declaration)+ 
               ;

  476       label_declaration
      792      : 'ltp1' '<' '<' label_name '>' '>' 
               ;

  477       statement
      793      : body 
      794      | block 
      795      | assignment_statement 
      796      | continue_statement 
      797      | exit_statement 
      798      | goto_statement 
      799      | if_statement 
      800      | loop_statement 
      801      | forall_statement 
      802      | null_statement 
      803      | raise_statement 
      804      | return_statement 
      805      | case_statement 
      806      | sql_statement 
      807      | function_call 
      808      | pipe_row_statement 
      809      | procedure_call 
               ;

  478       swallow_to_semi
      810      : ';'+ 
               ;

  479       assignment_statement
      811      : (general_element | bind_variable) 'ASSIGN_OP' expression 
               ;

  480       continue_statement
      812      : 'CONTINUE' label_name? (WHEN condition)? 
               ;

  481       exit_statement
      813      : 'EXIT' label_name? (WHEN condition)? 
               ;

  482       goto_statement
      814      : 'GOTO' label_name 
               ;

  483       if_statement
      815      : 'IF' condition 'THEN' seq_of_statements elsif_part* else_part? 'END' 'IF' 
               ;

  484       elsif_part
      816      : 'ELSIF' condition 'THEN' seq_of_statements 
               ;

  485       else_part
      817      : 'ELSE' seq_of_statements 
               ;

  486       loop_statement
      818      : label_declaration? (WHILE condition | FOR cursor_loop_param)? 'LOOP' seq_of_statements 'END' 'LOOP' label_name? 
               ;

  487       cursor_loop_param
      819      : index_name 'IN' REVERSE? lower_bound 'range_separator' '..' upper_bound 
      820      | record_name 'IN' (cursor_name ('(' expressions? ')')? | '(' select_statement ')') 
               ;

  488       forall_statement
      821      : 'FORALL' index_name 'IN' bounds_clause sql_statement (SAVE EXCEPTIONS)? 
               ;

  489       bounds_clause
      822      : lower_bound '..' upper_bound 
      823      | 'INDICES' 'OF' collection_name between_bound? 
      824      | 'VALUES' 'OF' index_name 
               ;

  490       between_bound
      825      : 'BETWEEN' lower_bound 'AND' upper_bound 
               ;

  491       lower_bound
      826      : concatenation 
               ;

  492       upper_bound
      827      : concatenation 
               ;

  493       null_statement
      828      : 'NULL_' 
               ;

  494       raise_statement
      829      : 'RAISE' exception_name? 
               ;

  495       return_statement
      830      : 'RETURN' expression? 
               ;

  496       function_call
      831      : CALL? routine_name function_argument? 
               ;

  497       procedure_call
      832      : routine_name function_argument? 
               ;

  498       pipe_row_statement
      833      : 'PIPE' 'ROW' '(' expression ')' 
               ;

  499       body
      834      : 'BEGIN' seq_of_statements (EXCEPTION exception_handler+)? 'END' label_name? 
               ;

  500       exception_handler
      835      : 'WHEN' exception_name (OR exception_name)* 'THEN' seq_of_statements 
               ;

  501       trigger_block
      836      : (DECLARE declare_spec*)? body 
               ;

  502       block
      837      : DECLARE? declare_spec+ body 
               ;

  503       sql_statement
      838      : execute_immediate 
      839      | data_manipulation_language_statements 
      840      | cursor_manipulation_statements 
      841      | transaction_control_statements 
               ;

  504       execute_immediate
      842      : 'EXECUTE' 'IMMEDIATE' expression (into_clause using_clause? | using_clause dynamic_returning_clause? | dynamic_returning_clause)? 
               ;

  505       dynamic_returning_clause
      843      : (RETURNING | RETURN) into_clause 
               ;

  506       data_manipulation_language_statements
      844      : merge_statement 
      845      | lock_table_statement 
      846      | select_statement 
      847      | update_statement 
      848      | delete_statement 
      849      | insert_statement 
      850      | explain_statement 
               ;

  507       cursor_manipulation_statements
      851      : close_statement 
      852      | open_statement 
      853      | fetch_statement 
      854      | open_for_statement 
               ;

  508       close_statement
      855      : 'CLOSE' cursor_name 
               ;

  509       open_statement
      856      : 'OPEN' cursor_name ('(' expressions? ')')? 
               ;

  510       fetch_statement
      857      : 'FETCH' cursor_name (it1INTO variable_name (',' variable_name)* | BULK COLLECT INTO variable_name (',' variable_name)* (LIMIT (numeric | variable_name))?) 
               ;

  511       open_for_statement
      858      : 'OPEN' variable_name 'FOR' (select_statement | expression) using_clause? 
               ;

  512       transaction_control_statements
      859      : set_transaction_command 
      860      | set_constraint_command 
      861      | commit_statement 
      862      | rollback_statement 
      863      | savepoint_statement 
               ;

  513       set_transaction_command
      864      : 'SET' 'TRANSACTION' (READ (ONLY | WRITE) | ISOLATION LEVEL (SERIALIZABLE | READ COMMITTED) | USE ROLLBACK SEGMENT rollback_segment_name)? (NAME quoted_string)? 
               ;

  514       set_constraint_command
      865      : 'SET' (CONSTRAINT | CONSTRAINTS) (ALL | constraint_name (',' constraint_name)*) (IMMEDIATE | DEFERRED) 
               ;

  515       commit_statement
      866      : 'COMMIT' WORK? (COMMENT expression | FORCE (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?))? write_clause? 
               ;

  516       write_clause
      867      : 'WRITE' (WAIT | NOWAIT)? (IMMEDIATE | BATCH)? 
               ;

  517       rollback_statement
      868      : 'ROLLBACK' WORK? (TO SAVEPOINT? savepoint_name | FORCE quoted_string)? 
               ;

  518       savepoint_statement
      869      : 'SAVEPOINT' savepoint_name 
               ;

  519       explain_statement
      870      : 'EXPLAIN' 'PLAN' (SET STATEMENT_ID '=' quoted_string)? (INTO tableview_name)? 'FOR' (select_statement | update_statement | delete_statement | insert_statement | merge_statement) 
               ;

  520       select_only_statement
      871      : subquery_factoring_clause? subquery 
               ;

  521       select_statement
      872      : select_only_statement (for_update_clause | order_by_clause | offset_clause | fetch_clause)* 
               ;

  522       subquery_factoring_clause
      873      : 'WITH' factoring_element (',' factoring_element)* 
               ;

  523       factoring_element
      874      : query_name paren_column_list? 'AS' '(' subquery order_by_clause? ')' search_clause? cycle_clause? 
               ;

  524       search_clause
      875      : 'SEARCH' (DEPTH | BREADTH) 'FIRST' 'BY' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)? (',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)?)* 'SET' column_name 
               ;

  525       cycle_clause
      876      : 'CYCLE' column_list 'SET' column_name 'TO' expression 'DEFAULT' expression 
               ;

  526       subquery
      877      : subquery_basic_elements subquery_operation_part* 
               ;

  527       subquery_basic_elements
      878      : query_block 
      879      | '(' subquery ')' 
               ;

  528       subquery_operation_part
      880      : (UNION ALL? | INTERSECT | MINUS) subquery_basic_elements 
               ;

  529       query_block
      881      : 'SELECT' (DISTINCT | UNIQUE | ALL)? selected_list into_clause? from_clause where_clause? hierarchical_query_clause? group_by_clause? model_clause? order_by_clause? fetch_clause? 
               ;

  530       selected_list
      882      : '*' 
      883      | select_list_elements (',' select_list_elements)* 
               ;

  531       from_clause
      884      : 'FROM' table_ref_list 
               ;

  532       select_list_elements
      885      : tableview_name '.' 'ASTERISK' 
      886      | expression column_alias? 
               ;

  533       table_ref_list
      887      : table_ref (',' table_ref)* 
               ;

  534       table_ref
      888      : table_ref_aux join_clause* (pivot_clause | unpivot_clause)? 
               ;

  535       table_ref_aux
      889      : table_ref_aux_internal flashback_query_clause* table_alias? 
               ;

  536       table_ref_aux_internal
      890      : dml_table_expression_clause (pivot_clause | unpivot_clause)? 
      891      | '(' table_ref subquery_operation_part* ')' (pivot_clause | unpivot_clause)? 
      892      | 'ONLY' '(' dml_table_expression_clause ')' 
               ;

  537       join_clause
      893      : query_partition_clause? (CROSS | NATURAL)? (INNER | outer_join_type)? 'JOIN' table_ref_aux query_partition_clause? (join_on_part | join_using_part)* 
               ;

  538       join_on_part
      894      : 'ON' condition 
               ;

  539       join_using_part
      895      : 'USING' paren_column_list 
               ;

  540       outer_join_type
      896      : (FULL | LEFT | RIGHT) OUTER? 
               ;

  541       query_partition_clause
      897      : 'PARTITION' 'BY' (('(' (subquery | expressions)? ')') | expressions) 
               ;

  542       flashback_query_clause
      898      : 'VERSIONS' 'BETWEEN' (SCN | TIMESTAMP) expression 
      899      | 'AS' 'OF' (SCN | TIMESTAMP | SNAPSHOT) expression 
               ;

  543       pivot_clause
      900      : 'PIVOT' XML? '(' pivot_element (',' pivot_element)* pivot_for_clause pivot_in_clause ')' 
               ;

  544       pivot_element
      901      : aggregate_function_name '(' expression ')' column_alias? 
               ;

  545       pivot_for_clause
      902      : 'FOR' (column_name | paren_column_list) 
               ;

  546       pivot_in_clause
      903      : 'IN' '(' (subquery | ANY (',' ANY)* | pivot_in_clause_element (',' pivot_in_clause_element)*) ')' 
               ;

  547       pivot_in_clause_element
      904      : pivot_in_clause_elements column_alias? 
               ;

  548       pivot_in_clause_elements
      905      : expression 
      906      | '(' expressions? ')' 
               ;

  549       unpivot_clause
      907      : 'UNPIVOT' ((INCLUDE | EXCLUDE) NULLS)? '(' (column_name | paren_column_list) pivot_for_clause unpivot_in_clause ')' 
               ;

  550       unpivot_in_clause
      908      : 'IN' '(' unpivot_in_elements (',' unpivot_in_elements)* ')' 
               ;

  551       unpivot_in_elements
      909      : (column_name | paren_column_list) (AS (constant | '(' constant (',' constant)* ')'))? 
               ;

  552       hierarchical_query_clause
      910      : 'CONNECT' 'BY' NOCYCLE? condition start_part? 
      911      | start_part 'CONNECT' 'BY' NOCYCLE? condition 
               ;

  553       start_part
      912      : 'START' 'WITH' condition 
               ;

  554       group_by_clause
      913      : 'GROUP' 'BY' group_by_elements (',' group_by_elements)* having_clause? 
      914      | having_clause (GROUP BY group_by_elements (',' group_by_elements)*)? 
               ;

  555       group_by_elements
      915      : grouping_sets_clause 
      916      | rollup_cube_clause 
      917      | expression 
               ;

  556       rollup_cube_clause
      918      : (ROLLUP | CUBE) '(' grouping_sets_elements (',' grouping_sets_elements)* ')' 
               ;

  557       grouping_sets_clause
      919      : 'GROUPING' 'SETS' '(' grouping_sets_elements (',' grouping_sets_elements)* ')' 
               ;

  558       grouping_sets_elements
      920      : rollup_cube_clause 
      921      | '(' expressions? ')' 
      922      | expression 
               ;

  559       having_clause
      923      : 'HAVING' condition 
               ;

  560       model_clause
      924      : 'MODEL' cell_reference_options* return_rows_clause? reference_model* main_model 
               ;

  561       cell_reference_options
      925      : (IGNORE | KEEP) 'NAV' 
      926      | 'UNIQUE' (DIMENSION | SINGLE REFERENCE) 
               ;

  562       return_rows_clause
      927      : 'RETURN' (UPDATED | ALL) 'ROWS' 
               ;

  563       reference_model
      928      : 'REFERENCE' reference_model_name 'ON' '(' subquery ')' model_column_clauses cell_reference_options* 
               ;

  564       main_model
      929      : (MAIN main_model_name)? model_column_clauses cell_reference_options* model_rules_clause 
               ;

  565       model_column_clauses
      930      : model_column_partition_part? 'DIMENSION' 'BY' model_column_list 'MEASURES' model_column_list 
               ;

  566       model_column_partition_part
      931      : 'PARTITION' 'BY' model_column_list 
               ;

  567       model_column_list
      932      : '(' model_column (',' model_column)* ')' 
               ;

  568       model_column
      933      : (expression | query_block) column_alias? 
               ;

  569       model_rules_clause
      934      : model_rules_part? '(' (model_rules_element (',' model_rules_element)*)? ')' 
               ;

  570       model_rules_part
      935      : 'RULES' (UPDATE | UPSERT ALL?)? ((AUTOMATIC | SEQUENTIAL) ORDER)? model_iterate_clause? 
               ;

  571       model_rules_element
      936      : (UPDATE | UPSERT ALL?)? cell_assignment order_by_clause? '=' expression 
               ;

  572       cell_assignment
      937      : model_expression 
               ;

  573       model_iterate_clause
      938      : 'ITERATE' '(' expression ')' until_part? 
               ;

  574       until_part
      939      : 'UNTIL' '(' condition ')' 
               ;

  575       order_by_clause
      940      : 'ORDER' SIBLINGS? 'BY' order_by_elements (',' order_by_elements)* 
               ;

  576       order_by_elements
      941      : expression (ASC | DESC)? (NULLS (FIRST | LAST))? 
               ;

  577       offset_clause
      942      : 'OFFSET' expression (ROW | ROWS) 
               ;

  578       fetch_clause
      943      : 'FETCH' (FIRST | NEXT) (expression PERCENT_KEYWORD?)? (ROW | ROWS) (ONLY | WITH TIES) 
               ;

  579       for_update_clause
      944      : 'FOR' 'UPDATE' for_update_of_part? for_update_options? 
               ;

  580       for_update_of_part
      945      : 'OF' column_list 
               ;

  581       for_update_options
      946      : 'SKIP_' 'LOCKED' 
      947      | 'NOWAIT' 
      948      | 'WAIT' expression 
               ;

  582       update_statement
      949      : 'UPDATE' general_table_ref update_set_clause where_clause? static_returning_clause? error_logging_clause? 
               ;

  583       update_set_clause
      950      : 'SET' (column_based_update_set_clause (',' column_based_update_set_clause)* | VALUE '(' identifier ')' '=' expression) 
               ;

  584       column_based_update_set_clause
      951      : column_name '=' expression 
      952      | paren_column_list '=' subquery 
               ;

  585       delete_statement
      953      : 'DELETE' FROM? general_table_ref where_clause? static_returning_clause? error_logging_clause? 
               ;

  586       insert_statement
      954      : 'INSERT' (single_table_insert | multi_table_insert) 
               ;

  587       single_table_insert
      955      : insert_into_clause (values_clause static_returning_clause? | select_statement) error_logging_clause? 
               ;

  588       multi_table_insert
      956      : (ALL multi_table_element+ | conditional_insert_clause) select_statement 
               ;

  589       multi_table_element
      957      : insert_into_clause values_clause? error_logging_clause? 
               ;

  590       conditional_insert_clause
      958      : (ALL | FIRST)? conditional_insert_when_part+ conditional_insert_else_part? 
               ;

  591       conditional_insert_when_part
      959      : 'WHEN' condition 'THEN' multi_table_element+ 
               ;

  592       conditional_insert_else_part
      960      : 'ELSE' multi_table_element+ 
               ;

  593       insert_into_clause
      961      : 'INTO' general_table_ref paren_column_list? 
               ;

  594       values_clause
      962      : 'VALUES' (REGULAR_ID | '(' expressions ')') 
               ;

  595       merge_statement
      963      : 'MERGE' 'INTO' tableview_name table_alias? 'USING' selected_tableview 'ON' '(' condition ')' (merge_update_clause merge_insert_clause? | merge_insert_clause merge_update_clause?)? error_logging_clause? 
               ;

  596       merge_update_clause
      964      : 'WHEN' 'MATCHED' 'THEN' 'UPDATE' 'SET' merge_element (',' merge_element)* where_clause? merge_update_delete_part? 
               ;

  597       merge_element
      965      : column_name '=' expression 
               ;

  598       merge_update_delete_part
      966      : 'DELETE' where_clause 
               ;

  599       merge_insert_clause
      967      : 'WHEN' 'NOT' 'MATCHED' 'THEN' 'INSERT' paren_column_list? values_clause where_clause? 
               ;

  600       selected_tableview
      968      : (tableview_name | '(' select_statement ')') table_alias? 
               ;

  601       lock_table_statement
      969      : 'LOCK' 'TABLE' lock_table_element (',' lock_table_element)* 'IN' lock_mode 'MODE' wait_nowait_part? 
               ;

  602       wait_nowait_part
      970      : 'WAIT' expression 
      971      | 'NOWAIT' 
               ;

  603       lock_table_element
      972      : tableview_name partition_extension_clause? 
               ;

  604       lock_mode
      973      : 'ROW' 'SHARE' 
      974      | 'ROW' 'EXCLUSIVE' 
      975      | 'SHARE' UPDATE? 
      976      | 'SHARE' 'ROW' 'EXCLUSIVE' 
      977      | 'EXCLUSIVE' 
               ;

  605       general_table_ref
      978      : (dml_table_expression_clause | ONLY '(' dml_table_expression_clause ')') table_alias? 
               ;

  606       static_returning_clause
      979      : (RETURNING | RETURN) expressions into_clause 
               ;

  607       error_logging_clause
      980      : 'LOG' 'ERRORS' error_logging_into_part? expression? error_logging_reject_part? 
               ;

  608       error_logging_into_part
      981      : 'INTO' tableview_name 
               ;

  609       error_logging_reject_part
      982      : 'REJECT' 'LIMIT' (UNLIMITED | expression) 
               ;

  610       dml_table_expression_clause
      983      : table_collection_expression 
      984      | '(' select_statement subquery_restriction_clause? ')' 
      985      | tableview_name sample_clause? 
               ;

  611       table_collection_expression
      986      : (TABLE | THE) ('(' subquery ')' | '(' expression ')' outer_join_sign?) 
               ;

  612       subquery_restriction_clause
      987      : 'WITH' (READ ONLY | CHECK OPTION (CONSTRAINT constraint_name)?) 
               ;

  613       sample_clause
      988      : 'SAMPLE' BLOCK? '(' expression (',' expression)? ')' seed_part? 
               ;

  614       seed_part
      989      : 'SEED' '(' expression ')' 
               ;

  615       condition
      990      : expression 
               ;

  616       expressions
      991      : expression (',' expression)* 
               ;

  617       expression
      992      : cursor_expression 
      993      | logical_expression 
               ;

  618       cursor_expression
      994      : 'CURSOR' '(' subquery ')' 
               ;

  619       logical_expression
      995      : unary_logical_expression 
      996      | logical_expression 'AND' logical_expression 
      997      | logical_expression 'OR' logical_expression 
               ;

  620       unary_logical_expression
      998      : NOT? multiset_expression (IS NOT? logical_operation)* 
               ;

  621       logical_operation
      999      : (NULL_ | NAN | PRESENT | INFINITE | A_LETTER SET | EMPTY | OF TYPE? '(' ONLY? type_spec (',' type_spec)* ')') 
               ;

  622       multiset_expression
     1000      : relational_expression (multiset_type (MEMBER | SUBMULTISET) OF? concatenation)? 
               ;

  623       relational_expression
     1001      : relational_expression relational_operator relational_expression 
     1002      | compound_expression 
               ;

  624       compound_expression
     1003      : concatenation (NOT? (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?))? 
               ;

  625       relational_operator
     1004      : '=' 
     1005      | (NOT_EQUAL_OP | '<' '>' | '!' '=' | '^' '=') 
     1006      | ('<' | '>') '='? 
               ;

  626       in_elements
     1007      : '(' subquery ')' 
     1008      | '(' concatenation (',' concatenation)* ')' 
     1009      | constant 
     1010      | bind_variable 
     1011      | general_element 
               ;

  627       between_elements
     1012      : concatenation 'AND' concatenation 
               ;

  628       concatenation
     1013      : model_expression (AT (LOCAL | TIME ZONE concatenation) | interval_expression)? (ON OVERFLOW (TRUNCATE | ERROR))? 
     1014      | concatenation 'op' (ASTERISK | SOLIDUS) concatenation 
     1015      | concatenation 'op' (PLUS_SIGN | MINUS_SIGN) concatenation 
     1016      | concatenation 'BAR' 'BAR' concatenation 
               ;

  629       interval_expression
     1017      : 'DAY' ('(' concatenation ')')? 'TO' 'SECOND' ('(' concatenation ')')? 
     1018      | 'YEAR' ('(' concatenation ')')? 'TO' 'MONTH' 
               ;

  630       model_expression
     1019      : unary_expression ('[' model_expression_element ']')? 
               ;

  631       model_expression_element
     1020      : (ANY | expression) (',' (ANY | expression))* 
     1021      | single_column_for_loop (',' single_column_for_loop)* 
     1022      | multi_column_for_loop 
               ;

  632       single_column_for_loop
     1023      : 'FOR' column_name (IN '(' expressions? ')' | (LIKE expression)? FROM fromExprexpression TO toExprexpression action_type (INCREMENT | DECREMENT) action_exprexpression) 
               ;

  633       multi_column_for_loop
     1024      : 'FOR' paren_column_list 'IN' '(' (subquery | '(' expressions? ')') ')' 
               ;

  634       unary_expression
     1025      : ('-' | '+') unary_expression 
     1026      | 'PRIOR' unary_expression 
     1027      | 'CONNECT_BY_ROOT' unary_expression 
     1028      | 'NEW' unary_expression 
     1029      | 'DISTINCT' unary_expression 
     1030      | 'ALL' unary_expression 
     1031      | case_statement 
     1032      | quantified_expression 
     1033      | standard_function 
     1034      | atom 
               ;

  635       case_statement
     1035      : searched_case_statement 
     1036      | simple_case_statement 
               ;

  636       simple_case_statement
     1037      : label_name? 'ck1CASE' expression simple_case_when_part+ case_else_part? 'END' CASE? label_name? 
               ;

  637       simple_case_when_part
     1038      : 'WHEN' expression 'THEN' (seq_of_statements | expression) 
               ;

  638       searched_case_statement
     1039      : label_name? 'ck1CASE' searched_case_when_part+ case_else_part? 'END' CASE? label_name? 
               ;

  639       searched_case_when_part
     1040      : 'WHEN' expression 'THEN' (seq_of_statements | expression) 
               ;

  640       case_else_part
     1041      : 'ELSE' (seq_of_statements | expression) 
               ;

  641       atom
     1042      : table_element outer_join_sign 
     1043      | bind_variable 
     1044      | constant 
     1045      | general_element 
     1046      | '(' subquery ')' subquery_operation_part* 
     1047      | '(' expressions ')' 
               ;

  642       quantified_expression
     1048      : (SOME | EXISTS | ALL | ANY) ('(' select_only_statement ')' | '(' expression ')') 
               ;

  643       string_function
     1049      : 'SUBSTR' '(' expression ',' expression (',' expression)? ')' 
     1050      | 'TO_CHAR' '(' (table_element | standard_function | expression) (',' quoted_string)? (',' quoted_string)? ')' 
     1051      | 'DECODE' '(' expressions ')' 
     1052      | 'CHR' '(' concatenation 'USING' 'NCHAR_CS' ')' 
     1053      | 'NVL' '(' expression ',' expression ')' 
     1054      | 'TRIM' '(' ((LEADING | TRAILING | BOTH)? quoted_string? FROM)? concatenation ')' 
     1055      | 'TO_DATE' '(' (table_element | standard_function | expression) (',' quoted_string)? ')' 
               ;

  644       standard_function
     1056      : string_function 
     1057      | numeric_function_wrapper 
     1058      | other_function 
               ;

  645       literal
     1059      : 'CHAR_STRING' 
     1060      | string_function 
     1061      | numeric 
     1062      | 'MAXVALUE' 
               ;

  646       numeric_function_wrapper
     1063      : numeric_function (single_column_for_loop | multi_column_for_loop)? 
               ;

  647       numeric_function
     1064      : 'SUM' '(' (DISTINCT | ALL)? expression ')' 
     1065      | 'COUNT' '(' (ASTERISK | ((DISTINCT | UNIQUE | ALL)? concatenation)?) ')' over_clause? 
     1066      | 'ROUND' '(' expression (',' UNSIGNED_INTEGER)? ')' 
     1067      | 'AVG' '(' (DISTINCT | ALL)? expression ')' 
     1068      | 'MAX' '(' (DISTINCT | ALL)? expression ')' 
     1069      | 'LEAST' '(' expressions ')' 
     1070      | 'GREATEST' '(' expressions ')' 
               ;

  648       listagg_overflow_clause
     1071      : 'ON' 'OVERFLOW' (ERROR | TRUNCATE) CHAR_STRING? ((WITH | WITHOUT) COUNT)? 
               ;

  649       other_function
     1072      : over_clause_keyword function_argument_analytic over_clause? 
     1073      | regular_id function_argument_modeling using_clause? 
     1074      | 'COUNT' '(' (ASTERISK | (DISTINCT | UNIQUE | ALL)? concatenation) ')' over_clause? 
     1075      | (CAST | XMLCAST) '(' (MULTISET '(' subquery ')' | concatenation) 'AS' type_spec ')' 
     1076      | 'COALESCE' '(' table_element (',' (numeric | quoted_string))? ')' 
     1077      | 'COLLECT' '(' (DISTINCT | UNIQUE)? concatenation collect_order_by_part? ')' 
     1078      | within_or_over_clause_keyword function_argument within_or_over_part+ 
     1079      | 'LISTAGG' '(' (ALL | DISTINCT | UNIQUE)? argument (',' CHAR_STRING)? listagg_overflow_clause? ')' (WITHIN GROUP '(' order_by_clause ')')? over_clause? 
     1080      | cursor_name (PERCENT_ISOPEN | PERCENT_FOUND | PERCENT_NOTFOUND | PERCENT_ROWCOUNT) 
     1081      | 'DECOMPOSE' '(' concatenation (CANONICAL | COMPATIBILITY)? ')' 
     1082      | 'EXTRACT' '(' regular_id 'FROM' concatenation ')' 
     1083      | (FIRST_VALUE | LAST_VALUE) function_argument_analytic respect_or_ignore_nulls? over_clause 
     1084      | standard_prediction_function_keyword '(' expressions cost_matrix_clause? using_clause? ')' 
     1085      | 'TRANSLATE' '(' expression (USING (CHAR_CS | NCHAR_CS))? (',' expression)* ')' 
     1086      | 'TREAT' '(' expression 'AS' REF? type_spec ')' 
     1087      | 'TRIM' '(' ((LEADING | TRAILING | BOTH)? quoted_string? FROM)? concatenation ')' 
     1088      | 'XMLAGG' '(' expression order_by_clause? ')' ('.' general_element_part)? 
     1089      | (XMLCOLATTVAL | XMLFOREST) '(' xml_multiuse_expression_element (',' xml_multiuse_expression_element)* ')' ('.' general_element_part)? 
     1090      | 'XMLELEMENT' '(' (ENTITYESCAPING | NOENTITYESCAPING)? (NAME | EVALNAME)? expression (',' xml_attributes_clause)? (',' expression column_alias?)* ')' ('.' general_element_part)? 
     1091      | 'XMLEXISTS' '(' expression xml_passing_clause? ')' 
     1092      | 'XMLPARSE' '(' (DOCUMENT | CONTENT) concatenation WELLFORMED? ')' ('.' general_element_part)? 
     1093      | 'XMLPI' '(' (NAME identifier | EVALNAME concatenation) (',' concatenation)? ')' ('.' general_element_part)? 
     1094      | 'XMLQUERY' '(' concatenation xml_passing_clause? 'RETURNING' 'CONTENT' (NULL_ ON EMPTY)? ')' ('.' general_element_part)? 
     1095      | 'XMLROOT' '(' concatenation (',' xmlroot_param_version_part)? (',' xmlroot_param_standalone_part)? ')' ('.' general_element_part)? 
     1096      | 'XMLSERIALIZE' '(' (DOCUMENT | CONTENT) concatenation (AS type_spec)? xmlserialize_param_enconding_part? xmlserialize_param_version_part? xmlserialize_param_ident_part? ((HIDE | SHOW) DEFAULTS)? ')' ('.' general_element_part)? 
     1097      | xmltable 
               ;

  650       over_clause_keyword
     1098      : 'AVG' 
     1099      | 'CORR' 
     1100      | 'LAG' 
     1101      | 'LEAD' 
     1102      | 'MAX' 
     1103      | 'MEDIAN' 
     1104      | 'MIN' 
     1105      | 'NTILE' 
     1106      | 'RATIO_TO_REPORT' 
     1107      | 'ROW_NUMBER' 
     1108      | 'SUM' 
     1109      | 'VARIANCE' 
     1110      | 'REGR_' 
     1111      | 'STDDEV' 
     1112      | 'VAR_' 
     1113      | 'COVAR_' 
               ;

  651       within_or_over_clause_keyword
     1114      : 'CUME_DIST' 
     1115      | 'DENSE_RANK' 
     1116      | 'PERCENT_RANK' 
     1117      | 'PERCENTILE_CONT' 
     1118      | 'PERCENTILE_DISC' 
     1119      | 'RANK' 
               ;

  652       standard_prediction_function_keyword
     1120      : 'PREDICTION' 
     1121      | 'PREDICTION_BOUNDS' 
     1122      | 'PREDICTION_COST' 
     1123      | 'PREDICTION_DETAILS' 
     1124      | 'PREDICTION_PROBABILITY' 
     1125      | 'PREDICTION_SET' 
               ;

  653       over_clause
     1126      : 'OVER' '(' query_partition_clause? (order_by_clause windowing_clause?)? ')' 
               ;

  654       windowing_clause
     1127      : windowing_type (BETWEEN windowing_elements AND windowing_elements | windowing_elements) 
               ;

  655       windowing_type
     1128      : 'ROWS' 
     1129      | 'RANGE' 
               ;

  656       windowing_elements
     1130      : 'UNBOUNDED' 'PRECEDING' 
     1131      | 'CURRENT' 'ROW' 
     1132      | concatenation (PRECEDING | FOLLOWING) 
               ;

  657       using_clause
     1133      : 'USING' (ASTERISK | using_element (',' using_element)*) 
               ;

  658       using_element
     1134      : (IN OUT? | OUT)? select_list_elements 
               ;

  659       collect_order_by_part
     1135      : 'ORDER' 'BY' concatenation 
               ;

  660       within_or_over_part
     1136      : 'WITHIN' 'GROUP' '(' order_by_clause ')' 
     1137      | over_clause 
               ;

  661       cost_matrix_clause
     1138      : 'COST' (MODEL AUTO? | '(' cost_class_name (',' cost_class_name)* ')' VALUES '(' expressions? ')') 
               ;

  662       xml_passing_clause
     1139      : 'PASSING' (BY VALUE)? expression column_alias? (',' expression column_alias?)* 
               ;

  663       xml_attributes_clause
     1140      : 'XMLATTRIBUTES' '(' (ENTITYESCAPING | NOENTITYESCAPING)? (SCHEMACHECK | NOSCHEMACHECK)? xml_multiuse_expression_element (',' xml_multiuse_expression_element)* ')' 
               ;

  664       xml_namespaces_clause
     1141      : 'XMLNAMESPACES' '(' (concatenation column_alias)? (',' concatenation column_alias)* xml_general_default_part? ')' 
               ;

  665       xml_table_column
     1142      : xml_column_name (FOR ORDINALITY | type_spec (PATH concatenation)? xml_general_default_part?) 
               ;

  666       xml_general_default_part
     1143      : 'DEFAULT' concatenation 
               ;

  667       xml_multiuse_expression_element
     1144      : expression (AS (id_expression | EVALNAME concatenation))? 
               ;

  668       xmlroot_param_version_part
     1145      : 'VERSION' (NO VALUE | expression) 
               ;

  669       xmlroot_param_standalone_part
     1146      : 'STANDALONE' (YES | NO VALUE?) 
               ;

  670       xmlserialize_param_enconding_part
     1147      : 'ENCODING' concatenation 
               ;

  671       xmlserialize_param_version_part
     1148      : 'VERSION' concatenation 
               ;

  672       xmlserialize_param_ident_part
     1149      : 'NO' 'INDENT' 
     1150      | 'INDENT' (SIZE '=' concatenation)? 
               ;

  673       sql_plus_command
     1151      : '/' 
     1152      | 'EXIT' 
     1153      | 'PROMPT_MESSAGE' 
     1154      | 'SHOW' (ERR | ERRORS) 
     1155      | 'START_CMD' 
     1156      | whenever_command 
     1157      | set_command 
               ;

  674       whenever_command
     1158      : 'WHENEVER' (SQLERROR | OSERROR) (EXIT (SUCCESS | FAILURE | WARNING | variable_name) (COMMIT | ROLLBACK) | CONTINUE (COMMIT | ROLLBACK | NONE)) 
               ;

  675       set_command
     1159      : 'SET' regular_id (CHAR_STRING | ON | OFF | numeric | regular_id) 
               ;

  676       partition_extension_clause
     1160      : (SUBPARTITION | PARTITION) FOR? '(' expressions? ')' 
               ;

  677       column_alias
     1161      : AS? (identifier | quoted_string) 
     1162      | 'AS' 
               ;

  678       table_alias
     1163      : identifier 
     1164      | quoted_string 
               ;

  679       where_clause
     1165      : 'WHERE' (CURRENT OF cursor_name | expression) 
               ;

  680       into_clause
     1166      : (BULK COLLECT)? 'INTO' (general_element | bind_variable) (',' (general_element | bind_variable))* 
               ;

  681       xml_column_name
     1167      : identifier 
     1168      | quoted_string 
               ;

  682       cost_class_name
     1169      : identifier 
               ;

  683       attribute_name
     1170      : identifier 
               ;

  684       savepoint_name
     1171      : identifier 
               ;

  685       rollback_segment_name
     1172      : identifier 
               ;

  686       table_var_name
     1173      : identifier 
               ;

  687       schema_name
     1174      : identifier 
               ;

  688       routine_name
     1175      : identifier ('.' id_expression)* ('@' link_name)? 
               ;

  689       package_name
     1176      : identifier 
               ;

  690       implementation_type_name
     1177      : identifier ('.' id_expression)? 
               ;

  691       parameter_name
     1178      : identifier 
               ;

  692       reference_model_name
     1179      : identifier 
               ;

  693       main_model_name
     1180      : identifier 
               ;

  694       container_tableview_name
     1181      : identifier ('.' id_expression)? 
               ;

  695       aggregate_function_name
     1182      : identifier ('.' id_expression)* 
               ;

  696       query_name
     1183      : identifier 
               ;

  697       grantee_name
     1184      : id_expression identified_by? 
               ;

  698       role_name
     1185      : id_expression 
     1186      | 'CONNECT' 
               ;

  699       constraint_name
     1187      : identifier ('.' id_expression)* ('@' link_name)? 
               ;

  700       label_name
     1188      : id_expression 
               ;

  701       type_name
     1189      : id_expression ('.' id_expression)* 
               ;

  702       sequence_name
     1190      : id_expression ('.' id_expression)* 
               ;

  703       exception_name
     1191      : identifier ('.' id_expression)* 
               ;

  704       function_name
     1192      : identifier ('.' id_expression)? 
               ;

  705       procedure_name
     1193      : identifier ('.' id_expression)? 
               ;

  706       trigger_name
     1194      : identifier ('.' id_expression)? 
               ;

  707       variable_name
     1195      : (INTRODUCER char_set_name)? id_expression ('.' id_expression)? 
     1196      | bind_variable 
               ;

  708       index_name
     1197      : identifier ('.' id_expression)? 
               ;

  709       cursor_name
     1198      : general_element 
     1199      | bind_variable 
               ;

  710       record_name
     1200      : identifier 
     1201      | bind_variable 
               ;

  711       collection_name
     1202      : identifier ('.' id_expression)? 
               ;

  712       link_name
     1203      : identifier 
               ;

  713       column_name
     1204      : identifier ('.' id_expression)* 
               ;

  714       tableview_name
     1205      : identifier ('.' id_expression)? (AT_SIGN link_name (PERIOD link_name)? | partition_extension_clause)? 
     1206      | xmltable outer_join_sign? 
               ;

  715       xmltable
     1207      : 'XMLTABLE' '(' (xml_namespaces_clause ',')? concatenation xml_passing_clause? (COLUMNS xml_table_column (',' xml_table_column)*)? ')' ('.' general_element_part)? 
               ;

  716       char_set_name
     1208      : id_expression ('.' id_expression)* 
               ;

  717       synonym_name
     1209      : identifier 
               ;

  718       schema_object_name
     1210      : id_expression 
               ;

  719       dir_object_name
     1211      : id_expression 
               ;

  720       user_object_name
     1212      : id_expression 
               ;

  721       grant_object_name
     1213      : tableview_name 
     1214      | 'USER' user_object_name (',' user_object_name)* 
     1215      | 'DIRECTORY' dir_object_name 
     1216      | 'EDITION' schema_object_name 
     1217      | 'MINING' 'MODEL' schema_object_name 
     1218      | 'JAVA' (SOURCE | RESOURCE) schema_object_name 
     1219      | 'SQL' 'TRANSLATION' 'PROFILE' schema_object_name 
               ;

  722       column_list
     1220      : column_name (',' column_name)* 
               ;

  723       paren_column_list
     1221      : 'LEFT_PAREN' column_list 'RIGHT_PAREN' 
               ;

  724       keep_clause
     1222      : 'KEEP' '(' 'DENSE_RANK' (FIRST | LAST) order_by_clause ')' over_clause? 
               ;

  725       function_argument
     1223      : '(' (argument (',' argument)*)? ')' keep_clause? 
               ;

  726       function_argument_analytic
     1224      : '(' (argument respect_or_ignore_nulls? (',' argument respect_or_ignore_nulls?)*)? ')' keep_clause? 
               ;

  727       function_argument_modeling
     1225      : '(' column_name (',' (numeric | NULL_) (',' (numeric | NULL_))?)? 'USING' (tableview_name '.' ASTERISK | ASTERISK | expression column_alias? (',' expression column_alias?)*) ')' keep_clause? 
               ;

  728       respect_or_ignore_nulls
     1226      : (RESPECT | IGNORE) 'NULLS' 
               ;

  729       argument
     1227      : (identifier '=' '>')? expression 
               ;

  730       type_spec
     1228      : datatype 
     1229      | REF? type_name (PERCENT_ROWTYPE | PERCENT_TYPE)? 
               ;

  731       datatype
     1230      : native_datatype_element precision_part? (WITH LOCAL? TIME ZONE | CHARACTER SET char_set_name)? 
     1231      | 'INTERVAL' (YEAR | DAY) ('(' expression ')')? 'TO' (MONTH | SECOND) ('(' expression ')')? 
               ;

  732       precision_part
     1232      : '(' (numeric | ASTERISK) (',' (numeric | numeric_negative))? (CHAR | BYTE)? ')' 
               ;

  733       native_datatype_element
     1233      : 'BINARY_INTEGER' 
     1234      | 'PLS_INTEGER' 
     1235      | 'NATURAL' 
     1236      | 'BINARY_FLOAT' 
     1237      | 'BINARY_DOUBLE' 
     1238      | 'NATURALN' 
     1239      | 'POSITIVE' 
     1240      | 'POSITIVEN' 
     1241      | 'SIGNTYPE' 
     1242      | 'SIMPLE_INTEGER' 
     1243      | 'NVARCHAR2' 
     1244      | 'DEC' 
     1245      | 'INTEGER' 
     1246      | 'INT' 
     1247      | 'NUMERIC' 
     1248      | 'SMALLINT' 
     1249      | 'NUMBER' 
     1250      | 'DECIMAL' 
     1251      | 'DOUBLE' PRECISION? 
     1252      | 'FLOAT' 
     1253      | 'REAL' 
     1254      | 'NCHAR' 
     1255      | 'LONG' RAW? 
     1256      | 'CHAR' 
     1257      | 'CHARACTER' 
     1258      | 'VARCHAR2' 
     1259      | 'VARCHAR' 
     1260      | 'STRING' 
     1261      | 'RAW' 
     1262      | 'BOOLEAN' 
     1263      | 'DATE' 
     1264      | 'ROWID' 
     1265      | 'UROWID' 
     1266      | 'YEAR' 
     1267      | 'MONTH' 
     1268      | 'DAY' 
     1269      | 'HOUR' 
     1270      | 'MINUTE' 
     1271      | 'SECOND' 
     1272      | 'TIMEZONE_HOUR' 
     1273      | 'TIMEZONE_MINUTE' 
     1274      | 'TIMEZONE_REGION' 
     1275      | 'TIMEZONE_ABBR' 
     1276      | 'TIMESTAMP' 
     1277      | 'TIMESTAMP_UNCONSTRAINED' 
     1278      | 'TIMESTAMP_TZ_UNCONSTRAINED' 
     1279      | 'TIMESTAMP_LTZ_UNCONSTRAINED' 
     1280      | 'YMINTERVAL_UNCONSTRAINED' 
     1281      | 'DSINTERVAL_UNCONSTRAINED' 
     1282      | 'BFILE' 
     1283      | 'BLOB' 
     1284      | 'CLOB' 
     1285      | 'NCLOB' 
     1286      | 'MLSLABEL' 
               ;

  734       bind_variable
     1287      : (BINDVAR | ':' UNSIGNED_INTEGER) (INDICATOR? (BINDVAR | ':' UNSIGNED_INTEGER))? ('.' general_element_part)* 
               ;

  735       general_element
     1288      : general_element_part ('.' general_element_part)* 
               ;

  736       general_element_part
     1289      : (INTRODUCER char_set_name)? id_expression ('.' id_expression)* ('@' link_name)? function_argument? 
               ;

  737       table_element
     1290      : (INTRODUCER char_set_name)? id_expression ('.' id_expression)* 
               ;

  738       object_privilege
     1291      : 'ALL' PRIVILEGES? 
     1292      | 'ALTER' 
     1293      | 'DEBUG' 
     1294      | 'DELETE' 
     1295      | 'EXECUTE' 
     1296      | 'FLASHBACK' 'ARCHIVE' 
     1297      | 'INDEX' 
     1298      | 'INHERIT' 'PRIVILEGES' 
     1299      | 'INSERT' 
     1300      | 'KEEP' 'SEQUENCE' 
     1301      | 'MERGE' 'VIEW' 
     1302      | 'ON' 'COMMIT' 'REFRESH' 
     1303      | 'QUERY' 'REWRITE' 
     1304      | 'READ' 
     1305      | 'REFERENCES' 
     1306      | 'SELECT' 
     1307      | 'TRANSLATE' 'SQL' 
     1308      | 'UNDER' 
     1309      | 'UPDATE' 
     1310      | 'USE' 
     1311      | 'WRITE' 
               ;

  739       system_privilege
     1312      : 'ALL' 'PRIVILEGES' 
     1313      | 'ADVISOR' 
     1314      | 'ADMINISTER' ANY? 'SQL' 'TUNING' 'SET' 
     1315      | (ALTER | CREATE | DROP) 'ANY' 'SQL' 'PROFILE' 
     1316      | 'ADMINISTER' 'SQL' 'MANAGEMENT' 'OBJECT' 
     1317      | 'CREATE' ANY? 'CLUSTER' 
     1318      | (ALTER | DROP) 'ANY' 'CLUSTER' 
     1319      | (CREATE | DROP) 'ANY' 'CONTEXT' 
     1320      | 'EXEMPT' 'REDACTION' 'POLICY' 
     1321      | 'ALTER' 'DATABASE' 
     1322      | (ALTER | CREATE) PUBLIC? 'DATABASE' 'LINK' 
     1323      | 'DROP' 'PUBLIC' 'DATABASE' 'LINK' 
     1324      | 'DEBUG' 'CONNECT' 'SESSION' 
     1325      | 'DEBUG' 'ANY' 'PROCEDURE' 
     1326      | 'ANALYZE' 'ANY' 'DICTIONARY' 
     1327      | 'CREATE' ANY? 'DIMENSION' 
     1328      | (ALTER | DROP) 'ANY' 'DIMENSION' 
     1329      | (CREATE | DROP) 'ANY' 'DIRECTORY' 
     1330      | (CREATE | DROP) 'ANY' 'EDITION' 
     1331      | 'FLASHBACK' (ARCHIVE ADMINISTER | ANY TABLE) 
     1332      | (ALTER | CREATE | DROP) 'ANY' 'INDEX' 
     1333      | 'CREATE' ANY? 'INDEXTYPE' 
     1334      | (ALTER | DROP | EXECUTE) 'ANY' 'INDEXTYPE' 
     1335      | 'CREATE' (ANY | EXTERNAL)? 'JOB' 
     1336      | 'EXECUTE' 'ANY' (CLASS | PROGRAM) 
     1337      | 'MANAGE' 'SCHEDULER' 
     1338      | 'ADMINISTER' 'KEY' 'MANAGEMENT' 
     1339      | 'CREATE' ANY? 'LIBRARY' 
     1340      | (ALTER | DROP | EXECUTE) 'ANY' 'LIBRARY' 
     1341      | 'LOGMINING' 
     1342      | 'CREATE' ANY? 'MATERIALIZED' 'VIEW' 
     1343      | (ALTER | DROP) 'ANY' 'MATERIALIZED' 'VIEW' 
     1344      | GLOBAL? 'QUERY' 'REWRITE' 
     1345      | 'ON' 'COMMIT' 'REFRESH' 
     1346      | 'CREATE' ANY? 'MINING' 'MODEL' 
     1347      | (ALTER | DROP | SELECT | COMMENT) 'ANY' 'MINING' 'MODEL' 
     1348      | 'CREATE' ANY? 'CUBE' 
     1349      | (ALTER | DROP | SELECT | UPDATE) 'ANY' 'CUBE' 
     1350      | 'CREATE' ANY? 'MEASURE' 'FOLDER' 
     1351      | (DELETE | DROP | INSERT) 'ANY' 'MEASURE' 'FOLDER' 
     1352      | 'CREATE' ANY? 'CUBE' 'DIMENSION' 
     1353      | (ALTER | DELETE | DROP | INSERT | SELECT | UPDATE) 'ANY' 'CUBE' 'DIMENSION' 
     1354      | 'CREATE' ANY? 'CUBE' 'BUILD' 'PROCESS' 
     1355      | (DROP | UPDATE) 'ANY' 'CUBE' 'BUILD' 'PROCESS' 
     1356      | 'CREATE' ANY? 'OPERATOR' 
     1357      | (ALTER | DROP | EXECUTE) 'ANY' 'OPERATOR' 
     1358      | (CREATE | ALTER | DROP) 'ANY' 'OUTLINE' 
     1359      | 'CREATE' 'PLUGGABLE' 'DATABASE' 
     1360      | 'SET' 'CONTAINER' 
     1361      | 'CREATE' ANY? 'PROCEDURE' 
     1362      | (ALTER | DROP | EXECUTE) 'ANY' 'PROCEDURE' 
     1363      | (CREATE | ALTER | DROP) 'PROFILE' 
     1364      | 'CREATE' 'ROLE' 
     1365      | (ALTER | DROP | GRANT) 'ANY' 'ROLE' 
     1366      | (CREATE | ALTER | DROP) 'ROLLBACK' 'SEGMENT' 
     1367      | 'CREATE' ANY? 'SEQUENCE' 
     1368      | (ALTER | DROP | SELECT) 'ANY' 'SEQUENCE' 
     1369      | (ALTER | CREATE | RESTRICTED) 'SESSION' 
     1370      | 'ALTER' 'RESOURCE' 'COST' 
     1371      | 'CREATE' ANY? 'SQL' 'TRANSLATION' 'PROFILE' 
     1372      | (ALTER | DROP | USE) 'ANY' 'SQL' 'TRANSLATION' 'PROFILE' 
     1373      | 'TRANSLATE' 'ANY' 'SQL' 
     1374      | 'CREATE' ANY? 'SYNONYM' 
     1375      | 'DROP' 'ANY' 'SYNONYM' 
     1376      | (CREATE | DROP) 'PUBLIC' 'SYNONYM' 
     1377      | 'CREATE' ANY? 'TABLE' 
     1378      | (ALTER | BACKUP | COMMENT | DELETE | DROP | INSERT | LOCK | READ | SELECT | UPDATE) 'ANY' 'TABLE' 
     1379      | (CREATE | ALTER | DROP | MANAGE | UNLIMITED) 'TABLESPACE' 
     1380      | 'CREATE' ANY? 'TRIGGER' 
     1381      | (ALTER | DROP) 'ANY' 'TRIGGER' 
     1382      | 'ADMINISTER' 'DATABASE' 'TRIGGER' 
     1383      | 'CREATE' ANY? 'TYPE' 
     1384      | (ALTER | DROP | EXECUTE | UNDER) 'ANY' 'TYPE' 
     1385      | (CREATE | ALTER | DROP) 'USER' 
     1386      | 'CREATE' ANY? 'VIEW' 
     1387      | (DROP | UNDER | MERGE) 'ANY' 'VIEW' 
     1388      | (ANALYZE | AUDIT) 'ANY' 
     1389      | 'BECOME' 'USER' 
     1390      | 'CHANGE' 'NOTIFICATION' 
     1391      | 'EXEMPT' 'ACCESS' 'POLICY' 
     1392      | 'FORCE' ANY? 'TRANSACTION' 
     1393      | 'GRANT' 'ANY' OBJECT? 'PRIVILEGE' 
     1394      | 'INHERIT' 'ANY' 'PRIVILEGES' 
     1395      | 'KEEP' 'DATE' 'TIME' 
     1396      | 'KEEP' 'SYSGUID' 
     1397      | 'PURGE' 'DBA_RECYCLEBIN' 
     1398      | 'RESUMABLE' 
     1399      | 'SELECT' 'ANY' (DICTIONARY | TRANSACTION) 
     1400      | 'SYSBACKUP' 
     1401      | 'SYSDBA' 
     1402      | 'SYSDG' 
     1403      | 'SYSKM' 
     1404      | 'SYSOPER' 
               ;

  740       constant
     1405      : 'TIMESTAMP' (quoted_string | bind_variable) (AT TIME ZONE quoted_string)? 
     1406      | 'INTERVAL' (quoted_string | bind_variable | general_element_part) (YEAR | MONTH | DAY | HOUR | MINUTE | SECOND) ('(' (UNSIGNED_INTEGER | bind_variable) (',' (UNSIGNED_INTEGER | bind_variable))? ')')? (TO (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?))? 
     1407      | numeric 
     1408      | 'DATE' quoted_string 
     1409      | quoted_string 
     1410      | 'NULL_' 
     1411      | 'TRUE' 
     1412      | 'FALSE' 
     1413      | 'DBTIMEZONE' 
     1414      | 'SESSIONTIMEZONE' 
     1415      | 'MINVALUE' 
     1416      | 'MAXVALUE' 
     1417      | 'DEFAULT' 
               ;

  741       numeric
     1418      : 'UNSIGNED_INTEGER' 
     1419      | 'APPROXIMATE_NUM_LIT' 
               ;

  742       numeric_negative
     1420      : 'MINUS_SIGN' numeric 
               ;

  743       quoted_string
     1421      : variable_name 
     1422      | 'CHAR_STRING' 
     1423      | 'NATIONAL_CHAR_STRING_LIT' 
               ;

  744       identifier
     1424      : (INTRODUCER char_set_name)? id_expression 
               ;

  745       id_expression
     1425      : regular_id 
     1426      | 'DELIMITED_ID' 
               ;

  746       outer_join_sign
     1427      : '(' '+' ')' 
               ;

  747       regular_id
     1428      : non_reserved_keywords_pre12c 
     1429      | non_reserved_keywords_in_12c 
     1430      | 'REGULAR_ID' 
     1431      | 'A_LETTER' 
     1432      | 'AGENT' 
     1433      | 'AGGREGATE' 
     1434      | 'ANALYZE' 
     1435      | 'AUTONOMOUS_TRANSACTION' 
     1436      | 'BATCH' 
     1437      | 'BINARY_INTEGER' 
     1438      | 'BOOLEAN' 
     1439      | 'C_LETTER' 
     1440      | 'CHAR' 
     1441      | 'CLUSTER' 
     1442      | 'CONSTRUCTOR' 
     1443      | 'CUSTOMDATUM' 
     1444      | 'DECIMAL' 
     1445      | 'DELETE' 
     1446      | 'DETERMINISTIC' 
     1447      | 'DSINTERVAL_UNCONSTRAINED' 
     1448      | 'ERR' 
     1449      | 'EXCEPTION' 
     1450      | 'EXCEPTION_INIT' 
     1451      | 'EXCEPTIONS' 
     1452      | 'EXISTS' 
     1453      | 'EXIT' 
     1454      | 'FLOAT' 
     1455      | 'FORALL' 
     1456      | 'INDICES' 
     1457      | 'INOUT' 
     1458      | 'INTEGER' 
     1459      | 'LANGUAGE' 
     1460      | 'LONG' 
     1461      | 'LOOP' 
     1462      | 'NUMBER' 
     1463      | 'ORADATA' 
     1464      | 'OSERROR' 
     1465      | 'OUT' 
     1466      | 'OVERRIDING' 
     1467      | 'PARALLEL_ENABLE' 
     1468      | 'PIPELINED' 
     1469      | 'PLS_INTEGER' 
     1470      | 'POSITIVE' 
     1471      | 'POSITIVEN' 
     1472      | 'PRAGMA' 
     1473      | 'RAISE' 
     1474      | 'RAW' 
     1475      | 'RECORD' 
     1476      | 'REF' 
     1477      | 'RENAME' 
     1478      | 'RESTRICT_REFERENCES' 
     1479      | 'RESULT' 
     1480      | 'SELF' 
     1481      | 'SERIALLY_REUSABLE' 
     1482      | 'SET' 
     1483      | 'SIGNTYPE' 
     1484      | 'SIMPLE_INTEGER' 
     1485      | 'SMALLINT' 
     1486      | 'SQLDATA' 
     1487      | 'SQLERROR' 
     1488      | 'SUBTYPE' 
     1489      | 'TIMESTAMP_LTZ_UNCONSTRAINED' 
     1490      | 'TIMESTAMP_TZ_UNCONSTRAINED' 
     1491      | 'TIMESTAMP_UNCONSTRAINED' 
     1492      | 'TRIGGER' 
     1493      | 'VARCHAR' 
     1494      | 'VARCHAR2' 
     1495      | 'VARIABLE' 
     1496      | 'WARNING' 
     1497      | 'WHILE' 
     1498      | 'XMLAGG' 
     1499      | 'YMINTERVAL_UNCONSTRAINED' 
     1500      | 'REGR_' 
     1501      | 'VAR_' 
     1502      | 'COVAR_' 
               ;

  748       non_reserved_keywords_in_12c
     1503      : 'ACL' 
     1504      | 'ACTION' 
     1505      | 'ACTIONS' 
     1506      | 'ACTIVE' 
     1507      | 'ACTIVE_DATA' 
     1508      | 'ACTIVITY' 
     1509      | 'ADAPTIVE_PLAN' 
     1510      | 'ADVANCED' 
     1511      | 'AFD_DISKSTRING' 
     1512      | 'ANOMALY' 
     1513      | 'ANSI_REARCH' 
     1514      | 'APPLICATION' 
     1515      | 'APPROX_COUNT_DISTINCT' 
     1516      | 'ARCHIVAL' 
     1517      | 'ARCHIVED' 
     1518      | 'ASIS' 
     1519      | 'ASSIGN' 
     1520      | 'AUTO_LOGIN' 
     1521      | 'AUTO_REOPTIMIZE' 
     1522      | 'AVRO' 
     1523      | 'BACKGROUND' 
     1524      | 'BATCHSIZE' 
     1525      | 'BATCH_TABLE_ACCESS_BY_ROWID' 
     1526      | 'BEGINNING' 
     1527      | 'BEQUEATH' 
     1528      | 'BITMAP_AND' 
     1529      | 'BSON' 
     1530      | 'CACHING' 
     1531      | 'CALCULATED' 
     1532      | 'CALLBACK' 
     1533      | 'CAPACITY' 
     1534      | 'CDBDEFAULT' 
     1535      | 'CLASSIFIER' 
     1536      | 'CLEANUP' 
     1537      | 'CLIENT' 
     1538      | 'CLUSTER_DETAILS' 
     1539      | 'CLUSTER_DISTANCE' 
     1540      | 'CLUSTERING' 
     1541      | 'COMMON_DATA' 
     1542      | 'COMPONENT' 
     1543      | 'COMPONENTS' 
     1544      | 'CON_DBID_TO_ID' 
     1545      | 'CONDITION' 
     1546      | 'CONDITIONAL' 
     1547      | 'CON_GUID_TO_ID' 
     1548      | 'CON_ID' 
     1549      | 'CON_NAME_TO_ID' 
     1550      | 'CONTAINER_DATA' 
     1551      | 'CONTAINERS' 
     1552      | 'CON_UID_TO_ID' 
     1553      | 'COOKIE' 
     1554      | 'COPY' 
     1555      | 'CREATE_FILE_DEST' 
     1556      | 'CREDENTIAL' 
     1557      | 'CRITICAL' 
     1558      | 'CUBE_AJ' 
     1559      | 'CUBE_SJ' 
     1560      | 'DATAMOVEMENT' 
     1561      | 'DATAOBJ_TO_MAT_PARTITION' 
     1562      | 'DATAPUMP' 
     1563      | 'DATA_SECURITY_REWRITE_LIMIT' 
     1564      | 'DAYS' 
     1565      | 'DB_UNIQUE_NAME' 
     1566      | 'DECORRELATE' 
     1567      | 'DEFINE' 
     1568      | 'DELEGATE' 
     1569      | 'DELETE_ALL' 
     1570      | 'DESTROY' 
     1571      | 'DIMENSIONS' 
     1572      | 'DISABLE_ALL' 
     1573      | 'DISABLE_PARALLEL_DML' 
     1574      | 'DISCARD' 
     1575      | 'DISTRIBUTE' 
     1576      | 'DUPLICATE' 
     1577      | 'DV' 
     1578      | 'EDITIONABLE' 
     1579      | 'ELIM_GROUPBY' 
     1580      | 'EM' 
     1581      | 'ENABLE_ALL' 
     1582      | 'ENABLE_PARALLEL_DML' 
     1583      | 'EQUIPART' 
     1584      | 'EVAL' 
     1585      | 'EVALUATE' 
     1586      | 'EXISTING' 
     1587      | 'EXPRESS' 
     1588      | 'EXTRACTCLOBXML' 
     1589      | 'FACTOR' 
     1590      | 'FAILOVER' 
     1591      | 'FAILURE' 
     1592      | 'FAMILY' 
     1593      | 'FAR' 
     1594      | 'FASTSTART' 
     1595      | 'FEATURE_DETAILS' 
     1596      | 'FETCH' 
     1597      | 'FILE_NAME_CONVERT' 
     1598      | 'FIXED_VIEW_DATA' 
     1599      | 'FORMAT' 
     1600      | 'GATHER_OPTIMIZER_STATISTICS' 
     1601      | 'GET' 
     1602      | 'ILM' 
     1603      | 'INACTIVE' 
     1604      | 'INDEXING' 
     1605      | 'INHERIT' 
     1606      | 'INMEMORY' 
     1607      | 'INMEMORY_PRUNING' 
     1608      | 'INPLACE' 
     1609      | 'INTERLEAVED' 
     1610      | 'JSON' 
     1611      | 'JSON_ARRAY' 
     1612      | 'JSON_ARRAYAGG' 
     1613      | 'JSON_EQUAL' 
     1614      | 'JSON_EXISTS' 
     1615      | 'JSON_EXISTS2' 
     1616      | 'JSONGET' 
     1617      | 'JSON_OBJECT' 
     1618      | 'JSON_OBJECTAGG' 
     1619      | 'JSONPARSE' 
     1620      | 'JSON_QUERY' 
     1621      | 'JSON_SERIALIZE' 
     1622      | 'JSON_TABLE' 
     1623      | 'JSON_TEXTCONTAINS' 
     1624      | 'JSON_TEXTCONTAINS2' 
     1625      | 'JSON_VALUE' 
     1626      | 'KEYSTORE' 
     1627      | 'LABEL' 
     1628      | 'LAX' 
     1629      | 'LIFECYCLE' 
     1630      | 'LINEAR' 
     1631      | 'LOCKING' 
     1632      | 'LOGMINING' 
     1633      | 'MAP' 
     1634      | 'MATCH' 
     1635      | 'MATCHES' 
     1636      | 'MATCH_NUMBER' 
     1637      | 'MATCH_RECOGNIZE' 
     1638      | 'MAX_SHARED_TEMP_SIZE' 
     1639      | 'MEMCOMPRESS' 
     1640      | 'METADATA' 
     1641      | 'MODEL_NB' 
     1642      | 'MODEL_SV' 
     1643      | 'MODIFICATION' 
     1644      | 'MODULE' 
     1645      | 'MONTHS' 
     1646      | 'MULTIDIMENSIONAL' 
     1647      | 'NEG' 
     1648      | 'NO_ADAPTIVE_PLAN' 
     1649      | 'NO_ANSI_REARCH' 
     1650      | 'NO_AUTO_REOPTIMIZE' 
     1651      | 'NO_BATCH_TABLE_ACCESS_BY_ROWID' 
     1652      | 'NO_CLUSTERING' 
     1653      | 'NO_COMMON_DATA' 
     1654      | 'NOCOPY' 
     1655      | 'NO_DATA_SECURITY_REWRITE' 
     1656      | 'NO_DECORRELATE' 
     1657      | 'NO_ELIM_GROUPBY' 
     1658      | 'NO_GATHER_OPTIMIZER_STATISTICS' 
     1659      | 'NO_INMEMORY' 
     1660      | 'NO_INMEMORY_PRUNING' 
     1661      | 'NOKEEP' 
     1662      | 'NONEDITIONABLE' 
     1663      | 'NO_OBJECT_LINK' 
     1664      | 'NO_PARTIAL_JOIN' 
     1665      | 'NO_PARTIAL_ROLLUP_PUSHDOWN' 
     1666      | 'NOPARTITION' 
     1667      | 'NO_PQ_CONCURRENT_UNION' 
     1668      | 'NO_PQ_REPLICATE' 
     1669      | 'NO_PQ_SKEW' 
     1670      | 'NO_PX_FAULT_TOLERANCE' 
     1671      | 'NORELOCATE' 
     1672      | 'NOREPLAY' 
     1673      | 'NO_ROOT_SW_FOR_LOCAL' 
     1674      | 'NO_SQL_TRANSLATION' 
     1675      | 'NO_USE_CUBE' 
     1676      | 'NO_USE_VECTOR_AGGREGATION' 
     1677      | 'NO_VECTOR_TRANSFORM' 
     1678      | 'NO_VECTOR_TRANSFORM_DIMS' 
     1679      | 'NO_VECTOR_TRANSFORM_FACT' 
     1680      | 'NO_ZONEMAP' 
     1681      | 'OBJ_ID' 
     1682      | 'OFFSET' 
     1683      | 'OLS' 
     1684      | 'OMIT' 
     1685      | 'ONE' 
     1686      | 'ORA_CHECK_ACL' 
     1687      | 'ORA_CHECK_PRIVILEGE' 
     1688      | 'ORA_CLUSTERING' 
     1689      | 'ORA_INVOKING_USER' 
     1690      | 'ORA_INVOKING_USERID' 
     1691      | 'ORA_INVOKING_XS_USER' 
     1692      | 'ORA_INVOKING_XS_USER_GUID' 
     1693      | 'ORA_RAWCOMPARE' 
     1694      | 'ORA_RAWCONCAT' 
     1695      | 'ORA_WRITE_TIME' 
     1696      | 'PARTIAL' 
     1697      | 'PARTIAL_JOIN' 
     1698      | 'PARTIAL_ROLLUP_PUSHDOWN' 
     1699      | 'PAST' 
     1700      | 'PATCH' 
     1701      | 'PATH_PREFIX' 
     1702      | 'PATTERN' 
     1703      | 'PER' 
     1704      | 'PERIOD' 
     1705      | 'PERIOD_KEYWORD' 
     1706      | 'PERMUTE' 
     1707      | 'PLUGGABLE' 
     1708      | 'POOL_16K' 
     1709      | 'POOL_2K' 
     1710      | 'POOL_32K' 
     1711      | 'POOL_4K' 
     1712      | 'POOL_8K' 
     1713      | 'PQ_CONCURRENT_UNION' 
     1714      | 'PQ_DISTRIBUTE_WINDOW' 
     1715      | 'PQ_FILTER' 
     1716      | 'PQ_REPLICATE' 
     1717      | 'PQ_SKEW' 
     1718      | 'PRELOAD' 
     1719      | 'PRETTY' 
     1720      | 'PREV' 
     1721      | 'PRINTBLOBTOCLOB' 
     1722      | 'PRIORITY' 
     1723      | 'PRIVILEGED' 
     1724      | 'PROXY' 
     1725      | 'PRUNING' 
     1726      | 'PX_FAULT_TOLERANCE' 
     1727      | 'REALM' 
     1728      | 'REDEFINE' 
     1729      | 'RELOCATE' 
     1730      | 'RESTART' 
     1731      | 'ROLESET' 
     1732      | 'ROWID_MAPPING_TABLE' 
     1733      | 'RUNNING' 
     1734      | 'SAVE' 
     1735      | 'SCRUB' 
     1736      | 'SDO_GEOM_MBR' 
     1737      | 'SECRET' 
     1738      | 'SERIAL' 
     1739      | 'SERVICE_NAME_CONVERT' 
     1740      | 'SERVICES' 
     1741      | 'SHARING' 
     1742      | 'SHELFLIFE' 
     1743      | 'SOURCE_FILE_DIRECTORY' 
     1744      | 'SOURCE_FILE_NAME_CONVERT' 
     1745      | 'SQL_TRANSLATION_PROFILE' 
     1746      | 'STANDARD_HASH' 
     1747      | 'STANDBYS' 
     1748      | 'STATE' 
     1749      | 'STATEMENT' 
     1750      | 'STREAM' 
     1751      | 'SUBSCRIBE' 
     1752      | 'SUBSET' 
     1753      | 'SUCCESS' 
     1754      | 'SYSBACKUP' 
     1755      | 'SYS_CHECK_PRIVILEGE' 
     1756      | 'SYSDG' 
     1757      | 'SYS_GET_COL_ACLIDS' 
     1758      | 'SYSGUID' 
     1759      | 'SYSKM' 
     1760      | 'SYS_MKXTI' 
     1761      | 'SYSOBJ' 
     1762      | 'SYS_OP_CYCLED_SEQ' 
     1763      | 'SYS_OP_HASH' 
     1764      | 'SYS_OP_KEY_VECTOR_CREATE' 
     1765      | 'SYS_OP_KEY_VECTOR_FILTER' 
     1766      | 'SYS_OP_KEY_VECTOR_FILTER_LIST' 
     1767      | 'SYS_OP_KEY_VECTOR_SUCCEEDED' 
     1768      | 'SYS_OP_KEY_VECTOR_USE' 
     1769      | 'SYS_OP_PART_ID' 
     1770      | 'SYS_OP_ZONE_ID' 
     1771      | 'SYS_RAW_TO_XSID' 
     1772      | 'SYS_XSID_TO_RAW' 
     1773      | 'SYS_ZMAP_FILTER' 
     1774      | 'SYS_ZMAP_REFRESH' 
     1775      | 'TAG' 
     1776      | 'TEXT' 
     1777      | 'TIER' 
     1778      | 'TIES' 
     1779      | 'TO_ACLID' 
     1780      | 'TRANSLATION' 
     1781      | 'TRUST' 
     1782      | 'UCS2' 
     1783      | 'UNCONDITIONAL' 
     1784      | 'UNMATCHED' 
     1785      | 'UNPLUG' 
     1786      | 'UNSUBSCRIBE' 
     1787      | 'USABLE' 
     1788      | 'USE_CUBE' 
     1789      | 'USE_HIDDEN_PARTITIONS' 
     1790      | 'USER_DATA' 
     1791      | 'USER_TABLESPACES' 
     1792      | 'USE_VECTOR_AGGREGATION' 
     1793      | 'USING_NO_EXPAND' 
     1794      | 'UTF16BE' 
     1795      | 'UTF16LE' 
     1796      | 'UTF32' 
     1797      | 'UTF8' 
     1798      | 'V1' 
     1799      | 'V2' 
     1800      | 'VALID_TIME_END' 
     1801      | 'VECTOR_TRANSFORM' 
     1802      | 'VECTOR_TRANSFORM_DIMS' 
     1803      | 'VECTOR_TRANSFORM_FACT' 
     1804      | 'VERIFIER' 
     1805      | 'VIOLATION' 
     1806      | 'VISIBILITY' 
     1807      | 'WEEK' 
     1808      | 'WEEKS' 
     1809      | 'WITH_PLSQL' 
     1810      | 'WRAPPER' 
     1811      | 'XS' 
     1812      | 'YEARS' 
     1813      | 'ZONEMAP' 
               ;

  749       non_reserved_keywords_pre12c
     1814      : 'ABORT' 
     1815      | 'ABS' 
     1816      | 'ACCESSED' 
     1817      | 'ACCESS' 
     1818      | 'ACCOUNT' 
     1819      | 'ACOS' 
     1820      | 'ACTIVATE' 
     1821      | 'ACTIVE_COMPONENT' 
     1822      | 'ACTIVE_FUNCTION' 
     1823      | 'ACTIVE_TAG' 
     1824      | 'ADD_COLUMN' 
     1825      | 'ADD_GROUP' 
     1826      | 'ADD_MONTHS' 
     1827      | 'ADD' 
     1828      | 'ADJ_DATE' 
     1829      | 'ADMINISTER' 
     1830      | 'ADMINISTRATOR' 
     1831      | 'ADMIN' 
     1832      | 'ADVISE' 
     1833      | 'ADVISOR' 
     1834      | 'AFTER' 
     1835      | 'ALIAS' 
     1836      | 'ALLOCATE' 
     1837      | 'ALLOW' 
     1838      | 'ALL_ROWS' 
     1839      | 'ALWAYS' 
     1840      | 'ANALYZE' 
     1841      | 'ANCILLARY' 
     1842      | 'AND_EQUAL' 
     1843      | 'ANTIJOIN' 
     1844      | 'ANYSCHEMA' 
     1845      | 'APPENDCHILDXML' 
     1846      | 'APPEND' 
     1847      | 'APPEND_VALUES' 
     1848      | 'APPLY' 
     1849      | 'ARCHIVELOG' 
     1850      | 'ARCHIVE' 
     1851      | 'ARRAY' 
     1852      | 'ASCII' 
     1853      | 'ASCIISTR' 
     1854      | 'ASIN' 
     1855      | 'ASSEMBLY' 
     1856      | 'ASSOCIATE' 
     1857      | 'ASYNCHRONOUS' 
     1858      | 'ASYNC' 
     1859      | 'ATAN2' 
     1860      | 'ATAN' 
     1861      | 'AT' 
     1862      | 'ATTRIBUTE' 
     1863      | 'ATTRIBUTES' 
     1864      | 'AUTHENTICATED' 
     1865      | 'AUTHENTICATION' 
     1866      | 'AUTHID' 
     1867      | 'AUTHORIZATION' 
     1868      | 'AUTOALLOCATE' 
     1869      | 'AUTOEXTEND' 
     1870      | 'AUTOMATIC' 
     1871      | 'AUTO' 
     1872      | 'AVAILABILITY' 
     1873      | 'AVG' 
     1874      | 'BACKUP' 
     1875      | 'BASICFILE' 
     1876      | 'BASIC' 
     1877      | 'BATCH' 
     1878      | 'BECOME' 
     1879      | 'BEFORE' 
     1880      | 'BEGIN' 
     1881      | 'BEGIN_OUTLINE_DATA' 
     1882      | 'BEHALF' 
     1883      | 'BFILE' 
     1884      | 'BFILENAME' 
     1885      | 'BIGFILE' 
     1886      | 'BINARY_DOUBLE_INFINITY' 
     1887      | 'BINARY_DOUBLE' 
     1888      | 'BINARY_DOUBLE_NAN' 
     1889      | 'BINARY_FLOAT_INFINITY' 
     1890      | 'BINARY_FLOAT' 
     1891      | 'BINARY_FLOAT_NAN' 
     1892      | 'BINARY' 
     1893      | 'BIND_AWARE' 
     1894      | 'BINDING' 
     1895      | 'BIN_TO_NUM' 
     1896      | 'BITAND' 
     1897      | 'BITMAP' 
     1898      | 'BITMAPS' 
     1899      | 'BITMAP_TREE' 
     1900      | 'BITS' 
     1901      | 'BLOB' 
     1902      | 'BLOCK' 
     1903      | 'BLOCK_RANGE' 
     1904      | 'BLOCKSIZE' 
     1905      | 'BLOCKS' 
     1906      | 'BODY' 
     1907      | 'BOTH' 
     1908      | 'BOUND' 
     1909      | 'BRANCH' 
     1910      | 'BREADTH' 
     1911      | 'BROADCAST' 
     1912      | 'BUFFER_CACHE' 
     1913      | 'BUFFER' 
     1914      | 'BUFFER_POOL' 
     1915      | 'BUILD' 
     1916      | 'BULK' 
     1917      | 'BYPASS_RECURSIVE_CHECK' 
     1918      | 'BYPASS_UJVC' 
     1919      | 'BYTE' 
     1920      | 'CACHE_CB' 
     1921      | 'CACHE_INSTANCES' 
     1922      | 'CACHE' 
     1923      | 'CACHE_TEMP_TABLE' 
     1924      | 'CALL' 
     1925      | 'CANCEL' 
     1926      | 'CARDINALITY' 
     1927      | 'CASCADE' 
     1928      | 'CASE' 
     1929      | 'CAST' 
     1930      | 'CATEGORY' 
     1931      | 'CEIL' 
     1932      | 'CELL_FLASH_CACHE' 
     1933      | 'CERTIFICATE' 
     1934      | 'CFILE' 
     1935      | 'CHAINED' 
     1936      | 'CHANGE_DUPKEY_ERROR_INDEX' 
     1937      | 'CHANGE' 
     1938      | 'CHARACTER' 
     1939      | 'CHAR_CS' 
     1940      | 'CHARTOROWID' 
     1941      | 'CHECK_ACL_REWRITE' 
     1942      | 'CHECKPOINT' 
     1943      | 'CHILD' 
     1944      | 'CHOOSE' 
     1945      | 'CHR' 
     1946      | 'CHUNK' 
     1947      | 'CLASS' 
     1948      | 'CLEAR' 
     1949      | 'CLOB' 
     1950      | 'CLONE' 
     1951      | 'CLOSE_CACHED_OPEN_CURSORS' 
     1952      | 'CLOSE' 
     1953      | 'CLUSTER_BY_ROWID' 
     1954      | 'CLUSTER_ID' 
     1955      | 'CLUSTERING_FACTOR' 
     1956      | 'CLUSTER_PROBABILITY' 
     1957      | 'CLUSTER_SET' 
     1958      | 'COALESCE' 
     1959      | 'COALESCE_SQ' 
     1960      | 'COARSE' 
     1961      | 'CO_AUTH_IND' 
     1962      | 'COLD' 
     1963      | 'COLLECT' 
     1964      | 'COLUMNAR' 
     1965      | 'COLUMN_AUTH_INDICATOR' 
     1966      | 'COLUMN' 
     1967      | 'COLUMNS' 
     1968      | 'COLUMN_STATS' 
     1969      | 'COLUMN_VALUE' 
     1970      | 'COMMENT' 
     1971      | 'COMMIT' 
     1972      | 'COMMITTED' 
     1973      | 'COMPACT' 
     1974      | 'COMPATIBILITY' 
     1975      | 'COMPILE' 
     1976      | 'COMPLETE' 
     1977      | 'COMPLIANCE' 
     1978      | 'COMPOSE' 
     1979      | 'COMPOSITE_LIMIT' 
     1980      | 'COMPOSITE' 
     1981      | 'COMPOUND' 
     1982      | 'COMPUTE' 
     1983      | 'CONCAT' 
     1984      | 'CONFIRM' 
     1985      | 'CONFORMING' 
     1986      | 'CONNECT_BY_CB_WHR_ONLY' 
     1987      | 'CONNECT_BY_COMBINE_SW' 
     1988      | 'CONNECT_BY_COST_BASED' 
     1989      | 'CONNECT_BY_ELIM_DUPS' 
     1990      | 'CONNECT_BY_FILTERING' 
     1991      | 'CONNECT_BY_ISCYCLE' 
     1992      | 'CONNECT_BY_ISLEAF' 
     1993      | 'CONNECT_BY_ROOT' 
     1994      | 'CONNECT_TIME' 
     1995      | 'CONSIDER' 
     1996      | 'CONSISTENT' 
     1997      | 'CONSTANT' 
     1998      | 'CONST' 
     1999      | 'CONSTRAINT' 
     2000      | 'CONSTRAINTS' 
     2001      | 'CONTAINER' 
     2002      | 'CONTENT' 
     2003      | 'CONTENTS' 
     2004      | 'CONTEXT' 
     2005      | 'CONTINUE' 
     2006      | 'CONTROLFILE' 
     2007      | 'CONVERT' 
     2008      | 'CORR_K' 
     2009      | 'CORR' 
     2010      | 'CORR_S' 
     2011      | 'CORRUPTION' 
     2012      | 'CORRUPT_XID_ALL' 
     2013      | 'CORRUPT_XID' 
     2014      | 'COSH' 
     2015      | 'COS' 
     2016      | 'COST' 
     2017      | 'COST_XML_QUERY_REWRITE' 
     2018      | 'COUNT' 
     2019      | 'COVAR_POP' 
     2020      | 'COVAR_SAMP' 
     2021      | 'CPU_COSTING' 
     2022      | 'CPU_PER_CALL' 
     2023      | 'CPU_PER_SESSION' 
     2024      | 'CRASH' 
     2025      | 'CREATE_STORED_OUTLINES' 
     2026      | 'CREATION' 
     2027      | 'CROSSEDITION' 
     2028      | 'CROSS' 
     2029      | 'CSCONVERT' 
     2030      | 'CUBE_GB' 
     2031      | 'CUBE' 
     2032      | 'CUME_DISTM' 
     2033      | 'CUME_DIST' 
     2034      | 'CURRENT_DATE' 
     2035      | 'CURRENT' 
     2036      | 'CURRENT_SCHEMA' 
     2037      | 'CURRENT_TIME' 
     2038      | 'CURRENT_TIMESTAMP' 
     2039      | 'CURRENT_USER' 
     2040      | 'CURRENTV' 
     2041      | 'CURSOR' 
     2042      | 'CURSOR_SHARING_EXACT' 
     2043      | 'CURSOR_SPECIFIC_SEGMENT' 
     2044      | 'CV' 
     2045      | 'CYCLE' 
     2046      | 'DANGLING' 
     2047      | 'DATABASE' 
     2048      | 'DATAFILE' 
     2049      | 'DATAFILES' 
     2050      | 'DATA' 
     2051      | 'DATAOBJNO' 
     2052      | 'DATAOBJ_TO_PARTITION' 
     2053      | 'DATE_MODE' 
     2054      | 'DAY' 
     2055      | 'DBA' 
     2056      | 'DBA_RECYCLEBIN' 
     2057      | 'DBMS_STATS' 
     2058      | 'DB_ROLE_CHANGE' 
     2059      | 'DBTIMEZONE' 
     2060      | 'DB_VERSION' 
     2061      | 'DDL' 
     2062      | 'DEALLOCATE' 
     2063      | 'DEBUGGER' 
     2064      | 'DEBUG' 
     2065      | 'DECLARE' 
     2066      | 'DEC' 
     2067      | 'DECOMPOSE' 
     2068      | 'DECREMENT' 
     2069      | 'DECR' 
     2070      | 'DECRYPT' 
     2071      | 'DEDUPLICATE' 
     2072      | 'DEFAULTS' 
     2073      | 'DEFERRABLE' 
     2074      | 'DEFERRED' 
     2075      | 'DEFINED' 
     2076      | 'DEFINER' 
     2077      | 'DEGREE' 
     2078      | 'DELAY' 
     2079      | 'DELETEXML' 
     2080      | 'DEMAND' 
     2081      | 'DENSE_RANKM' 
     2082      | 'DENSE_RANK' 
     2083      | 'DEPENDENT' 
     2084      | 'DEPTH' 
     2085      | 'DEQUEUE' 
     2086      | 'DEREF' 
     2087      | 'DEREF_NO_REWRITE' 
     2088      | 'DETACHED' 
     2089      | 'DETERMINES' 
     2090      | 'DICTIONARY' 
     2091      | 'DIMENSION' 
     2092      | 'DIRECT_LOAD' 
     2093      | 'DIRECTORY' 
     2094      | 'DIRECT_PATH' 
     2095      | 'DISABLE' 
     2096      | 'DISABLE_PRESET' 
     2097      | 'DISABLE_RPKE' 
     2098      | 'DISALLOW' 
     2099      | 'DISASSOCIATE' 
     2100      | 'DISCONNECT' 
     2101      | 'DISKGROUP' 
     2102      | 'DISK' 
     2103      | 'DISKS' 
     2104      | 'DISMOUNT' 
     2105      | 'DISTINGUISHED' 
     2106      | 'DISTRIBUTED' 
     2107      | 'DML' 
     2108      | 'DML_UPDATE' 
     2109      | 'DOCFIDELITY' 
     2110      | 'DOCUMENT' 
     2111      | 'DOMAIN_INDEX_FILTER' 
     2112      | 'DOMAIN_INDEX_NO_SORT' 
     2113      | 'DOMAIN_INDEX_SORT' 
     2114      | 'DOUBLE' 
     2115      | 'DOWNGRADE' 
     2116      | 'DRIVING_SITE' 
     2117      | 'DROP_COLUMN' 
     2118      | 'DROP_GROUP' 
     2119      | 'DST_UPGRADE_INSERT_CONV' 
     2120      | 'DUMP' 
     2121      | 'DYNAMIC' 
     2122      | 'DYNAMIC_SAMPLING_EST_CDN' 
     2123      | 'DYNAMIC_SAMPLING' 
     2124      | 'EACH' 
     2125      | 'EDITIONING' 
     2126      | 'EDITION' 
     2127      | 'EDITIONS' 
     2128      | 'ELEMENT' 
     2129      | 'ELIMINATE_JOIN' 
     2130      | 'ELIMINATE_OBY' 
     2131      | 'ELIMINATE_OUTER_JOIN' 
     2132      | 'EMPTY_BLOB' 
     2133      | 'EMPTY_CLOB' 
     2134      | 'EMPTY' 
     2135      | 'ENABLE' 
     2136      | 'ENABLE_PRESET' 
     2137      | 'ENCODING' 
     2138      | 'ENCRYPTION' 
     2139      | 'ENCRYPT' 
     2140      | 'END_OUTLINE_DATA' 
     2141      | 'ENFORCED' 
     2142      | 'ENFORCE' 
     2143      | 'ENQUEUE' 
     2144      | 'ENTERPRISE' 
     2145      | 'ENTITYESCAPING' 
     2146      | 'ENTRY' 
     2147      | 'ERROR_ARGUMENT' 
     2148      | 'ERROR' 
     2149      | 'ERROR_ON_OVERLAP_TIME' 
     2150      | 'ERRORS' 
     2151      | 'ESCAPE' 
     2152      | 'ESTIMATE' 
     2153      | 'EVALNAME' 
     2154      | 'EVALUATION' 
     2155      | 'EVENTS' 
     2156      | 'EVERY' 
     2157      | 'EXCEPTIONS' 
     2158      | 'EXCEPT' 
     2159      | 'EXCHANGE' 
     2160      | 'EXCLUDE' 
     2161      | 'EXCLUDING' 
     2162      | 'EXECUTE' 
     2163      | 'EXEMPT' 
     2164      | 'EXISTSNODE' 
     2165      | 'EXPAND_GSET_TO_UNION' 
     2166      | 'EXPAND_TABLE' 
     2167      | 'EXPIRE' 
     2168      | 'EXPLAIN' 
     2169      | 'EXPLOSION' 
     2170      | 'EXP' 
     2171      | 'EXPORT' 
     2172      | 'EXPR_CORR_CHECK' 
     2173      | 'EXTENDS' 
     2174      | 'EXTENT' 
     2175      | 'EXTENTS' 
     2176      | 'EXTERNALLY' 
     2177      | 'EXTERNAL' 
     2178      | 'EXTRACT' 
     2179      | 'EXTRACTVALUE' 
     2180      | 'EXTRA' 
     2181      | 'FACILITY' 
     2182      | 'FACT' 
     2183      | 'FACTORIZE_JOIN' 
     2184      | 'FAILED_LOGIN_ATTEMPTS' 
     2185      | 'FAILED' 
     2186      | 'FAILGROUP' 
     2187      | 'FALSE' 
     2188      | 'FAST' 
     2189      | 'FBTSCAN' 
     2190      | 'FEATURE_ID' 
     2191      | 'FEATURE_SET' 
     2192      | 'FEATURE_VALUE' 
     2193      | 'FILE' 
     2194      | 'FILESYSTEM_LIKE_LOGGING' 
     2195      | 'FILTER' 
     2196      | 'FINAL' 
     2197      | 'FINE' 
     2198      | 'FINISH' 
     2199      | 'FIRSTM' 
     2200      | 'FIRST' 
     2201      | 'FIRST_ROWS' 
     2202      | 'FIRST_VALUE' 
     2203      | 'FLAGGER' 
     2204      | 'FLASHBACK' 
     2205      | 'FLASH_CACHE' 
     2206      | 'FLOB' 
     2207      | 'FLOOR' 
     2208      | 'FLUSH' 
     2209      | 'FOLDER' 
     2210      | 'FOLLOWING' 
     2211      | 'FOLLOWS' 
     2212      | 'FORCE' 
     2213      | 'FORCE_XML_QUERY_REWRITE' 
     2214      | 'FOREIGN' 
     2215      | 'FOREVER' 
     2216      | 'FORWARD' 
     2217      | 'FRAGMENT_NUMBER' 
     2218      | 'FREELIST' 
     2219      | 'FREELISTS' 
     2220      | 'FREEPOOLS' 
     2221      | 'FRESH' 
     2222      | 'FROM_TZ' 
     2223      | 'FULL' 
     2224      | 'FULL_OUTER_JOIN_TO_OUTER' 
     2225      | 'FUNCTION' 
     2226      | 'FUNCTIONS' 
     2227      | 'GATHER_PLAN_STATISTICS' 
     2228      | 'GBY_CONC_ROLLUP' 
     2229      | 'GBY_PUSHDOWN' 
     2230      | 'GENERATED' 
     2231      | 'GLOBALLY' 
     2232      | 'GLOBAL' 
     2233      | 'GLOBAL_NAME' 
     2234      | 'GLOBAL_TOPIC_ENABLED' 
     2235      | 'GREATEST' 
     2236      | 'GROUP_BY' 
     2237      | 'GROUP_ID' 
     2238      | 'GROUPING_ID' 
     2239      | 'GROUPING' 
     2240      | 'GROUPS' 
     2241      | 'GUARANTEED' 
     2242      | 'GUARANTEE' 
     2243      | 'GUARD' 
     2244      | 'HASH_AJ' 
     2245      | 'HASHKEYS' 
     2246      | 'HASH' 
     2247      | 'HASH_SJ' 
     2248      | 'HEADER' 
     2249      | 'HEAP' 
     2250      | 'HELP' 
     2251      | 'HEXTORAW' 
     2252      | 'HEXTOREF' 
     2253      | 'HIDDEN_KEYWORD' 
     2254      | 'HIDE' 
     2255      | 'HIERARCHY' 
     2256      | 'HIGH' 
     2257      | 'HINTSET_BEGIN' 
     2258      | 'HINTSET_END' 
     2259      | 'HOT' 
     2260      | 'HOUR' 
     2261      | 'HWM_BROKERED' 
     2262      | 'HYBRID' 
     2263      | 'IDENTIFIER' 
     2264      | 'IDENTITY' 
     2265      | 'IDGENERATORS' 
     2266      | 'IDLE_TIME' 
     2267      | 'ID' 
     2268      | 'IF' 
     2269      | 'IGNORE' 
     2270      | 'IGNORE_OPTIM_EMBEDDED_HINTS' 
     2271      | 'IGNORE_ROW_ON_DUPKEY_INDEX' 
     2272      | 'IGNORE_WHERE_CLAUSE' 
     2273      | 'IMMEDIATE' 
     2274      | 'IMPACT' 
     2275      | 'IMPORT' 
     2276      | 'INCLUDE' 
     2277      | 'INCLUDE_VERSION' 
     2278      | 'INCLUDING' 
     2279      | 'INCREMENTAL' 
     2280      | 'INCREMENT' 
     2281      | 'INCR' 
     2282      | 'INDENT' 
     2283      | 'INDEX_ASC' 
     2284      | 'INDEX_COMBINE' 
     2285      | 'INDEX_DESC' 
     2286      | 'INDEXED' 
     2287      | 'INDEXES' 
     2288      | 'INDEX_FFS' 
     2289      | 'INDEX_FILTER' 
     2290      | 'INDEX_JOIN' 
     2291      | 'INDEX_ROWS' 
     2292      | 'INDEX_RRS' 
     2293      | 'INDEX_RS_ASC' 
     2294      | 'INDEX_RS_DESC' 
     2295      | 'INDEX_RS' 
     2296      | 'INDEX_SCAN' 
     2297      | 'INDEX_SKIP_SCAN' 
     2298      | 'INDEX_SS_ASC' 
     2299      | 'INDEX_SS_DESC' 
     2300      | 'INDEX_SS' 
     2301      | 'INDEX_STATS' 
     2302      | 'INDEXTYPE' 
     2303      | 'INDEXTYPES' 
     2304      | 'INDICATOR' 
     2305      | 'INFINITE' 
     2306      | 'INFORMATIONAL' 
     2307      | 'INITCAP' 
     2308      | 'INITIALIZED' 
     2309      | 'INITIALLY' 
     2310      | 'INITIAL' 
     2311      | 'INITRANS' 
     2312      | 'INLINE' 
     2313      | 'INLINE_XMLTYPE_NT' 
     2314      | 'IN_MEMORY_METADATA' 
     2315      | 'INNER' 
     2316      | 'INSERTCHILDXMLAFTER' 
     2317      | 'INSERTCHILDXMLBEFORE' 
     2318      | 'INSERTCHILDXML' 
     2319      | 'INSERTXMLAFTER' 
     2320      | 'INSERTXMLBEFORE' 
     2321      | 'INSTANCE' 
     2322      | 'INSTANCES' 
     2323      | 'INSTANTIABLE' 
     2324      | 'INSTANTLY' 
     2325      | 'INSTEAD' 
     2326      | 'INSTR2' 
     2327      | 'INSTR4' 
     2328      | 'INSTRB' 
     2329      | 'INSTRC' 
     2330      | 'INSTR' 
     2331      | 'INTERMEDIATE' 
     2332      | 'INTERNAL_CONVERT' 
     2333      | 'INTERNAL_USE' 
     2334      | 'INTERPRETED' 
     2335      | 'INTERVAL' 
     2336      | 'INT' 
     2337      | 'INVALIDATE' 
     2338      | 'INVISIBLE' 
     2339      | 'IN_XQUERY' 
     2340      | 'ISOLATION_LEVEL' 
     2341      | 'ISOLATION' 
     2342      | 'ITERATE' 
     2343      | 'ITERATION_NUMBER' 
     2344      | 'JAVA' 
     2345      | 'JOB' 
     2346      | 'JOIN' 
     2347      | 'KEEP_DUPLICATES' 
     2348      | 'KEEP' 
     2349      | 'KERBEROS' 
     2350      | 'KEY_LENGTH' 
     2351      | 'KEY' 
     2352      | 'KEYSIZE' 
     2353      | 'KEYS' 
     2354      | 'KILL' 
     2355      | 'LAG' 
     2356      | 'LAST_DAY' 
     2357      | 'LAST' 
     2358      | 'LAST_VALUE' 
     2359      | 'LATERAL' 
     2360      | 'LAYER' 
     2361      | 'LDAP_REGISTRATION_ENABLED' 
     2362      | 'LDAP_REGISTRATION' 
     2363      | 'LDAP_REG_SYNC_INTERVAL' 
     2364      | 'LEADING' 
     2365      | 'LEAD' 
     2366      | 'LEAST' 
     2367      | 'LEFT' 
     2368      | 'LENGTH2' 
     2369      | 'LENGTH4' 
     2370      | 'LENGTHB' 
     2371      | 'LENGTHC' 
     2372      | 'LENGTH' 
     2373      | 'LESS' 
     2374      | 'LEVEL' 
     2375      | 'LEVELS' 
     2376      | 'LIBRARY' 
     2377      | 'LIFE' 
     2378      | 'LIFETIME' 
     2379      | 'LIKE2' 
     2380      | 'LIKE4' 
     2381      | 'LIKEC' 
     2382      | 'LIKE_EXPAND' 
     2383      | 'LIMIT' 
     2384      | 'LINK' 
     2385      | 'LISTAGG' 
     2386      | 'LIST' 
     2387      | 'LN' 
     2388      | 'LNNVL' 
     2389      | 'LOAD' 
     2390      | 'LOB' 
     2391      | 'LOBNVL' 
     2392      | 'LOBS' 
     2393      | 'LOCAL_INDEXES' 
     2394      | 'LOCAL' 
     2395      | 'LOCALTIME' 
     2396      | 'LOCALTIMESTAMP' 
     2397      | 'LOCATION' 
     2398      | 'LOCATOR' 
     2399      | 'LOCKED' 
     2400      | 'LOGFILE' 
     2401      | 'LOGFILES' 
     2402      | 'LOGGING' 
     2403      | 'LOGICAL' 
     2404      | 'LOGICAL_READS_PER_CALL' 
     2405      | 'LOGICAL_READS_PER_SESSION' 
     2406      | 'LOG' 
     2407      | 'LOGOFF' 
     2408      | 'LOGON' 
     2409      | 'LOG_READ_ONLY_VIOLATIONS' 
     2410      | 'LOWER' 
     2411      | 'LOW' 
     2412      | 'LPAD' 
     2413      | 'LTRIM' 
     2414      | 'MAIN' 
     2415      | 'MAKE_REF' 
     2416      | 'MANAGED' 
     2417      | 'MANAGEMENT' 
     2418      | 'MANAGE' 
     2419      | 'MANAGER' 
     2420      | 'MANUAL' 
     2421      | 'MAPPING' 
     2422      | 'MASTER' 
     2423      | 'MATCHED' 
     2424      | 'MATERIALIZED' 
     2425      | 'MATERIALIZE' 
     2426      | 'MAXARCHLOGS' 
     2427      | 'MAXDATAFILES' 
     2428      | 'MAXEXTENTS' 
     2429      | 'MAXIMIZE' 
     2430      | 'MAXINSTANCES' 
     2431      | 'MAXLOGFILES' 
     2432      | 'MAXLOGHISTORY' 
     2433      | 'MAXLOGMEMBERS' 
     2434      | 'MAX' 
     2435      | 'MAXSIZE' 
     2436      | 'MAXTRANS' 
     2437      | 'MAXVALUE' 
     2438      | 'MEASURE' 
     2439      | 'MEASURES' 
     2440      | 'MEDIAN' 
     2441      | 'MEDIUM' 
     2442      | 'MEMBER' 
     2443      | 'MEMORY' 
     2444      | 'MERGEACTIONS' 
     2445      | 'MERGE_AJ' 
     2446      | 'MERGE_CONST_ON' 
     2447      | 'MERGE' 
     2448      | 'MERGE_SJ' 
     2449      | 'METHOD' 
     2450      | 'MIGRATE' 
     2451      | 'MIGRATION' 
     2452      | 'MINEXTENTS' 
     2453      | 'MINIMIZE' 
     2454      | 'MINIMUM' 
     2455      | 'MINING' 
     2456      | 'MIN' 
     2457      | 'MINUS_NULL' 
     2458      | 'MINUTE' 
     2459      | 'MINVALUE' 
     2460      | 'MIRRORCOLD' 
     2461      | 'MIRRORHOT' 
     2462      | 'MIRROR' 
     2463      | 'MLSLABEL' 
     2464      | 'MODEL_COMPILE_SUBQUERY' 
     2465      | 'MODEL_DONTVERIFY_UNIQUENESS' 
     2466      | 'MODEL_DYNAMIC_SUBQUERY' 
     2467      | 'MODEL_MIN_ANALYSIS' 
     2468      | 'MODEL' 
     2469      | 'MODEL_NO_ANALYSIS' 
     2470      | 'MODEL_PBY' 
     2471      | 'MODEL_PUSH_REF' 
     2472      | 'MODIFY_COLUMN_TYPE' 
     2473      | 'MODIFY' 
     2474      | 'MOD' 
     2475      | 'MONITORING' 
     2476      | 'MONITOR' 
     2477      | 'MONTH' 
     2478      | 'MONTHS_BETWEEN' 
     2479      | 'MOUNT' 
     2480      | 'MOUNTPATH' 
     2481      | 'MOVEMENT' 
     2482      | 'MOVE' 
     2483      | 'MULTISET' 
     2484      | 'MV_MERGE' 
     2485      | 'NAMED' 
     2486      | 'NAME' 
     2487      | 'NAMESPACE' 
     2488      | 'NAN' 
     2489      | 'NANVL' 
     2490      | 'NATIONAL' 
     2491      | 'NATIVE_FULL_OUTER_JOIN' 
     2492      | 'NATIVE' 
     2493      | 'NATURAL' 
     2494      | 'NAV' 
     2495      | 'NCHAR_CS' 
     2496      | 'NCHAR' 
     2497      | 'NCHR' 
     2498      | 'NCLOB' 
     2499      | 'NEEDED' 
     2500      | 'NESTED' 
     2501      | 'NESTED_TABLE_FAST_INSERT' 
     2502      | 'NESTED_TABLE_GET_REFS' 
     2503      | 'NESTED_TABLE_ID' 
     2504      | 'NESTED_TABLE_SET_REFS' 
     2505      | 'NESTED_TABLE_SET_SETID' 
     2506      | 'NETWORK' 
     2507      | 'NEVER' 
     2508      | 'NEW' 
     2509      | 'NEW_TIME' 
     2510      | 'NEXT_DAY' 
     2511      | 'NEXT' 
     2512      | 'NL_AJ' 
     2513      | 'NLJ_BATCHING' 
     2514      | 'NLJ_INDEX_FILTER' 
     2515      | 'NLJ_INDEX_SCAN' 
     2516      | 'NLJ_PREFETCH' 
     2517      | 'NLS_CALENDAR' 
     2518      | 'NLS_CHARACTERSET' 
     2519      | 'NLS_CHARSET_DECL_LEN' 
     2520      | 'NLS_CHARSET_ID' 
     2521      | 'NLS_CHARSET_NAME' 
     2522      | 'NLS_COMP' 
     2523      | 'NLS_CURRENCY' 
     2524      | 'NLS_DATE_FORMAT' 
     2525      | 'NLS_DATE_LANGUAGE' 
     2526      | 'NLS_INITCAP' 
     2527      | 'NLS_ISO_CURRENCY' 
     2528      | 'NL_SJ' 
     2529      | 'NLS_LANG' 
     2530      | 'NLS_LANGUAGE' 
     2531      | 'NLS_LENGTH_SEMANTICS' 
     2532      | 'NLS_LOWER' 
     2533      | 'NLS_NCHAR_CONV_EXCP' 
     2534      | 'NLS_NUMERIC_CHARACTERS' 
     2535      | 'NLS_SORT' 
     2536      | 'NLSSORT' 
     2537      | 'NLS_SPECIAL_CHARS' 
     2538      | 'NLS_TERRITORY' 
     2539      | 'NLS_UPPER' 
     2540      | 'NO_ACCESS' 
     2541      | 'NOAPPEND' 
     2542      | 'NOARCHIVELOG' 
     2543      | 'NOAUDIT' 
     2544      | 'NO_BASETABLE_MULTIMV_REWRITE' 
     2545      | 'NO_BIND_AWARE' 
     2546      | 'NO_BUFFER' 
     2547      | 'NOCACHE' 
     2548      | 'NO_CARTESIAN' 
     2549      | 'NO_CHECK_ACL_REWRITE' 
     2550      | 'NO_CLUSTER_BY_ROWID' 
     2551      | 'NO_COALESCE_SQ' 
     2552      | 'NO_CONNECT_BY_CB_WHR_ONLY' 
     2553      | 'NO_CONNECT_BY_COMBINE_SW' 
     2554      | 'NO_CONNECT_BY_COST_BASED' 
     2555      | 'NO_CONNECT_BY_ELIM_DUPS' 
     2556      | 'NO_CONNECT_BY_FILTERING' 
     2557      | 'NO_COST_XML_QUERY_REWRITE' 
     2558      | 'NO_CPU_COSTING' 
     2559      | 'NOCPU_COSTING' 
     2560      | 'NOCYCLE' 
     2561      | 'NODELAY' 
     2562      | 'NO_DOMAIN_INDEX_FILTER' 
     2563      | 'NO_DST_UPGRADE_INSERT_CONV' 
     2564      | 'NO_ELIMINATE_JOIN' 
     2565      | 'NO_ELIMINATE_OBY' 
     2566      | 'NO_ELIMINATE_OUTER_JOIN' 
     2567      | 'NOENTITYESCAPING' 
     2568      | 'NO_EXPAND_GSET_TO_UNION' 
     2569      | 'NO_EXPAND' 
     2570      | 'NO_EXPAND_TABLE' 
     2571      | 'NO_FACT' 
     2572      | 'NO_FACTORIZE_JOIN' 
     2573      | 'NO_FILTERING' 
     2574      | 'NOFORCE' 
     2575      | 'NO_FULL_OUTER_JOIN_TO_OUTER' 
     2576      | 'NO_GBY_PUSHDOWN' 
     2577      | 'NOGUARANTEE' 
     2578      | 'NO_INDEX_FFS' 
     2579      | 'NO_INDEX' 
     2580      | 'NO_INDEX_SS' 
     2581      | 'NO_LOAD' 
     2582      | 'NOLOCAL' 
     2583      | 'NOLOGGING' 
     2584      | 'NOMAPPING' 
     2585      | 'NOMAXVALUE' 
     2586      | 'NO_MERGE' 
     2587      | 'NOMINIMIZE' 
     2588      | 'NOMINVALUE' 
     2589      | 'NO_MODEL_PUSH_REF' 
     2590      | 'NO_MONITORING' 
     2591      | 'NOMONITORING' 
     2592      | 'NO_MONITOR' 
     2593      | 'NO_MULTIMV_REWRITE' 
     2594      | 'NO' 
     2595      | 'NO_NATIVE_FULL_OUTER_JOIN' 
     2596      | 'NONBLOCKING' 
     2597      | 'NONE' 
     2598      | 'NO_NLJ_BATCHING' 
     2599      | 'NO_NLJ_PREFETCH' 
     2600      | 'NONSCHEMA' 
     2601      | 'NOORDER' 
     2602      | 'NO_ORDER_ROLLUPS' 
     2603      | 'NO_OUTER_JOIN_TO_ANTI' 
     2604      | 'NO_OUTER_JOIN_TO_INNER' 
     2605      | 'NOOVERRIDE' 
     2606      | 'NO_PARALLEL_INDEX' 
     2607      | 'NOPARALLEL_INDEX' 
     2608      | 'NO_PARALLEL' 
     2609      | 'NOPARALLEL' 
     2610      | 'NO_PARTIAL_COMMIT' 
     2611      | 'NO_PLACE_DISTINCT' 
     2612      | 'NO_PLACE_GROUP_BY' 
     2613      | 'NO_PQ_MAP' 
     2614      | 'NO_PRUNE_GSETS' 
     2615      | 'NO_PULL_PRED' 
     2616      | 'NO_PUSH_PRED' 
     2617      | 'NO_PUSH_SUBQ' 
     2618      | 'NO_PX_JOIN_FILTER' 
     2619      | 'NO_QKN_BUFF' 
     2620      | 'NO_QUERY_TRANSFORMATION' 
     2621      | 'NO_REF_CASCADE' 
     2622      | 'NORELY' 
     2623      | 'NOREPAIR' 
     2624      | 'NORESETLOGS' 
     2625      | 'NO_RESULT_CACHE' 
     2626      | 'NOREVERSE' 
     2627      | 'NO_REWRITE' 
     2628      | 'NOREWRITE' 
     2629      | 'NORMAL' 
     2630      | 'NOROWDEPENDENCIES' 
     2631      | 'NOSCHEMACHECK' 
     2632      | 'NOSEGMENT' 
     2633      | 'NO_SEMIJOIN' 
     2634      | 'NO_SEMI_TO_INNER' 
     2635      | 'NO_SET_TO_JOIN' 
     2636      | 'NOSORT' 
     2637      | 'NO_SQL_TUNE' 
     2638      | 'NO_STAR_TRANSFORMATION' 
     2639      | 'NO_STATEMENT_QUEUING' 
     2640      | 'NO_STATS_GSETS' 
     2641      | 'NOSTRICT' 
     2642      | 'NO_SUBQUERY_PRUNING' 
     2643      | 'NO_SUBSTRB_PAD' 
     2644      | 'NO_SWAP_JOIN_INPUTS' 
     2645      | 'NOSWITCH' 
     2646      | 'NO_TABLE_LOOKUP_BY_NL' 
     2647      | 'NO_TEMP_TABLE' 
     2648      | 'NOTHING' 
     2649      | 'NOTIFICATION' 
     2650      | 'NO_TRANSFORM_DISTINCT_AGG' 
     2651      | 'NO_UNNEST' 
     2652      | 'NO_USE_HASH_AGGREGATION' 
     2653      | 'NO_USE_HASH_GBY_FOR_PUSHDOWN' 
     2654      | 'NO_USE_HASH' 
     2655      | 'NO_USE_INVISIBLE_INDEXES' 
     2656      | 'NO_USE_MERGE' 
     2657      | 'NO_USE_NL' 
     2658      | 'NOVALIDATE' 
     2659      | 'NO_XDB_FASTPATH_INSERT' 
     2660      | 'NO_XML_DML_REWRITE' 
     2661      | 'NO_XMLINDEX_REWRITE_IN_SELECT' 
     2662      | 'NO_XMLINDEX_REWRITE' 
     2663      | 'NO_XML_QUERY_REWRITE' 
     2664      | 'NTH_VALUE' 
     2665      | 'NTILE' 
     2666      | 'NULLIF' 
     2667      | 'NULLS' 
     2668      | 'NUMERIC' 
     2669      | 'NUM_INDEX_KEYS' 
     2670      | 'NUMTODSINTERVAL' 
     2671      | 'NUMTOYMINTERVAL' 
     2672      | 'NVARCHAR2' 
     2673      | 'NVL2' 
     2674      | 'NVL' 
     2675      | 'OBJECT2XML' 
     2676      | 'OBJECT' 
     2677      | 'OBJNO' 
     2678      | 'OBJNO_REUSE' 
     2679      | 'OCCURENCES' 
     2680      | 'OFFLINE' 
     2681      | 'OFF' 
     2682      | 'OIDINDEX' 
     2683      | 'OID' 
     2684      | 'OLAP' 
     2685      | 'OLD' 
     2686      | 'OLD_PUSH_PRED' 
     2687      | 'OLTP' 
     2688      | 'ONLINE' 
     2689      | 'ONLY' 
     2690      | 'OPAQUE' 
     2691      | 'OPAQUE_TRANSFORM' 
     2692      | 'OPAQUE_XCANONICAL' 
     2693      | 'OPCODE' 
     2694      | 'OPEN' 
     2695      | 'OPERATIONS' 
     2696      | 'OPERATOR' 
     2697      | 'OPT_ESTIMATE' 
     2698      | 'OPTIMAL' 
     2699      | 'OPTIMIZE' 
     2700      | 'OPTIMIZER_FEATURES_ENABLE' 
     2701      | 'OPTIMIZER_GOAL' 
     2702      | 'OPT_PARAM' 
     2703      | 'ORA_BRANCH' 
     2704      | 'ORADEBUG' 
     2705      | 'ORA_DST_AFFECTED' 
     2706      | 'ORA_DST_CONVERT' 
     2707      | 'ORA_DST_ERROR' 
     2708      | 'ORA_GET_ACLIDS' 
     2709      | 'ORA_GET_PRIVILEGES' 
     2710      | 'ORA_HASH' 
     2711      | 'ORA_ROWSCN' 
     2712      | 'ORA_ROWSCN_RAW' 
     2713      | 'ORA_ROWVERSION' 
     2714      | 'ORA_TABVERSION' 
     2715      | 'ORDERED' 
     2716      | 'ORDERED_PREDICATES' 
     2717      | 'ORDINALITY' 
     2718      | 'OR_EXPAND' 
     2719      | 'ORGANIZATION' 
     2720      | 'OR_PREDICATES' 
     2721      | 'OTHER' 
     2722      | 'OUTER_JOIN_TO_ANTI' 
     2723      | 'OUTER_JOIN_TO_INNER' 
     2724      | 'OUTER' 
     2725      | 'OUTLINE_LEAF' 
     2726      | 'OUTLINE' 
     2727      | 'OUT_OF_LINE' 
     2728      | 'OVERFLOW' 
     2729      | 'OVERFLOW_NOMOVE' 
     2730      | 'OVERLAPS' 
     2731      | 'OVER' 
     2732      | 'OWNER' 
     2733      | 'OWNERSHIP' 
     2734      | 'OWN' 
     2735      | 'PACKAGE' 
     2736      | 'PACKAGES' 
     2737      | 'PARALLEL_INDEX' 
     2738      | 'PARALLEL' 
     2739      | 'PARAMETERS' 
     2740      | 'PARAM' 
     2741      | 'PARENT' 
     2742      | 'PARITY' 
     2743      | 'PARTIALLY' 
     2744      | 'PARTITION_HASH' 
     2745      | 'PARTITION_LIST' 
     2746      | 'PARTITION' 
     2747      | 'PARTITION_RANGE' 
     2748      | 'PARTITIONS' 
     2749      | 'PARTNUMINST' 
     2750      | 'PASSING' 
     2751      | 'PASSWORD_GRACE_TIME' 
     2752      | 'PASSWORD_LIFE_TIME' 
     2753      | 'PASSWORD_LOCK_TIME' 
     2754      | 'PASSWORD' 
     2755      | 'PASSWORD_REUSE_MAX' 
     2756      | 'PASSWORD_REUSE_TIME' 
     2757      | 'PASSWORD_VERIFY_FUNCTION' 
     2758      | 'PATH' 
     2759      | 'PATHS' 
     2760      | 'PBL_HS_BEGIN' 
     2761      | 'PBL_HS_END' 
     2762      | 'PCTINCREASE' 
     2763      | 'PCTTHRESHOLD' 
     2764      | 'PCTUSED' 
     2765      | 'PCTVERSION' 
     2766      | 'PENDING' 
     2767      | 'PERCENTILE_CONT' 
     2768      | 'PERCENTILE_DISC' 
     2769      | 'PERCENT_KEYWORD' 
     2770      | 'PERCENT_RANKM' 
     2771      | 'PERCENT_RANK' 
     2772      | 'PERFORMANCE' 
     2773      | 'PERMANENT' 
     2774      | 'PERMISSION' 
     2775      | 'PFILE' 
     2776      | 'PHYSICAL' 
     2777      | 'PIKEY' 
     2778      | 'PIV_GB' 
     2779      | 'PIVOT' 
     2780      | 'PIV_SSF' 
     2781      | 'PLACE_DISTINCT' 
     2782      | 'PLACE_GROUP_BY' 
     2783      | 'PLAN' 
     2784      | 'PLSCOPE_SETTINGS' 
     2785      | 'PLSQL_CCFLAGS' 
     2786      | 'PLSQL_CODE_TYPE' 
     2787      | 'PLSQL_DEBUG' 
     2788      | 'PLSQL_OPTIMIZE_LEVEL' 
     2789      | 'PLSQL_WARNINGS' 
     2790      | 'POINT' 
     2791      | 'POLICY' 
     2792      | 'POST_TRANSACTION' 
     2793      | 'POWERMULTISET_BY_CARDINALITY' 
     2794      | 'POWERMULTISET' 
     2795      | 'POWER' 
     2796      | 'PQ_DISTRIBUTE' 
     2797      | 'PQ_MAP' 
     2798      | 'PQ_NOMAP' 
     2799      | 'PREBUILT' 
     2800      | 'PRECEDES' 
     2801      | 'PRECEDING' 
     2802      | 'PRECISION' 
     2803      | 'PRECOMPUTE_SUBQUERY' 
     2804      | 'PREDICATE_REORDERS' 
     2805      | 'PREDICTION_BOUNDS' 
     2806      | 'PREDICTION_COST' 
     2807      | 'PREDICTION_DETAILS' 
     2808      | 'PREDICTION' 
     2809      | 'PREDICTION_PROBABILITY' 
     2810      | 'PREDICTION_SET' 
     2811      | 'PREPARE' 
     2812      | 'PRESENT' 
     2813      | 'PRESENTNNV' 
     2814      | 'PRESENTV' 
     2815      | 'PRESERVE' 
     2816      | 'PRESERVE_OID' 
     2817      | 'PREVIOUS' 
     2818      | 'PRIMARY' 
     2819      | 'PRIVATE' 
     2820      | 'PRIVATE_SGA' 
     2821      | 'PRIVILEGE' 
     2822      | 'PRIVILEGES' 
     2823      | 'PROCEDURAL' 
     2824      | 'PROCEDURE' 
     2825      | 'PROCESS' 
     2826      | 'PROFILE' 
     2827      | 'PROGRAM' 
     2828      | 'PROJECT' 
     2829      | 'PROPAGATE' 
     2830      | 'PROTECTED' 
     2831      | 'PROTECTION' 
     2832      | 'PULL_PRED' 
     2833      | 'PURGE' 
     2834      | 'PUSH_PRED' 
     2835      | 'PUSH_SUBQ' 
     2836      | 'PX_GRANULE' 
     2837      | 'PX_JOIN_FILTER' 
     2838      | 'QB_NAME' 
     2839      | 'QUERY_BLOCK' 
     2840      | 'QUERY' 
     2841      | 'QUEUE_CURR' 
     2842      | 'QUEUE' 
     2843      | 'QUEUE_ROWP' 
     2844      | 'QUIESCE' 
     2845      | 'QUORUM' 
     2846      | 'QUOTA' 
     2847      | 'RANDOM_LOCAL' 
     2848      | 'RANDOM' 
     2849      | 'RANGE' 
     2850      | 'RANKM' 
     2851      | 'RANK' 
     2852      | 'RAPIDLY' 
     2853      | 'RATIO_TO_REPORT' 
     2854      | 'RAWTOHEX' 
     2855      | 'RAWTONHEX' 
     2856      | 'RBA' 
     2857      | 'RBO_OUTLINE' 
     2858      | 'RDBA' 
     2859      | 'READ' 
     2860      | 'READS' 
     2861      | 'REAL' 
     2862      | 'REBALANCE' 
     2863      | 'REBUILD' 
     2864      | 'RECORDS_PER_BLOCK' 
     2865      | 'RECOVERABLE' 
     2866      | 'RECOVER' 
     2867      | 'RECOVERY' 
     2868      | 'RECYCLEBIN' 
     2869      | 'RECYCLE' 
     2870      | 'REDACTION' 
     2871      | 'REDO' 
     2872      | 'REDUCED' 
     2873      | 'REDUNDANCY' 
     2874      | 'REF_CASCADE_CURSOR' 
     2875      | 'REFERENCED' 
     2876      | 'REFERENCE' 
     2877      | 'REFERENCES' 
     2878      | 'REFERENCING' 
     2879      | 'REF' 
     2880      | 'REFRESH' 
     2881      | 'REFTOHEX' 
     2882      | 'REGEXP_COUNT' 
     2883      | 'REGEXP_INSTR' 
     2884      | 'REGEXP_LIKE' 
     2885      | 'REGEXP_REPLACE' 
     2886      | 'REGEXP_SUBSTR' 
     2887      | 'REGISTER' 
     2888      | 'REGR_AVGX' 
     2889      | 'REGR_AVGY' 
     2890      | 'REGR_COUNT' 
     2891      | 'REGR_INTERCEPT' 
     2892      | 'REGR_R2' 
     2893      | 'REGR_SLOPE' 
     2894      | 'REGR_SXX' 
     2895      | 'REGR_SXY' 
     2896      | 'REGR_SYY' 
     2897      | 'REGULAR' 
     2898      | 'REJECT' 
     2899      | 'REKEY' 
     2900      | 'RELATIONAL' 
     2901      | 'RELY' 
     2902      | 'REMAINDER' 
     2903      | 'REMOTE_MAPPED' 
     2904      | 'REMOVE' 
     2905      | 'REPAIR' 
     2906      | 'REPEAT' 
     2907      | 'REPLACE' 
     2908      | 'REPLICATION' 
     2909      | 'REQUIRED' 
     2910      | 'RESETLOGS' 
     2911      | 'RESET' 
     2912      | 'RESIZE' 
     2913      | 'RESOLVE' 
     2914      | 'RESOLVER' 
     2915      | 'RESPECT' 
     2916      | 'RESTORE_AS_INTERVALS' 
     2917      | 'RESTORE' 
     2918      | 'RESTRICT_ALL_REF_CONS' 
     2919      | 'RESTRICTED' 
     2920      | 'RESTRICT' 
     2921      | 'RESULT_CACHE' 
     2922      | 'RESUMABLE' 
     2923      | 'RESUME' 
     2924      | 'RETENTION' 
     2925      | 'RETRY_ON_ROW_CHANGE' 
     2926      | 'RETURNING' 
     2927      | 'RETURN' 
     2928      | 'REUSE' 
     2929      | 'REVERSE' 
     2930      | 'REWRITE' 
     2931      | 'REWRITE_OR_ERROR' 
     2932      | 'RIGHT' 
     2933      | 'ROLE' 
     2934      | 'ROLES' 
     2935      | 'ROLLBACK' 
     2936      | 'ROLLING' 
     2937      | 'ROLLUP' 
     2938      | 'ROUND' 
     2939      | 'ROWDEPENDENCIES' 
     2940      | 'ROWID' 
     2941      | 'ROWIDTOCHAR' 
     2942      | 'ROWIDTONCHAR' 
     2943      | 'ROW_LENGTH' 
     2944      | 'ROW' 
     2945      | 'ROW_NUMBER' 
     2946      | 'ROWNUM' 
     2947      | 'ROWS' 
     2948      | 'RPAD' 
     2949      | 'RTRIM' 
     2950      | 'RULE' 
     2951      | 'RULES' 
     2952      | 'SALT' 
     2953      | 'SAMPLE' 
     2954      | 'SAVE_AS_INTERVALS' 
     2955      | 'SAVEPOINT' 
     2956      | 'SB4' 
     2957      | 'SCALE' 
     2958      | 'SCALE_ROWS' 
     2959      | 'SCAN_INSTANCES' 
     2960      | 'SCAN' 
     2961      | 'SCHEDULER' 
     2962      | 'SCHEMACHECK' 
     2963      | 'SCHEMA' 
     2964      | 'SCN_ASCENDING' 
     2965      | 'SCN' 
     2966      | 'SCOPE' 
     2967      | 'SD_ALL' 
     2968      | 'SD_INHIBIT' 
     2969      | 'SD_SHOW' 
     2970      | 'SEARCH' 
     2971      | 'SECOND' 
     2972      | 'SECUREFILE_DBA' 
     2973      | 'SECUREFILE' 
     2974      | 'SECURITY' 
     2975      | 'SEED' 
     2976      | 'SEG_BLOCK' 
     2977      | 'SEG_FILE' 
     2978      | 'SEGMENT' 
     2979      | 'SELECTIVITY' 
     2980      | 'SEMIJOIN_DRIVER' 
     2981      | 'SEMIJOIN' 
     2982      | 'SEMI_TO_INNER' 
     2983      | 'SEQUENCED' 
     2984      | 'SEQUENCE' 
     2985      | 'SEQUENTIAL' 
     2986      | 'SERIALIZABLE' 
     2987      | 'SERVERERROR' 
     2988      | 'SESSION_CACHED_CURSORS' 
     2989      | 'SESSION' 
     2990      | 'SESSIONS_PER_USER' 
     2991      | 'SESSIONTIMEZONE' 
     2992      | 'SESSIONTZNAME' 
     2993      | 'SETS' 
     2994      | 'SETTINGS' 
     2995      | 'SET_TO_JOIN' 
     2996      | 'SEVERE' 
     2997      | 'SHARED' 
     2998      | 'SHARED_POOL' 
     2999      | 'SHOW' 
     3000      | 'SHRINK' 
     3001      | 'SHUTDOWN' 
     3002      | 'SIBLINGS' 
     3003      | 'SID' 
     3004      | 'SIGNAL_COMPONENT' 
     3005      | 'SIGNAL_FUNCTION' 
     3006      | 'SIGN' 
     3007      | 'SIMPLE' 
     3008      | 'SINGLE' 
     3009      | 'SINGLETASK' 
     3010      | 'SINH' 
     3011      | 'SIN' 
     3012      | 'SKIP_EXT_OPTIMIZER' 
     3013      | 'SKIP_' 
     3014      | 'SKIP_UNQ_UNUSABLE_IDX' 
     3015      | 'SKIP_UNUSABLE_INDEXES' 
     3016      | 'SMALLFILE' 
     3017      | 'SNAPSHOT' 
     3018      | 'SOME' 
     3019      | 'SORT' 
     3020      | 'SOUNDEX' 
     3021      | 'SOURCE' 
     3022      | 'SPACE_KEYWORD' 
     3023      | 'SPECIFICATION' 
     3024      | 'SPFILE' 
     3025      | 'SPLIT' 
     3026      | 'SPREADSHEET' 
     3027      | 'SQLLDR' 
     3028      | 'SQL' 
     3029      | 'SQL_TRACE' 
     3030      | 'SQRT' 
     3031      | 'STALE' 
     3032      | 'STANDALONE' 
     3033      | 'STANDBY_MAX_DATA_DELAY' 
     3034      | 'STANDBY' 
     3035      | 'STAR' 
     3036      | 'STAR_TRANSFORMATION' 
     3037      | 'STARTUP' 
     3038      | 'STATEMENT_ID' 
     3039      | 'STATEMENT_QUEUING' 
     3040      | 'STATEMENTS' 
     3041      | 'STATIC' 
     3042      | 'STATISTICS' 
     3043      | 'STATS_BINOMIAL_TEST' 
     3044      | 'STATS_CROSSTAB' 
     3045      | 'STATS_F_TEST' 
     3046      | 'STATS_KS_TEST' 
     3047      | 'STATS_MODE' 
     3048      | 'STATS_MW_TEST' 
     3049      | 'STATS_ONE_WAY_ANOVA' 
     3050      | 'STATS_T_TEST_INDEP' 
     3051      | 'STATS_T_TEST_INDEPU' 
     3052      | 'STATS_T_TEST_ONE' 
     3053      | 'STATS_T_TEST_PAIRED' 
     3054      | 'STATS_WSR_TEST' 
     3055      | 'STDDEV' 
     3056      | 'STDDEV_POP' 
     3057      | 'STDDEV_SAMP' 
     3058      | 'STOP' 
     3059      | 'STORAGE' 
     3060      | 'STORE' 
     3061      | 'STREAMS' 
     3062      | 'STRICT' 
     3063      | 'STRING' 
     3064      | 'STRIPE_COLUMNS' 
     3065      | 'STRIPE_WIDTH' 
     3066      | 'STRIP' 
     3067      | 'STRUCTURE' 
     3068      | 'SUBMULTISET' 
     3069      | 'SUBPARTITION' 
     3070      | 'SUBPARTITION_REL' 
     3071      | 'SUBPARTITIONS' 
     3072      | 'SUBQUERIES' 
     3073      | 'SUBQUERY_PRUNING' 
     3074      | 'SUBSTITUTABLE' 
     3075      | 'SUBSTR2' 
     3076      | 'SUBSTR4' 
     3077      | 'SUBSTRB' 
     3078      | 'SUBSTRC' 
     3079      | 'SUBSTR' 
     3080      | 'SUCCESSFUL' 
     3081      | 'SUMMARY' 
     3082      | 'SUM' 
     3083      | 'SUPPLEMENTAL' 
     3084      | 'SUSPEND' 
     3085      | 'SWAP_JOIN_INPUTS' 
     3086      | 'SWITCH' 
     3087      | 'SWITCHOVER' 
     3088      | 'SYNCHRONOUS' 
     3089      | 'SYNC' 
     3090      | 'SYSASM' 
     3091      | 'SYS_AUDIT' 
     3092      | 'SYSAUX' 
     3093      | 'SYS_CHECKACL' 
     3094      | 'SYS_CONNECT_BY_PATH' 
     3095      | 'SYS_CONTEXT' 
     3096      | 'SYSDATE' 
     3097      | 'SYSDBA' 
     3098      | 'SYS_DBURIGEN' 
     3099      | 'SYS_DL_CURSOR' 
     3100      | 'SYS_DM_RXFORM_CHR' 
     3101      | 'SYS_DM_RXFORM_NUM' 
     3102      | 'SYS_DOM_COMPARE' 
     3103      | 'SYS_DST_PRIM2SEC' 
     3104      | 'SYS_DST_SEC2PRIM' 
     3105      | 'SYS_ET_BFILE_TO_RAW' 
     3106      | 'SYS_ET_BLOB_TO_IMAGE' 
     3107      | 'SYS_ET_IMAGE_TO_BLOB' 
     3108      | 'SYS_ET_RAW_TO_BFILE' 
     3109      | 'SYS_EXTPDTXT' 
     3110      | 'SYS_EXTRACT_UTC' 
     3111      | 'SYS_FBT_INSDEL' 
     3112      | 'SYS_FILTER_ACLS' 
     3113      | 'SYS_FNMATCHES' 
     3114      | 'SYS_FNREPLACE' 
     3115      | 'SYS_GET_ACLIDS' 
     3116      | 'SYS_GET_PRIVILEGES' 
     3117      | 'SYS_GETTOKENID' 
     3118      | 'SYS_GETXTIVAL' 
     3119      | 'SYS_GUID' 
     3120      | 'SYS_MAKEXML' 
     3121      | 'SYS_MAKE_XMLNODEID' 
     3122      | 'SYS_MKXMLATTR' 
     3123      | 'SYS_OP_ADT2BIN' 
     3124      | 'SYS_OP_ADTCONS' 
     3125      | 'SYS_OP_ALSCRVAL' 
     3126      | 'SYS_OP_ATG' 
     3127      | 'SYS_OP_BIN2ADT' 
     3128      | 'SYS_OP_BITVEC' 
     3129      | 'SYS_OP_BL2R' 
     3130      | 'SYS_OP_BLOOM_FILTER_LIST' 
     3131      | 'SYS_OP_BLOOM_FILTER' 
     3132      | 'SYS_OP_C2C' 
     3133      | 'SYS_OP_CAST' 
     3134      | 'SYS_OP_CEG' 
     3135      | 'SYS_OP_CL2C' 
     3136      | 'SYS_OP_COMBINED_HASH' 
     3137      | 'SYS_OP_COMP' 
     3138      | 'SYS_OP_CONVERT' 
     3139      | 'SYS_OP_COUNTCHG' 
     3140      | 'SYS_OP_CSCONV' 
     3141      | 'SYS_OP_CSCONVTEST' 
     3142      | 'SYS_OP_CSR' 
     3143      | 'SYS_OP_CSX_PATCH' 
     3144      | 'SYS_OP_DECOMP' 
     3145      | 'SYS_OP_DESCEND' 
     3146      | 'SYS_OP_DISTINCT' 
     3147      | 'SYS_OP_DRA' 
     3148      | 'SYS_OP_DUMP' 
     3149      | 'SYS_OP_DV_CHECK' 
     3150      | 'SYS_OP_ENFORCE_NOT_NULL' 
     3151      | 'SYSOPER' 
     3152      | 'SYS_OP_EXTRACT' 
     3153      | 'SYS_OP_GROUPING' 
     3154      | 'SYS_OP_GUID' 
     3155      | 'SYS_OP_IIX' 
     3156      | 'SYS_OP_ITR' 
     3157      | 'SYS_OP_LBID' 
     3158      | 'SYS_OP_LOBLOC2BLOB' 
     3159      | 'SYS_OP_LOBLOC2CLOB' 
     3160      | 'SYS_OP_LOBLOC2ID' 
     3161      | 'SYS_OP_LOBLOC2NCLOB' 
     3162      | 'SYS_OP_LOBLOC2TYP' 
     3163      | 'SYS_OP_LSVI' 
     3164      | 'SYS_OP_LVL' 
     3165      | 'SYS_OP_MAKEOID' 
     3166      | 'SYS_OP_MAP_NONNULL' 
     3167      | 'SYS_OP_MSR' 
     3168      | 'SYS_OP_NICOMBINE' 
     3169      | 'SYS_OP_NIEXTRACT' 
     3170      | 'SYS_OP_NII' 
     3171      | 'SYS_OP_NIX' 
     3172      | 'SYS_OP_NOEXPAND' 
     3173      | 'SYS_OP_NTCIMG' 
     3174      | 'SYS_OP_NUMTORAW' 
     3175      | 'SYS_OP_OIDVALUE' 
     3176      | 'SYS_OP_OPNSIZE' 
     3177      | 'SYS_OP_PAR_1' 
     3178      | 'SYS_OP_PARGID_1' 
     3179      | 'SYS_OP_PARGID' 
     3180      | 'SYS_OP_PAR' 
     3181      | 'SYS_OP_PIVOT' 
     3182      | 'SYS_OP_R2O' 
     3183      | 'SYS_OP_RAWTONUM' 
     3184      | 'SYS_OP_RDTM' 
     3185      | 'SYS_OP_REF' 
     3186      | 'SYS_OP_RMTD' 
     3187      | 'SYS_OP_ROWIDTOOBJ' 
     3188      | 'SYS_OP_RPB' 
     3189      | 'SYS_OPTLOBPRBSC' 
     3190      | 'SYS_OP_TOSETID' 
     3191      | 'SYS_OP_TPR' 
     3192      | 'SYS_OP_TRTB' 
     3193      | 'SYS_OPTXICMP' 
     3194      | 'SYS_OPTXQCASTASNQ' 
     3195      | 'SYS_OP_UNDESCEND' 
     3196      | 'SYS_OP_VECAND' 
     3197      | 'SYS_OP_VECBIT' 
     3198      | 'SYS_OP_VECOR' 
     3199      | 'SYS_OP_VECXOR' 
     3200      | 'SYS_OP_VERSION' 
     3201      | 'SYS_OP_VREF' 
     3202      | 'SYS_OP_VVD' 
     3203      | 'SYS_OP_XMLCONS_FOR_CSX' 
     3204      | 'SYS_OP_XPTHATG' 
     3205      | 'SYS_OP_XPTHIDX' 
     3206      | 'SYS_OP_XPTHOP' 
     3207      | 'SYS_OP_XTXT2SQLT' 
     3208      | 'SYS_ORDERKEY_DEPTH' 
     3209      | 'SYS_ORDERKEY_MAXCHILD' 
     3210      | 'SYS_ORDERKEY_PARENT' 
     3211      | 'SYS_PARALLEL_TXN' 
     3212      | 'SYS_PATHID_IS_ATTR' 
     3213      | 'SYS_PATHID_IS_NMSPC' 
     3214      | 'SYS_PATHID_LASTNAME' 
     3215      | 'SYS_PATHID_LASTNMSPC' 
     3216      | 'SYS_PATH_REVERSE' 
     3217      | 'SYS_PXQEXTRACT' 
     3218      | 'SYS_RID_ORDER' 
     3219      | 'SYS_ROW_DELTA' 
     3220      | 'SYS_SC_2_XMLT' 
     3221      | 'SYS_SYNRCIREDO' 
     3222      | 'SYSTEM_DEFINED' 
     3223      | 'SYSTEM' 
     3224      | 'SYSTIMESTAMP' 
     3225      | 'SYS_TYPEID' 
     3226      | 'SYS_UMAKEXML' 
     3227      | 'SYS_XMLANALYZE' 
     3228      | 'SYS_XMLCONTAINS' 
     3229      | 'SYS_XMLCONV' 
     3230      | 'SYS_XMLEXNSURI' 
     3231      | 'SYS_XMLGEN' 
     3232      | 'SYS_XMLI_LOC_ISNODE' 
     3233      | 'SYS_XMLI_LOC_ISTEXT' 
     3234      | 'SYS_XMLINSTR' 
     3235      | 'SYS_XMLLOCATOR_GETSVAL' 
     3236      | 'SYS_XMLNODEID_GETCID' 
     3237      | 'SYS_XMLNODEID_GETLOCATOR' 
     3238      | 'SYS_XMLNODEID_GETOKEY' 
     3239      | 'SYS_XMLNODEID_GETPATHID' 
     3240      | 'SYS_XMLNODEID_GETPTRID' 
     3241      | 'SYS_XMLNODEID_GETRID' 
     3242      | 'SYS_XMLNODEID_GETSVAL' 
     3243      | 'SYS_XMLNODEID_GETTID' 
     3244      | 'SYS_XMLNODEID' 
     3245      | 'SYS_XMLT_2_SC' 
     3246      | 'SYS_XMLTRANSLATE' 
     3247      | 'SYS_XMLTYPE2SQL' 
     3248      | 'SYS_XQ_ASQLCNV' 
     3249      | 'SYS_XQ_ATOMCNVCHK' 
     3250      | 'SYS_XQBASEURI' 
     3251      | 'SYS_XQCASTABLEERRH' 
     3252      | 'SYS_XQCODEP2STR' 
     3253      | 'SYS_XQCODEPEQ' 
     3254      | 'SYS_XQCON2SEQ' 
     3255      | 'SYS_XQCONCAT' 
     3256      | 'SYS_XQDELETE' 
     3257      | 'SYS_XQDFLTCOLATION' 
     3258      | 'SYS_XQDOC' 
     3259      | 'SYS_XQDOCURI' 
     3260      | 'SYS_XQDURDIV' 
     3261      | 'SYS_XQED4URI' 
     3262      | 'SYS_XQENDSWITH' 
     3263      | 'SYS_XQERRH' 
     3264      | 'SYS_XQERR' 
     3265      | 'SYS_XQESHTMLURI' 
     3266      | 'SYS_XQEXLOBVAL' 
     3267      | 'SYS_XQEXSTWRP' 
     3268      | 'SYS_XQEXTRACT' 
     3269      | 'SYS_XQEXTRREF' 
     3270      | 'SYS_XQEXVAL' 
     3271      | 'SYS_XQFB2STR' 
     3272      | 'SYS_XQFNBOOL' 
     3273      | 'SYS_XQFNCMP' 
     3274      | 'SYS_XQFNDATIM' 
     3275      | 'SYS_XQFNLNAME' 
     3276      | 'SYS_XQFNNM' 
     3277      | 'SYS_XQFNNSURI' 
     3278      | 'SYS_XQFNPREDTRUTH' 
     3279      | 'SYS_XQFNQNM' 
     3280      | 'SYS_XQFNROOT' 
     3281      | 'SYS_XQFORMATNUM' 
     3282      | 'SYS_XQFTCONTAIN' 
     3283      | 'SYS_XQFUNCR' 
     3284      | 'SYS_XQGETCONTENT' 
     3285      | 'SYS_XQINDXOF' 
     3286      | 'SYS_XQINSERT' 
     3287      | 'SYS_XQINSPFX' 
     3288      | 'SYS_XQIRI2URI' 
     3289      | 'SYS_XQLANG' 
     3290      | 'SYS_XQLLNMFRMQNM' 
     3291      | 'SYS_XQMKNODEREF' 
     3292      | 'SYS_XQNILLED' 
     3293      | 'SYS_XQNODENAME' 
     3294      | 'SYS_XQNORMSPACE' 
     3295      | 'SYS_XQNORMUCODE' 
     3296      | 'SYS_XQ_NRNG' 
     3297      | 'SYS_XQNSP4PFX' 
     3298      | 'SYS_XQNSPFRMQNM' 
     3299      | 'SYS_XQPFXFRMQNM' 
     3300      | 'SYS_XQ_PKSQL2XML' 
     3301      | 'SYS_XQPOLYABS' 
     3302      | 'SYS_XQPOLYADD' 
     3303      | 'SYS_XQPOLYCEL' 
     3304      | 'SYS_XQPOLYCSTBL' 
     3305      | 'SYS_XQPOLYCST' 
     3306      | 'SYS_XQPOLYDIV' 
     3307      | 'SYS_XQPOLYFLR' 
     3308      | 'SYS_XQPOLYMOD' 
     3309      | 'SYS_XQPOLYMUL' 
     3310      | 'SYS_XQPOLYRND' 
     3311      | 'SYS_XQPOLYSQRT' 
     3312      | 'SYS_XQPOLYSUB' 
     3313      | 'SYS_XQPOLYUMUS' 
     3314      | 'SYS_XQPOLYUPLS' 
     3315      | 'SYS_XQPOLYVEQ' 
     3316      | 'SYS_XQPOLYVGE' 
     3317      | 'SYS_XQPOLYVGT' 
     3318      | 'SYS_XQPOLYVLE' 
     3319      | 'SYS_XQPOLYVLT' 
     3320      | 'SYS_XQPOLYVNE' 
     3321      | 'SYS_XQREF2VAL' 
     3322      | 'SYS_XQRENAME' 
     3323      | 'SYS_XQREPLACE' 
     3324      | 'SYS_XQRESVURI' 
     3325      | 'SYS_XQRNDHALF2EVN' 
     3326      | 'SYS_XQRSLVQNM' 
     3327      | 'SYS_XQRYENVPGET' 
     3328      | 'SYS_XQRYVARGET' 
     3329      | 'SYS_XQRYWRP' 
     3330      | 'SYS_XQSEQ2CON4XC' 
     3331      | 'SYS_XQSEQ2CON' 
     3332      | 'SYS_XQSEQDEEPEQ' 
     3333      | 'SYS_XQSEQINSB' 
     3334      | 'SYS_XQSEQRM' 
     3335      | 'SYS_XQSEQRVS' 
     3336      | 'SYS_XQSEQSUB' 
     3337      | 'SYS_XQSEQTYPMATCH' 
     3338      | 'SYS_XQSTARTSWITH' 
     3339      | 'SYS_XQSTATBURI' 
     3340      | 'SYS_XQSTR2CODEP' 
     3341      | 'SYS_XQSTRJOIN' 
     3342      | 'SYS_XQSUBSTRAFT' 
     3343      | 'SYS_XQSUBSTRBEF' 
     3344      | 'SYS_XQTOKENIZE' 
     3345      | 'SYS_XQTREATAS' 
     3346      | 'SYS_XQ_UPKXML2SQL' 
     3347      | 'SYS_XQXFORM' 
     3348      | 'TABLE' 
     3349      | 'TABLE_LOOKUP_BY_NL' 
     3350      | 'TABLES' 
     3351      | 'TABLESPACE' 
     3352      | 'TABLESPACE_NO' 
     3353      | 'TABLE_STATS' 
     3354      | 'TABNO' 
     3355      | 'TANH' 
     3356      | 'TAN' 
     3357      | 'TBLORIDXPARTNUM' 
     3358      | 'TEMPFILE' 
     3359      | 'TEMPLATE' 
     3360      | 'TEMPORARY' 
     3361      | 'TEMP_TABLE' 
     3362      | 'TEST' 
     3363      | 'THAN' 
     3364      | 'THE' 
     3365      | 'THEN' 
     3366      | 'THREAD' 
     3367      | 'THROUGH' 
     3368      | 'TIME' 
     3369      | 'TIMEOUT' 
     3370      | 'TIMES' 
     3371      | 'TIMESTAMP' 
     3372      | 'TIMEZONE_ABBR' 
     3373      | 'TIMEZONE_HOUR' 
     3374      | 'TIMEZONE_MINUTE' 
     3375      | 'TIME_ZONE' 
     3376      | 'TIMEZONE_OFFSET' 
     3377      | 'TIMEZONE_REGION' 
     3378      | 'TIV_GB' 
     3379      | 'TIV_SSF' 
     3380      | 'TO_BINARY_DOUBLE' 
     3381      | 'TO_BINARY_FLOAT' 
     3382      | 'TO_BLOB' 
     3383      | 'TO_CHAR' 
     3384      | 'TO_CLOB' 
     3385      | 'TO_DATE' 
     3386      | 'TO_DSINTERVAL' 
     3387      | 'TO_LOB' 
     3388      | 'TO_MULTI_BYTE' 
     3389      | 'TO_NCHAR' 
     3390      | 'TO_NCLOB' 
     3391      | 'TO_NUMBER' 
     3392      | 'TOPLEVEL' 
     3393      | 'TO_SINGLE_BYTE' 
     3394      | 'TO_TIME' 
     3395      | 'TO_TIMESTAMP' 
     3396      | 'TO_TIMESTAMP_TZ' 
     3397      | 'TO_TIME_TZ' 
     3398      | 'TO_YMINTERVAL' 
     3399      | 'TRACE' 
     3400      | 'TRACING' 
     3401      | 'TRACKING' 
     3402      | 'TRAILING' 
     3403      | 'TRANSACTION' 
     3404      | 'TRANSFORM_DISTINCT_AGG' 
     3405      | 'TRANSITIONAL' 
     3406      | 'TRANSITION' 
     3407      | 'TRANSLATE' 
     3408      | 'TREAT' 
     3409      | 'TRIGGERS' 
     3410      | 'TRIM' 
     3411      | 'TRUE' 
     3412      | 'TRUNCATE' 
     3413      | 'TRUNC' 
     3414      | 'TRUSTED' 
     3415      | 'TUNING' 
     3416      | 'TX' 
     3417      | 'TYPE' 
     3418      | 'TYPES' 
     3419      | 'TZ_OFFSET' 
     3420      | 'UB2' 
     3421      | 'UBA' 
     3422      | 'UID' 
     3423      | 'UNARCHIVED' 
     3424      | 'UNBOUNDED' 
     3425      | 'UNBOUND' 
     3426      | 'UNDER' 
     3427      | 'UNDO' 
     3428      | 'UNDROP' 
     3429      | 'UNIFORM' 
     3430      | 'UNISTR' 
     3431      | 'UNLIMITED' 
     3432      | 'UNLOAD' 
     3433      | 'UNLOCK' 
     3434      | 'UNNEST_INNERJ_DISTINCT_VIEW' 
     3435      | 'UNNEST' 
     3436      | 'UNNEST_NOSEMIJ_NODISTINCTVIEW' 
     3437      | 'UNNEST_SEMIJ_VIEW' 
     3438      | 'UNPACKED' 
     3439      | 'UNPIVOT' 
     3440      | 'UNPROTECTED' 
     3441      | 'UNQUIESCE' 
     3442      | 'UNRECOVERABLE' 
     3443      | 'UNRESTRICTED' 
     3444      | 'UNTIL' 
     3445      | 'UNUSABLE' 
     3446      | 'UNUSED' 
     3447      | 'UPDATABLE' 
     3448      | 'UPDATED' 
     3449      | 'UPDATEXML' 
     3450      | 'UPD_INDEXES' 
     3451      | 'UPD_JOININDEX' 
     3452      | 'UPGRADE' 
     3453      | 'UPPER' 
     3454      | 'UPSERT' 
     3455      | 'UROWID' 
     3456      | 'USAGE' 
     3457      | 'USE_ANTI' 
     3458      | 'USE_CONCAT' 
     3459      | 'USE_HASH_AGGREGATION' 
     3460      | 'USE_HASH_GBY_FOR_PUSHDOWN' 
     3461      | 'USE_HASH' 
     3462      | 'USE_INVISIBLE_INDEXES' 
     3463      | 'USE_MERGE_CARTESIAN' 
     3464      | 'USE_MERGE' 
     3465      | 'USE' 
     3466      | 'USE_NL' 
     3467      | 'USE_NL_WITH_INDEX' 
     3468      | 'USE_PRIVATE_OUTLINES' 
     3469      | 'USER_DEFINED' 
     3470      | 'USERENV' 
     3471      | 'USERGROUP' 
     3472      | 'USER' 
     3473      | 'USER_RECYCLEBIN' 
     3474      | 'USERS' 
     3475      | 'USE_SEMI' 
     3476      | 'USE_STORED_OUTLINES' 
     3477      | 'USE_TTT_FOR_GSETS' 
     3478      | 'USE_WEAK_NAME_RESL' 
     3479      | 'USING' 
     3480      | 'VALIDATE' 
     3481      | 'VALIDATION' 
     3482      | 'VALUE' 
     3483      | 'VARIANCE' 
     3484      | 'VAR_POP' 
     3485      | 'VARRAY' 
     3486      | 'VARRAYS' 
     3487      | 'VAR_SAMP' 
     3488      | 'VARYING' 
     3489      | 'VECTOR_READ' 
     3490      | 'VECTOR_READ_TRACE' 
     3491      | 'VERIFY' 
     3492      | 'VERSIONING' 
     3493      | 'VERSION' 
     3494      | 'VERSIONS_ENDSCN' 
     3495      | 'VERSIONS_ENDTIME' 
     3496      | 'VERSIONS' 
     3497      | 'VERSIONS_OPERATION' 
     3498      | 'VERSIONS_STARTSCN' 
     3499      | 'VERSIONS_STARTTIME' 
     3500      | 'VERSIONS_XID' 
     3501      | 'VIRTUAL' 
     3502      | 'VISIBLE' 
     3503      | 'VOLUME' 
     3504      | 'VSIZE' 
     3505      | 'WAIT' 
     3506      | 'WALLET' 
     3507      | 'WELLFORMED' 
     3508      | 'WHENEVER' 
     3509      | 'WHEN' 
     3510      | 'WHITESPACE' 
     3511      | 'WIDTH_BUCKET' 
     3512      | 'WITHIN' 
     3513      | 'WITHOUT' 
     3514      | 'WORK' 
     3515      | 'WRAPPED' 
     3516      | 'WRITE' 
     3517      | 'XDB_FASTPATH_INSERT' 
     3518      | 'X_DYN_PRUNE' 
     3519      | 'XID' 
     3520      | 'XML2OBJECT' 
     3521      | 'XMLATTRIBUTES' 
     3522      | 'XMLCAST' 
     3523      | 'XMLCDATA' 
     3524      | 'XMLCOLATTVAL' 
     3525      | 'XMLCOMMENT' 
     3526      | 'XMLCONCAT' 
     3527      | 'XMLDIFF' 
     3528      | 'XML_DML_RWT_STMT' 
     3529      | 'XMLELEMENT' 
     3530      | 'XMLEXISTS2' 
     3531      | 'XMLEXISTS' 
     3532      | 'XMLFOREST' 
     3533      | 'XMLINDEX_REWRITE_IN_SELECT' 
     3534      | 'XMLINDEX_REWRITE' 
     3535      | 'XMLINDEX_SEL_IDX_TBL' 
     3536      | 'XMLISNODE' 
     3537      | 'XMLISVALID' 
     3538      | 'XML' 
     3539      | 'XMLNAMESPACES' 
     3540      | 'XMLPARSE' 
     3541      | 'XMLPATCH' 
     3542      | 'XMLPI' 
     3543      | 'XMLQUERY' 
     3544      | 'XMLQUERYVAL' 
     3545      | 'XMLROOT' 
     3546      | 'XMLSCHEMA' 
     3547      | 'XMLSERIALIZE' 
     3548      | 'XMLTABLE' 
     3549      | 'XMLTRANSFORMBLOB' 
     3550      | 'XMLTRANSFORM' 
     3551      | 'XMLTYPE' 
     3552      | 'XPATHTABLE' 
     3553      | 'XS_SYS_CONTEXT' 
     3554      | 'YEAR' 
     3555      | 'YES' 
     3556      | 'ZONE' 
               ;

  750       string_function_name
     3557      : 'CHR' 
     3558      | 'DECODE' 
     3559      | 'SUBSTR' 
     3560      | 'TO_CHAR' 
     3561      | 'TRIM' 
               ;

  751       numeric_function_name
     3562      : 'AVG' 
     3563      | 'COUNT' 
     3564      | 'NVL' 
     3565      | 'ROUND' 
     3566      | 'SUM' 
               ;

  752       (unit_statement | sql_plus_command)
     3567      : unit_statement 
     3568      | sql_plus_command 
               ;

  753       SEMICOLON?
     3569      : 
     3570      | 'SEMICOLON' 
               ;

  754       ((unit_statement | sql_plus_command) SEMICOLON?)
     3571      : (unit_statement | sql_plus_command) SEMICOLON? 
               ;

  755       ((unit_statement | sql_plus_command) SEMICOLON?)*
     3572      : 
     3573      | ((unit_statement | sql_plus_command) SEMICOLON?)* ((unit_statement | sql_plus_command) SEMICOLON?) 
               ;

  756       DEBUG?
     3574      : 
     3575      | 'DEBUG' 
               ;

  757       compiler_parameters_clause*
     3576      : 
     3577      | compiler_parameters_clause* compiler_parameters_clause 
               ;

  758       (REUSE SETTINGS)
     3578      : 'REUSE' 'SETTINGS' 
               ;

  759       (REUSE SETTINGS)?
     3579      : 
     3580      | (REUSE SETTINGS) 
               ;

  760       (OR REPLACE)
     3581      : 'OR' 'REPLACE' 
               ;

  761       (OR REPLACE)?
     3582      : 
     3583      | (OR REPLACE) 
               ;

  762       (',' parameter)
     3584      : ',' parameter 
               ;

  763       (',' parameter)*
     3585      : 
     3586      | (',' parameter)* (',' parameter) 
               ;

  764       ('(' parameter (',' parameter)* ')')
     3587      : '(' parameter (',' parameter)* ')' 
               ;

  765       ('(' parameter (',' parameter)* ')')?
     3588      : 
     3589      | ('(' parameter (',' parameter)* ')') 
               ;

  766       (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC)
     3590      : invoker_rights_clause 
     3591      | parallel_enable_clause 
     3592      | result_cache_clause 
     3593      | 'DETERMINISTIC' 
               ;

  767       (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC)*
     3594      : 
     3595      | (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC)* (invoker_rights_clause | parallel_enable_clause | result_cache_clause | DETERMINISTIC) 
               ;

  768       PIPELINED?
     3596      : 
     3597      | 'PIPELINED' 
               ;

  769       (IS | AS)
     3598      : 'IS' 
     3599      | 'AS' 
               ;

  770       DECLARE?
     3600      : 
     3601      | 'DECLARE' 
               ;

  771       seq_of_declare_specs?
     3602      : 
     3603      | seq_of_declare_specs 
               ;

  772       (DECLARE? seq_of_declare_specs? body | call_spec)
     3604      : DECLARE? seq_of_declare_specs? body 
     3605      | call_spec 
               ;

  773       (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec))
     3606      : PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec) 
               ;

  774       (PIPELINED | AGGREGATE)
     3607      : 'PIPELINED' 
     3608      | 'AGGREGATE' 
               ;

  775       ((PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) | (PIPELINED | AGGREGATE) USING implementation_type_name)
     3609      : (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) 
     3610      | (PIPELINED | AGGREGATE) 'USING' implementation_type_name 
               ;

  776       partition_by_clause?
     3611      : 
     3612      | partition_by_clause 
               ;

  777       (HASH | RANGE | LIST)
     3613      : 'HASH' 
     3614      | 'RANGE' 
     3615      | 'LIST' 
               ;

  778       (ANY | (HASH | RANGE | LIST) paren_column_list)
     3616      : 'ANY' 
     3617      | (HASH | RANGE | LIST) paren_column_list 
               ;

  779       streaming_clause?
     3618      : 
     3619      | streaming_clause 
               ;

  780       relies_on_part?
     3620      : 
     3621      | relies_on_part 
               ;

  781       (',' tableview_name)
     3622      : ',' tableview_name 
               ;

  782       (',' tableview_name)*
     3623      : 
     3624      | (',' tableview_name)* (',' tableview_name) 
               ;

  783       (ORDER | CLUSTER)
     3625      : 'ORDER' 
     3626      | 'CLUSTER' 
               ;

  784       BODY?
     3627      : 
     3628      | 'BODY' 
               ;

  785       (schema_object_name '.')
     3629      : schema_object_name '.' 
               ;

  786       (schema_object_name '.')?
     3630      : 
     3631      | (schema_object_name '.') 
               ;

  787       (PACKAGE | BODY | SPECIFICATION)
     3632      : 'PACKAGE' 
     3633      | 'BODY' 
     3634      | 'SPECIFICATION' 
               ;

  788       (PACKAGE | BODY | SPECIFICATION)?
     3635      : 
     3636      | (PACKAGE | BODY | SPECIFICATION) 
               ;

  789       invoker_rights_clause?
     3637      : 
     3638      | invoker_rights_clause 
               ;

  790       package_obj_spec*
     3639      : 
     3640      | package_obj_spec* package_obj_spec 
               ;

  791       package_name?
     3641      : 
     3642      | package_name 
               ;

  792       package_obj_body*
     3643      : 
     3644      | package_obj_body* package_obj_body 
               ;

  793       (BEGIN seq_of_statements)
     3645      : 'BEGIN' seq_of_statements 
               ;

  794       (BEGIN seq_of_statements)?
     3646      : 
     3647      | (BEGIN seq_of_statements) 
               ;

  795       DETERMINISTIC?
     3648      : 
     3649      | 'DETERMINISTIC' 
               ;

  796       RESULT_CACHE?
     3650      : 
     3651      | 'RESULT_CACHE' 
               ;

  797       (PIPELINED? DETERMINISTIC? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec))
     3652      : PIPELINED? DETERMINISTIC? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec) 
               ;

  798       ((PIPELINED? DETERMINISTIC? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) | (PIPELINED | AGGREGATE) USING implementation_type_name)
     3653      : (PIPELINED? DETERMINISTIC? (IS | AS) (DECLARE? seq_of_declare_specs? body | call_spec)) 
     3654      | (PIPELINED | AGGREGATE) 'USING' implementation_type_name 
               ;

  799       (DECLARE? seq_of_declare_specs? body | call_spec | EXTERNAL)
     3655      : DECLARE? seq_of_declare_specs? body 
     3656      | call_spec 
     3657      | 'EXTERNAL' 
               ;

  800       (ENABLE | DISABLE)
     3658      : 'ENABLE' 
     3659      | 'DISABLE' 
               ;

  801       ((ENABLE | DISABLE) | RENAME TO rename_trigger_nametrigger_name | COMPILE DEBUG? compiler_parameters_clause* (REUSE SETTINGS)?)
     3660      : (ENABLE | DISABLE) 
     3661      | 'RENAME' 'TO' 'rename_trigger_nametrigger_name' 
     3662      | 'COMPILE' DEBUG? compiler_parameters_clause* (REUSE SETTINGS)? 
               ;

  802       (simple_dml_trigger | compound_dml_trigger | non_dml_trigger)
     3663      : simple_dml_trigger 
     3664      | compound_dml_trigger 
     3665      | non_dml_trigger 
               ;

  803       trigger_follows_clause?
     3666      : 
     3667      | trigger_follows_clause 
               ;

  804       (ENABLE | DISABLE)?
     3668      : 
     3669      | (ENABLE | DISABLE) 
               ;

  805       trigger_when_clause?
     3670      : 
     3671      | trigger_when_clause 
               ;

  806       (',' trigger_name)
     3672      : ',' trigger_name 
               ;

  807       (',' trigger_name)*
     3673      : 
     3674      | (',' trigger_name)* (',' trigger_name) 
               ;

  808       (BEFORE | AFTER | INSTEAD OF)
     3675      : 'BEFORE' 
     3676      | 'AFTER' 
     3677      | 'INSTEAD' 'OF' 
               ;

  809       referencing_clause?
     3678      : 
     3679      | referencing_clause 
               ;

  810       for_each_row?
     3680      : 
     3681      | for_each_row 
               ;

  811       (BEFORE | AFTER)
     3682      : 'BEFORE' 
     3683      | 'AFTER' 
               ;

  812       (OR non_dml_event)
     3684      : 'OR' non_dml_event 
               ;

  813       (OR non_dml_event)*
     3685      : 
     3686      | (OR non_dml_event)* (OR non_dml_event) 
               ;

  814       (schema_name '.')
     3687      : schema_name '.' 
               ;

  815       (schema_name '.')?
     3688      : 
     3689      | (schema_name '.') 
               ;

  816       (DATABASE | (schema_name '.')? SCHEMA)
     3690      : 'DATABASE' 
     3691      | (schema_name '.')? 'SCHEMA' 
               ;

  817       function_argument?
     3692      : 
     3693      | function_argument 
               ;

  818       timing_point_section+
     3694      : timing_point_section 
     3695      | timing_point_section+ timing_point_section 
               ;

  819       (OR dml_event_element)
     3696      : 'OR' dml_event_element 
               ;

  820       (OR dml_event_element)*
     3697      : 
     3698      | (OR dml_event_element)* (OR dml_event_element) 
               ;

  821       dml_event_nested_clause?
     3699      : 
     3700      | dml_event_nested_clause 
               ;

  822       (DELETE | INSERT | UPDATE)
     3701      : 'DELETE' 
     3702      | 'INSERT' 
     3703      | 'UPDATE' 
               ;

  823       (OF column_list)
     3704      : 'OF' column_list 
               ;

  824       (OF column_list)?
     3705      : 
     3706      | (OF column_list) 
               ;

  825       referencing_element+
     3707      : referencing_element 
     3708      | referencing_element+ referencing_element 
               ;

  826       (NEW | OLD | PARENT)
     3709      : 'NEW' 
     3710      | 'OLD' 
     3711      | 'PARENT' 
               ;

  827       (FORCE | VALIDATE)
     3712      : 'FORCE' 
     3713      | 'VALIDATE' 
               ;

  828       (FORCE | VALIDATE)?
     3714      : 
     3715      | (FORCE | VALIDATE) 
               ;

  829       (compile_type_clause | replace_type_clause | alter_method_spec | alter_collection_clauses | modifier_clause | overriding_subprogram_spec)
     3716      : compile_type_clause 
     3717      | replace_type_clause 
     3718      | alter_method_spec 
     3719      | alter_collection_clauses 
     3720      | modifier_clause 
     3721      | overriding_subprogram_spec 
               ;

  830       dependent_handling_clause?
     3722      : 
     3723      | dependent_handling_clause 
               ;

  831       (SPECIFICATION | BODY)
     3724      : 'SPECIFICATION' 
     3725      | 'BODY' 
               ;

  832       (SPECIFICATION | BODY)?
     3726      : 
     3727      | (SPECIFICATION | BODY) 
               ;

  833       (',' object_member_spec)
     3728      : ',' object_member_spec 
               ;

  834       (',' object_member_spec)*
     3729      : 
     3730      | (',' object_member_spec)* (',' object_member_spec) 
               ;

  835       (',' alter_method_element)
     3731      : ',' alter_method_element 
               ;

  836       (',' alter_method_element)*
     3732      : 
     3733      | (',' alter_method_element)* (',' alter_method_element) 
               ;

  837       (ADD | DROP)
     3734      : 'ADD' 
     3735      | 'DROP' 
               ;

  838       (map_order_function_spec | subprogram_spec)
     3736      : map_order_function_spec 
     3737      | subprogram_spec 
               ;

  839       (ADD | MODIFY | DROP)
     3738      : 'ADD' 
     3739      | 'MODIFY' 
     3740      | 'DROP' 
               ;

  840       (',' attribute_definition)
     3741      : ',' attribute_definition 
               ;

  841       (',' attribute_definition)*
     3742      : 
     3743      | (',' attribute_definition)* (',' attribute_definition) 
               ;

  842       (attribute_definition | '(' attribute_definition (',' attribute_definition)* ')')
     3744      : attribute_definition 
     3745      | '(' attribute_definition (',' attribute_definition)* ')' 
               ;

  843       type_spec?
     3746      : 
     3747      | type_spec 
               ;

  844       (LIMIT expression | ELEMENT TYPE type_spec)
     3748      : 'LIMIT' expression 
     3749      | 'ELEMENT' 'TYPE' type_spec 
               ;

  845       NOT?
     3750      : 
     3751      | 'NOT' 
               ;

  846       (CONVERT TO SUBSTITUTABLE | NOT? INCLUDING TABLE DATA)
     3752      : 'CONVERT' 'TO' 'SUBSTITUTABLE' 
     3753      | NOT? 'INCLUDING' 'TABLE' 'DATA' 
               ;

  847       (CONVERT TO SUBSTITUTABLE | NOT? INCLUDING TABLE DATA)?
     3754      : 
     3755      | (CONVERT TO SUBSTITUTABLE | NOT? INCLUDING TABLE DATA) 
               ;

  848       dependent_exceptions_part?
     3756      : 
     3757      | dependent_exceptions_part 
               ;

  849       FORCE?
     3758      : 
     3759      | 'FORCE' 
               ;

  850       (type_definition | type_body)
     3760      : type_definition 
     3761      | type_body 
               ;

  851       (OID CHAR_STRING)
     3762      : 'OID' 'CHAR_STRING' 
               ;

  852       (OID CHAR_STRING)?
     3763      : 
     3764      | (OID CHAR_STRING) 
               ;

  853       object_type_def?
     3765      : 
     3766      | object_type_def 
               ;

  854       (object_as_part | object_under_part)
     3767      : object_as_part 
     3768      | object_under_part 
               ;

  855       sqlj_object_type?
     3769      : 
     3770      | sqlj_object_type 
               ;

  856       ('(' object_member_spec (',' object_member_spec)* ')')
     3771      : '(' object_member_spec (',' object_member_spec)* ')' 
               ;

  857       ('(' object_member_spec (',' object_member_spec)* ')')?
     3772      : 
     3773      | ('(' object_member_spec (',' object_member_spec)* ')') 
               ;

  858       modifier_clause*
     3774      : 
     3775      | modifier_clause* modifier_clause 
               ;

  859       (OBJECT | varray_type_def | nested_table_type_def)
     3776      : 'OBJECT' 
     3777      | varray_type_def 
     3778      | nested_table_type_def 
               ;

  860       (NOT NULL_)
     3779      : 'NOT' 'NULL_' 
               ;

  861       (NOT NULL_)?
     3780      : 
     3781      | (NOT NULL_) 
               ;

  862       (SQLDATA | CUSTOMDATUM | ORADATA)
     3782      : 'SQLDATA' 
     3783      | 'CUSTOMDATUM' 
     3784      | 'ORADATA' 
               ;

  863       type_body_elements+
     3785      : type_body_elements 
     3786      | type_body_elements+ type_body_elements 
               ;

  864       (MAP | ORDER)
     3787      : 'MAP' 
     3788      | 'ORDER' 
               ;

  865       (MEMBER | STATIC)
     3789      : 'MEMBER' 
     3790      | 'STATIC' 
               ;

  866       (proc_decl_in_type | func_decl_in_type | constructor_declaration)
     3791      : proc_decl_in_type 
     3792      | func_decl_in_type 
     3793      | constructor_declaration 
               ;

  867       (',' type_elements_parameter)
     3794      : ',' type_elements_parameter 
               ;

  868       (',' type_elements_parameter)*
     3795      : 
     3796      | (',' type_elements_parameter)* (',' type_elements_parameter) 
               ;

  869       (call_spec | DECLARE? seq_of_declare_specs? body ';')
     3797      : call_spec 
     3798      | DECLARE? seq_of_declare_specs? body ';' 
               ;

  870       ('(' type_elements_parameter (',' type_elements_parameter)* ')')
     3799      : '(' type_elements_parameter (',' type_elements_parameter)* ')' 
               ;

  871       ('(' type_elements_parameter (',' type_elements_parameter)* ')')?
     3800      : 
     3801      | ('(' type_elements_parameter (',' type_elements_parameter)* ')') 
               ;

  872       FINAL?
     3802      : 
     3803      | 'FINAL' 
               ;

  873       INSTANTIABLE?
     3804      : 
     3805      | 'INSTANTIABLE' 
               ;

  874       (SELF IN OUT type_spec ',')
     3806      : 'SELF' 'IN' 'OUT' type_spec ',' 
               ;

  875       ('(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')')
     3807      : '(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')' 
               ;

  876       ('(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')')?
     3808      : 
     3809      | ('(' (SELF IN OUT type_spec ',') type_elements_parameter (',' type_elements_parameter)* ')') 
               ;

  877       (INSTANTIABLE | FINAL | OVERRIDING)
     3810      : 'INSTANTIABLE' 
     3811      | 'FINAL' 
     3812      | 'OVERRIDING' 
               ;

  878       sqlj_object_type_attr?
     3813      : 
     3814      | sqlj_object_type_attr 
               ;

  879       modifier_clause?
     3815      : 
     3816      | modifier_clause 
               ;

  880       element_spec_options+
     3817      : element_spec_options 
     3818      | element_spec_options+ element_spec_options 
               ;

  881       (',' pragma_clause)
     3819      : ',' pragma_clause 
               ;

  882       (',' pragma_clause)?
     3820      : 
     3821      | (',' pragma_clause) 
               ;

  883       (type_procedure_spec | type_function_spec)
     3822      : type_procedure_spec 
     3823      | type_function_spec 
               ;

  884       (type_spec | SELF AS RESULT)
     3824      : type_spec 
     3825      | 'SELF' 'AS' 'RESULT' 
               ;

  885       (DECLARE? seq_of_declare_specs? body)
     3826      : DECLARE? seq_of_declare_specs? body 
               ;

  886       (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body))
     3827      : PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body) 
               ;

  887       (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body))?
     3828      : 
     3829      | (PIPELINED? (IS | AS) (DECLARE? seq_of_declare_specs? body)) 
               ;

  888       ';'?
     3830      : 
     3831      | ';' 
               ;

  889       ((IS | AS) call_spec)
     3832      : (IS | AS) call_spec 
               ;

  890       ((IS | AS) call_spec)?
     3833      : 
     3834      | ((IS | AS) call_spec) 
               ;

  891       VARIABLE?
     3835      : 
     3836      | 'VARIABLE' 
               ;

  892       ((IS | AS) call_spec | EXTERNAL VARIABLE? NAME expression)
     3837      : (IS | AS) call_spec 
     3838      | 'EXTERNAL' VARIABLE? 'NAME' expression 
               ;

  893       ((IS | AS) call_spec | EXTERNAL VARIABLE? NAME expression)?
     3839      : 
     3840      | ((IS | AS) call_spec | EXTERNAL VARIABLE? NAME expression) 
               ;

  894       (',' pragma_elements)
     3841      : ',' pragma_elements 
               ;

  895       (',' pragma_elements)*
     3842      : 
     3843      | (',' pragma_elements)* (',' pragma_elements) 
               ;

  896       sequence_spec+
     3844      : sequence_spec 
     3845      | sequence_spec+ sequence_spec 
               ;

  897       (COMMIT | ROLLBACK | NOTHING)
     3846      : 'COMMIT' 
     3847      | 'ROLLBACK' 
     3848      | 'NOTHING' 
               ;

  898       (enable_or_disable | FORCE)
     3849      : enable_or_disable 
     3850      | 'FORCE' 
               ;

  899       (DML | DDL | QUERY)
     3851      : 'DML' 
     3852      | 'DDL' 
     3853      | 'QUERY' 
               ;

  900       (literal | parameter_name)
     3854      : literal 
     3855      | parameter_name 
               ;

  901       (PARALLEL (literal | parameter_name))
     3856      : 'PARALLEL' (literal | parameter_name) 
               ;

  902       (PARALLEL (literal | parameter_name))?
     3857      : 
     3858      | (PARALLEL (literal | parameter_name)) 
               ;

  903       (ADVISE (COMMIT | ROLLBACK | NOTHING) | CLOSE DATABASE LINK parameter_name | enable_or_disable COMMIT IN PROCEDURE | enable_or_disable GUARD | (enable_or_disable | FORCE) PARALLEL (DML | DDL | QUERY) (PARALLEL (literal | parameter_name))? | SET alter_session_set_clause)
     3859      : 'ADVISE' (COMMIT | ROLLBACK | NOTHING) 
     3860      | 'CLOSE' 'DATABASE' 'LINK' parameter_name 
     3861      | enable_or_disable 'COMMIT' 'IN' 'PROCEDURE' 
     3862      | enable_or_disable 'GUARD' 
     3863      | (enable_or_disable | FORCE) 'PARALLEL' (DML | DDL | QUERY) (PARALLEL (literal | parameter_name))? 
     3864      | 'SET' alter_session_set_clause 
               ;

  904       (sequence_start_clause | sequence_spec)
     3865      : sequence_start_clause 
     3866      | sequence_spec 
               ;

  905       (sequence_start_clause | sequence_spec)*
     3867      : 
     3868      | (sequence_start_clause | sequence_spec)* (sequence_start_clause | sequence_spec) 
               ;

  906       (UNIQUE | BITMAP)
     3869      : 'UNIQUE' 
     3870      | 'BITMAP' 
               ;

  907       (UNIQUE | BITMAP)?
     3871      : 
     3872      | (UNIQUE | BITMAP) 
               ;

  908       (cluster_index_clause | table_index_clause | bitmap_join_index_clause)
     3873      : cluster_index_clause 
     3874      | table_index_clause 
     3875      | bitmap_join_index_clause 
               ;

  909       UNUSABLE?
     3876      : 
     3877      | 'UNUSABLE' 
               ;

  910       index_attributes?
     3878      : 
     3879      | index_attributes 
               ;

  911       (id_expression '.')
     3880      : id_expression '.' 
               ;

  912       (id_expression '.')?
     3881      : 
     3882      | (id_expression '.') 
               ;

  913       table_alias?
     3883      : 
     3884      | table_alias 
               ;

  914       (ASC | DESC)
     3885      : 'ASC' 
     3886      | 'DESC' 
               ;

  915       (ASC | DESC)?
     3887      : 
     3888      | (ASC | DESC) 
               ;

  916       (',' index_expr (ASC | DESC)?)
     3889      : ',' index_expr (ASC | DESC)? 
               ;

  917       (',' index_expr (ASC | DESC)?)*
     3890      : 
     3891      | (',' index_expr (ASC | DESC)?)* (',' index_expr (ASC | DESC)?) 
               ;

  918       index_properties?
     3892      : 
     3893      | index_properties 
               ;

  919       (tableview_name | table_alias)
     3894      : tableview_name 
     3895      | table_alias 
               ;

  920       (tableview_name | table_alias)?
     3896      : 
     3897      | (tableview_name | table_alias) 
               ;

  921       (',' (tableview_name | table_alias)? column_name (ASC | DESC)?)
     3898      : ',' (tableview_name | table_alias)? column_name (ASC | DESC)? 
               ;

  922       (',' (tableview_name | table_alias)? column_name (ASC | DESC)?)*
     3899      : 
     3900      | (',' (tableview_name | table_alias)? column_name (ASC | DESC)?)* (',' (tableview_name | table_alias)? column_name (ASC | DESC)?) 
               ;

  923       (',' tableview_name table_alias)
     3901      : ',' tableview_name table_alias 
               ;

  924       (',' tableview_name table_alias)*
     3902      : 
     3903      | (',' tableview_name table_alias)* (',' tableview_name table_alias) 
               ;

  925       local_partitioned_index?
     3904      : 
     3905      | local_partitioned_index 
               ;

  926       (global_partitioned_index | local_partitioned_index | index_attributes)
     3906      : global_partitioned_index 
     3907      | local_partitioned_index 
     3908      | index_attributes 
               ;

  927       (global_partitioned_index | local_partitioned_index | index_attributes)+
     3909      : (global_partitioned_index | local_partitioned_index | index_attributes) 
     3910      | (global_partitioned_index | local_partitioned_index | index_attributes)+ (global_partitioned_index | local_partitioned_index | index_attributes) 
               ;

  928       (domain_index_clause | xmlindex_clause)
     3911      : domain_index_clause 
     3912      | xmlindex_clause 
               ;

  929       local_domain_index_clause?
     3913      : 
     3914      | local_domain_index_clause 
               ;

  930       parallel_clause?
     3915      : 
     3916      | parallel_clause 
               ;

  931       (PARAMETERS '(' odci_parameters ')')
     3917      : 'PARAMETERS' '(' odci_parameters ')' 
               ;

  932       (PARAMETERS '(' odci_parameters ')')?
     3918      : 
     3919      | (PARAMETERS '(' odci_parameters ')') 
               ;

  933       (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)
     3920      : ',' 'PARTITION' partition_name (PARAMETERS '(' odci_parameters ')')? 
               ;

  934       (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)*
     3921      : 
     3922      | (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?) 
               ;

  935       ('(' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')? (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* ')')
     3923      : '(' 'PARTITION' partition_name (PARAMETERS '(' odci_parameters ')')? (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* ')' 
               ;

  936       ('(' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')? (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* ')')?
     3924      : 
     3925      | ('(' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')? (',' PARTITION partition_name (PARAMETERS '(' odci_parameters ')')?)* ')') 
               ;

  937       (XDB '.')
     3926      : 'XDB' '.' 
               ;

  938       (XDB '.')?
     3927      : 
     3928      | (XDB '.') 
               ;

  939       local_xmlindex_clause?
     3929      : 
     3930      | local_xmlindex_clause 
               ;

  940       (',' PARTITION partition_name)
     3931      : ',' 'PARTITION' partition_name 
               ;

  941       (',' PARTITION partition_name)*
     3932      : 
     3933      | (',' PARTITION partition_name)* (',' PARTITION partition_name) 
               ;

  942       ('(' PARTITION partition_name (',' PARTITION partition_name)* ')')
     3934      : '(' 'PARTITION' partition_name (',' PARTITION partition_name)* ')' 
               ;

  943       ('(' PARTITION partition_name (',' PARTITION partition_name)* ')')?
     3935      : 
     3936      | ('(' PARTITION partition_name (',' PARTITION partition_name)* ')') 
               ;

  944       (',' column_name)
     3937      : ',' column_name 
               ;

  945       (',' column_name)*
     3938      : 
     3939      | (',' column_name)* (',' column_name) 
               ;

  946       (individual_hash_partitions | hash_partitions_by_quantity)
     3940      : individual_hash_partitions 
     3941      | hash_partitions_by_quantity 
               ;

  947       (RANGE '(' column_name (',' column_name)* ')' '(' index_partitioning_clause ')' | HASH '(' column_name (',' column_name)* ')' (individual_hash_partitions | hash_partitions_by_quantity))
     3942      : 'RANGE' '(' column_name (',' column_name)* ')' '(' index_partitioning_clause ')' 
     3943      | 'HASH' '(' column_name (',' column_name)* ')' (individual_hash_partitions | hash_partitions_by_quantity) 
               ;

  948       partition_name?
     3944      : 
     3945      | partition_name 
               ;

  949       (',' literal)
     3946      : ',' literal 
               ;

  950       (',' literal)*
     3947      : 
     3948      | (',' literal)* (',' literal) 
               ;

  951       segment_attributes_clause?
     3949      : 
     3950      | segment_attributes_clause 
               ;

  952       (on_range_partitioned_table | on_list_partitioned_table | on_hash_partitioned_table | on_comp_partitioned_table)
     3951      : on_range_partitioned_table 
     3952      | on_list_partitioned_table 
     3953      | on_hash_partitioned_table 
     3954      | on_comp_partitioned_table 
               ;

  953       (on_range_partitioned_table | on_list_partitioned_table | on_hash_partitioned_table | on_comp_partitioned_table)?
     3955      : 
     3956      | (on_range_partitioned_table | on_list_partitioned_table | on_hash_partitioned_table | on_comp_partitioned_table) 
               ;

  954       (',' partitioned_table)
     3957      : ',' partitioned_table 
               ;

  955       (',' partitioned_table)*
     3958      : 
     3959      | (',' partitioned_table)* (',' partitioned_table) 
               ;

  956       (segment_attributes_clause | key_compression)
     3960      : segment_attributes_clause 
     3961      | key_compression 
               ;

  957       (segment_attributes_clause | key_compression)*
     3962      : 
     3963      | (segment_attributes_clause | key_compression)* (segment_attributes_clause | key_compression) 
               ;

  958       (',' tablespace)
     3964      : ',' tablespace 
               ;

  959       (',' tablespace)*
     3965      : 
     3966      | (',' tablespace)* (',' tablespace) 
               ;

  960       (',' on_hash_partitioned_clause)
     3967      : ',' on_hash_partitioned_clause 
               ;

  961       (',' on_hash_partitioned_clause)*
     3968      : 
     3969      | (',' on_hash_partitioned_clause)* (',' on_hash_partitioned_clause) 
               ;

  962       (TABLESPACE tablespace)
     3970      : 'TABLESPACE' tablespace 
               ;

  963       (TABLESPACE tablespace)?
     3971      : 
     3972      | (TABLESPACE tablespace) 
               ;

  964       key_compression?
     3973      : 
     3974      | key_compression 
               ;

  965       (STORE IN '(' tablespace (',' tablespace)* ')')
     3975      : 'STORE' 'IN' '(' tablespace (',' tablespace)* ')' 
               ;

  966       (STORE IN '(' tablespace (',' tablespace)* ')')?
     3976      : 
     3977      | (STORE IN '(' tablespace (',' tablespace)* ')') 
               ;

  967       (',' on_comp_partitioned_clause)
     3978      : ',' on_comp_partitioned_clause 
               ;

  968       (',' on_comp_partitioned_clause)*
     3979      : 
     3980      | (',' on_comp_partitioned_clause)* (',' on_comp_partitioned_clause) 
               ;

  969       index_subpartition_clause?
     3981      : 
     3982      | index_subpartition_clause 
               ;

  970       (',' index_subpartition_subclause)
     3983      : ',' index_subpartition_subclause 
               ;

  971       (',' index_subpartition_subclause)*
     3984      : 
     3985      | (',' index_subpartition_subclause)* (',' index_subpartition_subclause) 
               ;

  972       subpartition_name?
     3986      : 
     3987      | subpartition_name 
               ;

  973       (alter_index_ops_set1 | alter_index_ops_set2)
     3988      : alter_index_ops_set1 
     3989      | alter_index_ops_set2 
               ;

  974       (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause)
     3990      : deallocate_unused_clause 
     3991      | allocate_extent_clause 
     3992      | shrink_clause 
     3993      | parallel_clause 
     3994      | physical_attributes_clause 
     3995      | logging_clause 
               ;

  975       (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause)+
     3996      : (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause) 
     3997      | (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause)+ (deallocate_unused_clause | allocate_extent_clause | shrink_clause | parallel_clause | physical_attributes_clause | logging_clause) 
               ;

  976       (PARTITION partition_name | SUBPARTITION subpartition_name | REVERSE | NOREVERSE)
     3998      : 'PARTITION' partition_name 
     3999      | 'SUBPARTITION' subpartition_name 
     4000      | 'REVERSE' 
     4001      | 'NOREVERSE' 
               ;

  977       (PARTITION partition_name | SUBPARTITION subpartition_name | REVERSE | NOREVERSE)?
     4002      : 
     4003      | (PARTITION partition_name | SUBPARTITION subpartition_name | REVERSE | NOREVERSE) 
               ;

  978       (parallel_clause | TABLESPACE tablespace | PARAMETERS '(' odci_parameters ')' | ONLINE | physical_attributes_clause | key_compression | logging_clause)
     4004      : parallel_clause 
     4005      | 'TABLESPACE' tablespace 
     4006      | 'PARAMETERS' '(' odci_parameters ')' 
     4007      | 'ONLINE' 
     4008      | physical_attributes_clause 
     4009      | key_compression 
     4010      | logging_clause 
               ;

  979       (parallel_clause | TABLESPACE tablespace | PARAMETERS '(' odci_parameters ')' | ONLINE | physical_attributes_clause | key_compression | logging_clause)*
     4011      : 
     4012      | (parallel_clause | TABLESPACE tablespace | PARAMETERS '(' odci_parameters ')' | ONLINE | physical_attributes_clause | key_compression | logging_clause)* (parallel_clause | TABLESPACE tablespace | PARAMETERS '(' odci_parameters ')' | ONLINE | physical_attributes_clause | key_compression | logging_clause) 
               ;

  980       (FOR PARTITION partition_name)
     4013      : 'FOR' 'PARTITION' partition_name 
               ;

  981       (FOR PARTITION partition_name)?
     4014      : 
     4015      | (FOR PARTITION partition_name) 
               ;

  982       (tablespace | DEFAULT)
     4016      : tablespace 
     4017      | 'DEFAULT' 
               ;

  983       (physical_attributes_clause | TABLESPACE (tablespace | DEFAULT) | logging_clause)
     4018      : physical_attributes_clause 
     4019      | 'TABLESPACE' (tablespace | DEFAULT) 
     4020      | logging_clause 
               ;

  984       modify_index_partitions_ops+
     4021      : modify_index_partitions_ops 
     4022      | modify_index_partitions_ops+ modify_index_partitions_ops 
               ;

  985       (modify_index_partitions_ops+ | PARAMETERS '(' odci_parameters ')' | COALESCE | UPDATE BLOCK REFERENCES | UNUSABLE)
     4023      : modify_index_partitions_ops+ 
     4024      | 'PARAMETERS' '(' odci_parameters ')' 
     4025      | 'COALESCE' 
     4026      | 'UPDATE' 'BLOCK' 'REFERENCES' 
     4027      | 'UNUSABLE' 
               ;

  986       (PARTITION partition_name | SUBPARTITION subpartition_name)
     4028      : 'PARTITION' partition_name 
     4029      | 'SUBPARTITION' subpartition_name 
               ;

  987       (INTO '(' index_partition_description ',' index_partition_description ')')
     4030      : 'INTO' '(' index_partition_description ',' index_partition_description ')' 
               ;

  988       (INTO '(' index_partition_description ',' index_partition_description ')')?
     4031      : 
     4032      | (INTO '(' index_partition_description ',' index_partition_description ')') 
               ;

  989       (segment_attributes_clause | key_compression)+
     4033      : (segment_attributes_clause | key_compression) 
     4034      | (segment_attributes_clause | key_compression)+ (segment_attributes_clause | key_compression) 
               ;

  990       ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')')
     4035      : (segment_attributes_clause | key_compression)+ 
     4036      | 'PARAMETERS' '(' odci_parameters ')' 
               ;

  991       (partition_name ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')') UNUSABLE?)
     4037      : partition_name ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')') UNUSABLE? 
               ;

  992       (partition_name ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')') UNUSABLE?)?
     4038      : 
     4039      | (partition_name ((segment_attributes_clause | key_compression)+ | PARAMETERS '(' odci_parameters ')') UNUSABLE?) 
               ;

  993       (UNUSABLE | allocate_extent_clause | deallocate_unused_clause)
     4040      : 'UNUSABLE' 
     4041      | allocate_extent_clause 
     4042      | deallocate_unused_clause 
               ;

  994       (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause)
     4043      : identified_by 
     4044      | identified_other_clause 
     4045      | user_tablespace_clause 
     4046      | quota_clause 
     4047      | profile_clause 
     4048      | password_expire_clause 
     4049      | user_lock_clause 
     4050      | user_editions_clause 
     4051      | container_clause 
               ;

  995       (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause)+
     4052      : (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause) 
     4053      | (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause)+ (identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | password_expire_clause | user_lock_clause | user_editions_clause | container_clause) 
               ;

  996       (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause)
     4054      : alter_identified_by 
     4055      | identified_other_clause 
     4056      | user_tablespace_clause 
     4057      | quota_clause 
     4058      | profile_clause 
     4059      | user_default_role_clause 
     4060      | password_expire_clause 
     4061      | user_lock_clause 
     4062      | alter_user_editions_clause 
     4063      | container_clause 
     4064      | container_data_clause 
               ;

  997       (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause)+
     4065      : (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause) 
     4066      | (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause)+ (alter_identified_by | identified_other_clause | user_tablespace_clause | quota_clause | profile_clause | user_default_role_clause | password_expire_clause | user_lock_clause | alter_user_editions_clause | container_clause | container_data_clause) 
               ;

  998       (',' user_object_name)
     4067      : ',' user_object_name 
               ;

  999       (',' user_object_name)*
     4068      : 
     4069      | (',' user_object_name)* (',' user_object_name) 
               ;

 1000       (REPLACE id_expression)
     4070      : 'REPLACE' id_expression 
               ;

 1001       (REPLACE id_expression)?
     4071      : 
     4072      | (REPLACE id_expression) 
               ;

 1002       (EXTERNALLY | GLOBALLY)
     4073      : 'EXTERNALLY' 
     4074      | 'GLOBALLY' 
               ;

 1003       (AS quoted_string)
     4075      : 'AS' quoted_string 
               ;

 1004       (AS quoted_string)?
     4076      : 
     4077      | (AS quoted_string) 
               ;

 1005       (DEFAULT | TEMPORARY)
     4078      : 'DEFAULT' 
     4079      | 'TEMPORARY' 
               ;

 1006       (size_clause | UNLIMITED)
     4080      : size_clause 
     4081      | 'UNLIMITED' 
               ;

 1007       (',' role_name)
     4082      : ',' role_name 
               ;

 1008       (',' role_name)*
     4083      : 
     4084      | (',' role_name)* (',' role_name) 
               ;

 1009       (EXCEPT role_name (',' role_name)*)
     4085      : 'EXCEPT' role_name (',' role_name)* 
               ;

 1010       (EXCEPT role_name (',' role_name)*)*
     4086      : 
     4087      | (EXCEPT role_name (',' role_name)*)* (EXCEPT role_name (',' role_name)*) 
               ;

 1011       (NONE | role_clause)
     4088      : 'NONE' 
     4089      | role_clause 
               ;

 1012       (LOCK | UNLOCK)
     4090      : 'LOCK' 
     4091      | 'UNLOCK' 
               ;

 1013       (',' regular_id)
     4092      : ',' regular_id 
               ;

 1014       (',' regular_id)*
     4093      : 
     4094      | (',' regular_id)* (',' regular_id) 
               ;

 1015       (FOR regular_id (',' regular_id)*)
     4095      : 'FOR' regular_id (',' regular_id)* 
               ;

 1016       (FOR regular_id (',' regular_id)*)?
     4096      : 
     4097      | (FOR regular_id (',' regular_id)*) 
               ;

 1017       (ENTERPRISE USERS | user_object_name)
     4098      : 'ENTERPRISE' 'USERS' 
     4099      | user_object_name 
               ;

 1018       (NO ROLES | ROLE role_clause)
     4100      : 'NO' 'ROLES' 
     4101      | 'ROLE' role_clause 
               ;

 1019       (WITH (NO ROLES | ROLE role_clause))
     4102      : 'WITH' (NO ROLES | ROLE role_clause) 
               ;

 1020       (WITH (NO ROLES | ROLE role_clause))?
     4103      : 
     4104      | (WITH (NO ROLES | ROLE role_clause)) 
               ;

 1021       (AUTHENTICATION REQUIRED)
     4105      : 'AUTHENTICATION' 'REQUIRED' 
               ;

 1022       (AUTHENTICATION REQUIRED)?
     4106      : 
     4107      | (AUTHENTICATION REQUIRED) 
               ;

 1023       (PASSWORD | CERTIFICATE | DISTINGUISHED NAME)
     4108      : 'PASSWORD' 
     4109      | 'CERTIFICATE' 
     4110      | 'DISTINGUISHED' 'NAME' 
               ;

 1024       (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME))
     4111      : 'AUTHENTICATED' 'USING' (PASSWORD | CERTIFICATE | DISTINGUISHED NAME) 
               ;

 1025       (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME))?
     4112      : 
     4113      | (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME)) 
               ;

 1026       (ENTERPRISE USERS | user_object_name (WITH (NO ROLES | ROLE role_clause))? (AUTHENTICATION REQUIRED)? (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME))?)
     4114      : 'ENTERPRISE' 'USERS' 
     4115      | user_object_name (WITH (NO ROLES | ROLE role_clause))? (AUTHENTICATION REQUIRED)? (AUTHENTICATED USING (PASSWORD | CERTIFICATE | DISTINGUISHED NAME))? 
               ;

 1027       (',' id_expression)
     4116      : ',' id_expression 
               ;

 1028       (',' id_expression)*
     4117      : 
     4118      | (',' id_expression)* (',' id_expression) 
               ;

 1029       (ALL | DEFAULT | container_names)
     4119      : 'ALL' 
     4120      | 'DEFAULT' 
     4121      | container_names 
               ;

 1030       (ADD | REMOVE)
     4122      : 'ADD' 
     4123      | 'REMOVE' 
               ;

 1031       (FOR container_tableview_name)
     4124      : 'FOR' container_tableview_name 
               ;

 1032       (FOR container_tableview_name)?
     4125      : 
     4126      | (FOR container_tableview_name) 
               ;

 1033       (TABLE tableview_name | INDEX index_name)
     4127      : 'TABLE' tableview_name 
     4128      | 'INDEX' index_name 
               ;

 1034       partition_extention_clause?
     4129      : 
     4130      | partition_extention_clause 
               ;

 1035       (ANALYZE (TABLE tableview_name | INDEX index_name) partition_extention_clause? | ANALYZE CLUSTER cluster_name)
     4131      : 'ANALYZE' (TABLE tableview_name | INDEX index_name) partition_extention_clause? 
     4132      | 'ANALYZE' 'CLUSTER' cluster_name 
               ;

 1036       into_clause1?
     4133      : 
     4134      | into_clause1 
               ;

 1037       SYSTEM?
     4135      : 
     4136      | 'SYSTEM' 
               ;

 1038       (validation_clauses | LIST CHAINED ROWS into_clause1? | DELETE SYSTEM? STATISTICS)
     4137      : validation_clauses 
     4138      | 'LIST' 'CHAINED' 'ROWS' into_clause1? 
     4139      | 'DELETE' SYSTEM? 'STATISTICS' 
               ;

 1039       (',' partition_key_value)
     4140      : ',' partition_key_value 
               ;

 1040       (',' partition_key_value)*
     4141      : 
     4142      | (',' partition_key_value)* (',' partition_key_value) 
               ;

 1041       ('(' partition_name ')' | FOR '(' partition_key_value (',' partition_key_value)* ')')
     4143      : '(' partition_name ')' 
     4144      | 'FOR' '(' partition_key_value (',' partition_key_value)* ')' 
               ;

 1042       (',' subpartition_key_value)
     4145      : ',' subpartition_key_value 
               ;

 1043       (',' subpartition_key_value)*
     4146      : 
     4147      | (',' subpartition_key_value)* (',' subpartition_key_value) 
               ;

 1044       ('(' subpartition_name ')' | FOR '(' subpartition_key_value (',' subpartition_key_value)* ')')
     4148      : '(' subpartition_name ')' 
     4149      | 'FOR' '(' subpartition_key_value (',' subpartition_key_value)* ')' 
               ;

 1045       (SET DANGLING TO NULL_)
     4150      : 'SET' 'DANGLING' 'TO' 'NULL_' 
               ;

 1046       (SET DANGLING TO NULL_)?
     4151      : 
     4152      | (SET DANGLING TO NULL_) 
               ;

 1047       online_or_offline?
     4153      : 
     4154      | online_or_offline 
               ;

 1048       into_clause?
     4155      : 
     4156      | into_clause 
               ;

 1049       (CASCADE FAST | CASCADE online_or_offline? into_clause? | CASCADE)
     4157      : 'CASCADE' 'FAST' 
     4158      | 'CASCADE' online_or_offline? into_clause? 
     4159      | 'CASCADE' 
               ;

 1050       (CASCADE FAST | CASCADE online_or_offline? into_clause? | CASCADE)?
     4160      : 
     4161      | (CASCADE FAST | CASCADE online_or_offline? into_clause? | CASCADE) 
               ;

 1051       tableview_name?
     4162      : 
     4163      | tableview_name 
               ;

 1052       (column_association | function_association)
     4164      : column_association 
     4165      | function_association 
               ;

 1053       storage_table_clause?
     4166      : 
     4167      | storage_table_clause 
               ;

 1054       (',' tableview_name '.' column_name)
     4168      : ',' tableview_name '.' column_name 
               ;

 1055       (',' tableview_name '.' column_name)*
     4169      : 
     4170      | (',' tableview_name '.' column_name)* (',' tableview_name '.' column_name) 
               ;

 1056       (',' function_name)
     4171      : ',' function_name 
               ;

 1057       (',' function_name)*
     4172      : 
     4173      | (',' function_name)* (',' function_name) 
               ;

 1058       (',' package_name)
     4174      : ',' package_name 
               ;

 1059       (',' package_name)*
     4175      : 
     4176      | (',' package_name)* (',' package_name) 
               ;

 1060       (',' type_name)
     4177      : ',' type_name 
               ;

 1061       (',' type_name)*
     4178      : 
     4179      | (',' type_name)* (',' type_name) 
               ;

 1062       (',' index_name)
     4180      : ',' index_name 
               ;

 1063       (',' index_name)*
     4181      : 
     4182      | (',' index_name)* (',' index_name) 
               ;

 1064       (',' indextype_name)
     4183      : ',' indextype_name 
               ;

 1065       (',' indextype_name)*
     4184      : 
     4185      | (',' indextype_name)* (',' indextype_name) 
               ;

 1066       (FUNCTIONS function_name (',' function_name)* | PACKAGES package_name (',' package_name)* | TYPES type_name (',' type_name)* | INDEXES index_name (',' index_name)* | INDEXTYPES indextype_name (',' indextype_name)*)
     4186      : 'FUNCTIONS' function_name (',' function_name)* 
     4187      | 'PACKAGES' package_name (',' package_name)* 
     4188      | 'TYPES' type_name (',' type_name)* 
     4189      | 'INDEXES' index_name (',' index_name)* 
     4190      | 'INDEXTYPES' indextype_name (',' indextype_name)* 
               ;

 1067       (',' default_selectivity_clause)
     4191      : ',' default_selectivity_clause 
               ;

 1068       (',' default_selectivity_clause)?
     4192      : 
     4193      | (',' default_selectivity_clause) 
               ;

 1069       (',' default_cost_clause)
     4194      : ',' default_cost_clause 
               ;

 1070       (',' default_cost_clause)?
     4195      : 
     4196      | (',' default_cost_clause) 
               ;

 1071       (using_statistics_type | default_cost_clause (',' default_selectivity_clause)? | default_selectivity_clause (',' default_cost_clause)?)
     4197      : using_statistics_type 
     4198      | default_cost_clause (',' default_selectivity_clause)? 
     4199      | default_selectivity_clause (',' default_cost_clause)? 
               ;

 1072       (statistics_type_name | NULL_)
     4200      : statistics_type_name 
     4201      | 'NULL_' 
               ;

 1073       (SYSTEM | USER)
     4202      : 'SYSTEM' 
     4203      | 'USER' 
               ;

 1074       {self_isVersion12}?
     4204      : 
     4205      | {self_isVersion12} 
               ;

 1075       (BY | EXCEPT)
     4206      : 'BY' 
     4207      | 'EXCEPT' 
               ;

 1076       (',' audit_user)
     4208      : ',' audit_user 
               ;

 1077       (',' audit_user)*
     4209      : 
     4210      | (',' audit_user)* (',' audit_user) 
               ;

 1078       ((BY | EXCEPT) audit_user (',' audit_user)*)
     4211      : (BY | EXCEPT) audit_user (',' audit_user)* 
               ;

 1079       ((BY | EXCEPT) audit_user (',' audit_user)*)?
     4212      : 
     4213      | ((BY | EXCEPT) audit_user (',' audit_user)*) 
               ;

 1080       (WHENEVER NOT? SUCCESSFUL)
     4214      : 'WHENEVER' NOT? 'SUCCESSFUL' 
               ;

 1081       (WHENEVER NOT? SUCCESSFUL)?
     4215      : 
     4216      | (WHENEVER NOT? SUCCESSFUL) 
               ;

 1082       (',' attribute_name)
     4217      : ',' attribute_name 
               ;

 1083       (',' attribute_name)*
     4218      : 
     4219      | (',' attribute_name)* (',' attribute_name) 
               ;

 1084       (BY audit_user (',' audit_user)*)
     4220      : 'BY' audit_user (',' audit_user)* 
               ;

 1085       (BY audit_user (',' audit_user)*)?
     4221      : 
     4222      | (BY audit_user (',' audit_user)*) 
               ;

 1086       (POLICY policy_name ((BY | EXCEPT) audit_user (',' audit_user)*)? (WHENEVER NOT? SUCCESSFUL)? | CONTEXT NAMESPACE oracle_namespace ATTRIBUTES attribute_name (',' attribute_name)* (BY audit_user (',' audit_user)*)?)
     4223      : 'POLICY' policy_name ((BY | EXCEPT) audit_user (',' audit_user)*)? (WHENEVER NOT? SUCCESSFUL)? 
     4224      | 'CONTEXT' 'NAMESPACE' oracle_namespace 'ATTRIBUTES' attribute_name (',' attribute_name)* (BY audit_user (',' audit_user)*)? 
               ;

 1087       (auditing_by_clause | IN SESSION CURRENT)
     4225      : auditing_by_clause 
     4226      | 'IN' 'SESSION' 'CURRENT' 
               ;

 1088       (auditing_by_clause | IN SESSION CURRENT)?
     4227      : 
     4228      | (auditing_by_clause | IN SESSION CURRENT) 
               ;

 1089       (audit_operation_clause (auditing_by_clause | IN SESSION CURRENT)? | audit_schema_object_clause | NETWORK | audit_direct_path)
     4229      : audit_operation_clause (auditing_by_clause | IN SESSION CURRENT)? 
     4230      | audit_schema_object_clause 
     4231      | 'NETWORK' 
     4232      | audit_direct_path 
               ;

 1090       (SESSION | ACCESS)
     4233      : 'SESSION' 
     4234      | 'ACCESS' 
               ;

 1091       (BY (SESSION | ACCESS))
     4235      : 'BY' (SESSION | ACCESS) 
               ;

 1092       (BY (SESSION | ACCESS))?
     4236      : 
     4237      | (BY (SESSION | ACCESS)) 
               ;

 1093       audit_container_clause?
     4238      : 
     4239      | audit_container_clause 
               ;

 1094       (CURRENT | ALL)
     4240      : 'CURRENT' 
     4241      | 'ALL' 
               ;

 1095       (CONTAINER EQUALS_OP (CURRENT | ALL))
     4242      : 'CONTAINER' 'EQUALS_OP' (CURRENT | ALL) 
               ;

 1096       STATEMENTS?
     4243      : 
     4244      | 'STATEMENTS' 
               ;

 1097       (sql_statement_shortcut | ALL STATEMENTS?)
     4245      : sql_statement_shortcut 
     4246      | 'ALL' STATEMENTS? 
               ;

 1098       (',' (sql_statement_shortcut | ALL STATEMENTS?))
     4247      : ',' (sql_statement_shortcut | ALL STATEMENTS?) 
               ;

 1099       (',' (sql_statement_shortcut | ALL STATEMENTS?))*
     4248      : 
     4249      | (',' (sql_statement_shortcut | ALL STATEMENTS?))* (',' (sql_statement_shortcut | ALL STATEMENTS?)) 
               ;

 1100       (system_privilege | ALL PRIVILEGES)
     4250      : system_privilege 
     4251      | 'ALL' 'PRIVILEGES' 
               ;

 1101       (',' (system_privilege | ALL PRIVILEGES))
     4252      : ',' (system_privilege | ALL PRIVILEGES) 
               ;

 1102       (',' (system_privilege | ALL PRIVILEGES))*
     4253      : 
     4254      | (',' (system_privilege | ALL PRIVILEGES))* (',' (system_privilege | ALL PRIVILEGES)) 
               ;

 1103       ((sql_statement_shortcut | ALL STATEMENTS?) (',' (sql_statement_shortcut | ALL STATEMENTS?))* | (system_privilege | ALL PRIVILEGES) (',' (system_privilege | ALL PRIVILEGES))*)
     4255      : (sql_statement_shortcut | ALL STATEMENTS?) (',' (sql_statement_shortcut | ALL STATEMENTS?))* 
     4256      | (system_privilege | ALL PRIVILEGES) (',' (system_privilege | ALL PRIVILEGES))* 
               ;

 1104       (',' sql_operation)
     4257      : ',' sql_operation 
               ;

 1105       (',' sql_operation)*
     4258      : 
     4259      | (',' sql_operation)* (',' sql_operation) 
               ;

 1106       (sql_operation (',' sql_operation)* | ALL)
     4260      : sql_operation (',' sql_operation)* 
     4261      | 'ALL' 
               ;

 1107       (object_name | DIRECTORY regular_id | MINING MODEL model_name | {self_isVersion12}? SQL TRANSLATION PROFILE profile_name | DEFAULT)
     4262      : object_name 
     4263      | 'DIRECTORY' regular_id 
     4264      | 'MINING' 'MODEL' model_name 
     4265      | {self_isVersion12}? 'SQL' 'TRANSLATION' 'PROFILE' profile_name 
     4266      | 'DEFAULT' 
               ;

 1108       ','?
     4267      : 
     4268      | ',' 
               ;

 1109       paren_column_list?
     4269      : 
     4270      | paren_column_list 
               ;

 1110       (role_name | system_privilege | object_privilege paren_column_list?)
     4271      : role_name 
     4272      | system_privilege 
     4273      | object_privilege paren_column_list? 
               ;

 1111       (','? (role_name | system_privilege | object_privilege paren_column_list?))
     4274      : ','? (role_name | system_privilege | object_privilege paren_column_list?) 
               ;

 1112       (','? (role_name | system_privilege | object_privilege paren_column_list?))+
     4275      : (','? (role_name | system_privilege | object_privilege paren_column_list?)) 
     4276      | (','? (role_name | system_privilege | object_privilege paren_column_list?))+ (','? (role_name | system_privilege | object_privilege paren_column_list?)) 
               ;

 1113       (ON grant_object_name)
     4277      : 'ON' grant_object_name 
               ;

 1114       (ON grant_object_name)?
     4278      : 
     4279      | (ON grant_object_name) 
               ;

 1115       (grantee_name | PUBLIC)
     4280      : grantee_name 
     4281      | 'PUBLIC' 
               ;

 1116       (',' (grantee_name | PUBLIC))
     4282      : ',' (grantee_name | PUBLIC) 
               ;

 1117       (',' (grantee_name | PUBLIC))*
     4283      : 
     4284      | (',' (grantee_name | PUBLIC))* (',' (grantee_name | PUBLIC)) 
               ;

 1118       (ADMIN | DELEGATE)
     4285      : 'ADMIN' 
     4286      | 'DELEGATE' 
               ;

 1119       (WITH (ADMIN | DELEGATE) OPTION)
     4287      : 'WITH' (ADMIN | DELEGATE) 'OPTION' 
               ;

 1120       (WITH (ADMIN | DELEGATE) OPTION)?
     4288      : 
     4289      | (WITH (ADMIN | DELEGATE) OPTION) 
               ;

 1121       (WITH HIERARCHY OPTION)
     4290      : 'WITH' 'HIERARCHY' 'OPTION' 
               ;

 1122       (WITH HIERARCHY OPTION)?
     4291      : 
     4292      | (WITH HIERARCHY OPTION) 
               ;

 1123       (WITH GRANT OPTION)
     4293      : 'WITH' 'GRANT' 'OPTION' 
               ;

 1124       (WITH GRANT OPTION)?
     4294      : 
     4295      | (WITH GRANT OPTION) 
               ;

 1125       container_clause?
     4296      : 
     4297      | container_clause 
               ;

 1126       library_debug?
     4298      : 
     4299      | library_debug 
               ;

 1127       (COMPILE library_debug? compiler_parameters_clause* (REUSE SETTINGS)? | library_editionable)
     4300      : 'COMPILE' library_debug? compiler_parameters_clause* (REUSE SETTINGS)? 
     4301      | library_editionable 
               ;

 1128       (EDITIONABLE | NONEDITIONABLE)
     4302      : 'EDITIONABLE' 
     4303      | 'NONEDITIONABLE' 
               ;

 1129       (regular_id '.')
     4304      : regular_id '.' 
               ;

 1130       (regular_id '.')?
     4305      : 
     4306      | (regular_id '.') 
               ;

 1131       (RELY | NORELY)
     4307      : 'RELY' 
     4308      | 'NORELY' 
               ;

 1132       (CONSTRAINT constraint_name | PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')')
     4309      : 'CONSTRAINT' constraint_name 
     4310      | 'PRIMARY' 'KEY' 
     4311      | 'UNIQUE' '(' column_name (',' column_name)* ')' 
               ;

 1133       (ONLY | WRITE)
     4312      : 'ONLY' 
     4313      | 'WRITE' 
               ;

 1134       alter_view_editionable?
     4314      : 
     4315      | alter_view_editionable 
               ;

 1135       (ADD out_of_line_constraint | MODIFY CONSTRAINT constraint_name (RELY | NORELY) | DROP (CONSTRAINT constraint_name | PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')') | COMPILE | READ (ONLY | WRITE) | alter_view_editionable?)
     4316      : 'ADD' out_of_line_constraint 
     4317      | 'MODIFY' 'CONSTRAINT' constraint_name (RELY | NORELY) 
     4318      | 'DROP' (CONSTRAINT constraint_name | PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')') 
     4319      | 'COMPILE' 
     4320      | 'READ' (ONLY | WRITE) 
     4321      | alter_view_editionable? 
               ;

 1136       OR?
     4322      : 
     4323      | 'OR' 
               ;

 1137       (OR? FORCE)
     4324      : OR? 'FORCE' 
               ;

 1138       (OR? FORCE)?
     4325      : 
     4326      | (OR? FORCE) 
               ;

 1139       EDITIONABLE?
     4327      : 
     4328      | 'EDITIONABLE' 
               ;

 1140       EDITIONING?
     4329      : 
     4330      | 'EDITIONING' 
               ;

 1141       view_options?
     4331      : 
     4332      | view_options 
               ;

 1142       subquery_restriction_clause?
     4333      : 
     4334      | subquery_restriction_clause 
               ;

 1143       inline_constraint*
     4335      : 
     4336      | inline_constraint* inline_constraint 
               ;

 1144       (table_alias inline_constraint* | out_of_line_constraint)
     4337      : table_alias inline_constraint* 
     4338      | out_of_line_constraint 
               ;

 1145       (','? (table_alias inline_constraint* | out_of_line_constraint))
     4339      : ','? (table_alias inline_constraint* | out_of_line_constraint) 
               ;

 1146       (','? (table_alias inline_constraint* | out_of_line_constraint))+
     4340      : (','? (table_alias inline_constraint* | out_of_line_constraint)) 
     4341      | (','? (table_alias inline_constraint* | out_of_line_constraint))+ (','? (table_alias inline_constraint* | out_of_line_constraint)) 
               ;

 1147       (IDENTIFIER | ID | OID)
     4342      : 'IDENTIFIER' 
     4343      | 'ID' 
     4344      | 'OID' 
               ;

 1148       (',' REGULAR_ID)
     4345      : ',' 'REGULAR_ID' 
               ;

 1149       (',' REGULAR_ID)*
     4346      : 
     4347      | (',' REGULAR_ID)* (',' REGULAR_ID) 
               ;

 1150       (DEFAULT | '(' REGULAR_ID (',' REGULAR_ID)* ')')
     4348      : 'DEFAULT' 
     4349      | '(' 'REGULAR_ID' (',' REGULAR_ID)* ')' 
               ;

 1151       (WITH OBJECT (IDENTIFIER | ID | OID) (DEFAULT | '(' REGULAR_ID (',' REGULAR_ID)* ')') | UNDER tableview_name)
     4350      : 'WITH' 'OBJECT' (IDENTIFIER | ID | OID) (DEFAULT | '(' REGULAR_ID (',' REGULAR_ID)* ')') 
     4351      | 'UNDER' tableview_name 
               ;

 1152       (out_of_line_constraint | REGULAR_ID inline_constraint)
     4352      : out_of_line_constraint 
     4353      | 'REGULAR_ID' inline_constraint 
               ;

 1153       (','? (out_of_line_constraint | REGULAR_ID inline_constraint))
     4354      : ','? (out_of_line_constraint | REGULAR_ID inline_constraint) 
               ;

 1154       (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+
     4355      : (','? (out_of_line_constraint | REGULAR_ID inline_constraint)) 
     4356      | (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ (','? (out_of_line_constraint | REGULAR_ID inline_constraint)) 
               ;

 1155       ('(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')')
     4357      : '(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')' 
               ;

 1156       ('(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')')*
     4358      : 
     4359      | ('(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')')* ('(' (','? (out_of_line_constraint | REGULAR_ID inline_constraint))+ ')') 
               ;

 1157       (CONSTRAINT constraint_name)
     4360      : 'CONSTRAINT' constraint_name 
               ;

 1158       (CONSTRAINT constraint_name)?
     4361      : 
     4362      | (CONSTRAINT constraint_name) 
               ;

 1159       (NOT? NULL_ | UNIQUE | PRIMARY KEY | references_clause | check_constraint)
     4363      : NOT? 'NULL_' 
     4364      | 'UNIQUE' 
     4365      | 'PRIMARY' 'KEY' 
     4366      | references_clause 
     4367      | check_constraint 
               ;

 1160       constraint_state?
     4368      : 
     4369      | constraint_state 
               ;

 1161       (','? ref_col_or_attrregular_id)
     4370      : ','? 'ref_col_or_attrregular_id' 
               ;

 1162       (','? ref_col_or_attrregular_id)+
     4371      : (','? ref_col_or_attrregular_id) 
     4372      | (','? ref_col_or_attrregular_id)+ (','? ref_col_or_attrregular_id) 
               ;

 1163       (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY '(' column_name (',' column_name)* ')' | foreign_key_clause | CHECK '(' expression ')')
     4373      : 'UNIQUE' '(' column_name (',' column_name)* ')' 
     4374      | 'PRIMARY' 'KEY' '(' column_name (',' column_name)* ')' 
     4375      | foreign_key_clause 
     4376      | 'CHECK' '(' expression ')' 
               ;

 1164       ((CONSTRAINT constraint_name)? (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY '(' column_name (',' column_name)* ')' | foreign_key_clause | CHECK '(' expression ')'))
     4377      : (CONSTRAINT constraint_name)? (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY '(' column_name (',' column_name)* ')' | foreign_key_clause | CHECK '(' expression ')') 
               ;

 1165       (IMMEDIATE | DEFERRED)
     4378      : 'IMMEDIATE' 
     4379      | 'DEFERRED' 
               ;

 1166       (VALIDATE | NOVALIDATE)
     4380      : 'VALIDATE' 
     4381      | 'NOVALIDATE' 
               ;

 1167       (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause)
     4382      : NOT? 'DEFERRABLE' 
     4383      | 'INITIALLY' (IMMEDIATE | DEFERRED) 
     4384      | (RELY | NORELY) 
     4385      | (ENABLE | DISABLE) 
     4386      | (VALIDATE | NOVALIDATE) 
     4387      | using_index_clause 
               ;

 1168       (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause)+
     4388      : (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause) 
     4389      | (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause)+ (NOT? DEFERRABLE | INITIALLY (IMMEDIATE | DEFERRED) | (RELY | NORELY) | (ENABLE | DISABLE) | (VALIDATE | NOVALIDATE) | using_index_clause) 
               ;

 1169       table_compression?
     4390      : 
     4391      | table_compression 
               ;

 1170       storage_clause?
     4392      : 
     4393      | storage_clause 
               ;

 1171       (KEEP size_clause)
     4394      : 'KEEP' size_clause 
               ;

 1172       (KEEP size_clause)?
     4395      : 
     4396      | (KEEP size_clause) 
               ;

 1173       (DEFAULT table_compression? storage_clause? | MINIMUM EXTENT size_clause | RESIZE size_clause | COALESCE | SHRINK SPACE_KEYWORD (KEEP size_clause)? | RENAME TO new_tablespace_name | begin_or_end BACKUP | datafile_tempfile_clauses | tablespace_logging_clauses | tablespace_group_clause | tablespace_state_clauses | autoextend_clause | flashback_mode_clause | tablespace_retention_clause)
     4397      : 'DEFAULT' table_compression? storage_clause? 
     4398      | 'MINIMUM' 'EXTENT' size_clause 
     4399      | 'RESIZE' size_clause 
     4400      | 'COALESCE' 
     4401      | 'SHRINK' 'SPACE_KEYWORD' (KEEP size_clause)? 
     4402      | 'RENAME' 'TO' new_tablespace_name 
     4403      | begin_or_end 'BACKUP' 
     4404      | datafile_tempfile_clauses 
     4405      | tablespace_logging_clauses 
     4406      | tablespace_group_clause 
     4407      | tablespace_state_clauses 
     4408      | autoextend_clause 
     4409      | flashback_mode_clause 
     4410      | tablespace_retention_clause 
               ;

 1174       (datafile_specification | tempfile_specification)
     4411      : datafile_specification 
     4412      | tempfile_specification 
               ;

 1175       (DATAFILE | TEMPFILE)
     4413      : 'DATAFILE' 
     4414      | 'TEMPFILE' 
               ;

 1176       (filename | UNSIGNED_INTEGER)
     4415      : filename 
     4416      | 'UNSIGNED_INTEGER' 
               ;

 1177       (',' filename)
     4417      : ',' filename 
               ;

 1178       (',' filename)*
     4418      : 
     4419      | (',' filename)* (',' filename) 
               ;

 1179       NO?
     4420      : 
     4421      | 'NO' 
               ;

 1180       (tablespace_group_name | CHAR_STRING)
     4422      : tablespace_group_name 
     4423      | 'CHAR_STRING' 
               ;

 1181       (NORMAL | TEMPORARY | IMMEDIATE)
     4424      : 'NORMAL' 
     4425      | 'TEMPORARY' 
     4426      | 'IMMEDIATE' 
               ;

 1182       (NORMAL | TEMPORARY | IMMEDIATE)?
     4427      : 
     4428      | (NORMAL | TEMPORARY | IMMEDIATE) 
               ;

 1183       (ON | OFF)
     4429      : 'ON' 
     4430      | 'OFF' 
               ;

 1184       (BIGFILE | SMALLFILE)
     4431      : 'BIGFILE' 
     4432      | 'SMALLFILE' 
               ;

 1185       (BIGFILE | SMALLFILE)?
     4433      : 
     4434      | (BIGFILE | SMALLFILE) 
               ;

 1186       (permanent_tablespace_clause | temporary_tablespace_clause | undo_tablespace_clause)
     4435      : permanent_tablespace_clause 
     4436      | temporary_tablespace_clause 
     4437      | undo_tablespace_clause 
               ;

 1187       datafile_specification?
     4438      : 
     4439      | datafile_specification 
               ;

 1188       (ONLINE | OFFLINE)
     4440      : 'ONLINE' 
     4441      | 'OFFLINE' 
               ;

 1189       (MINIMUM EXTENT size_clause | BLOCKSIZE size_clause | logging_clause | FORCE LOGGING | (ONLINE | OFFLINE) | ENCRYPTION tablespace_encryption_spec | DEFAULT | extent_management_clause | segment_management_clause | flashback_mode_clause)
     4442      : 'MINIMUM' 'EXTENT' size_clause 
     4443      | 'BLOCKSIZE' size_clause 
     4444      | logging_clause 
     4445      | 'FORCE' 'LOGGING' 
     4446      | (ONLINE | OFFLINE) 
     4447      | 'ENCRYPTION' tablespace_encryption_spec 
     4448      | 'DEFAULT' 
     4449      | extent_management_clause 
     4450      | segment_management_clause 
     4451      | flashback_mode_clause 
               ;

 1190       (MINIMUM EXTENT size_clause | BLOCKSIZE size_clause | logging_clause | FORCE LOGGING | (ONLINE | OFFLINE) | ENCRYPTION tablespace_encryption_spec | DEFAULT | extent_management_clause | segment_management_clause | flashback_mode_clause)*
     4452      : 
     4453      | (MINIMUM EXTENT size_clause | BLOCKSIZE size_clause | logging_clause | FORCE LOGGING | (ONLINE | OFFLINE) | ENCRYPTION tablespace_encryption_spec | DEFAULT | extent_management_clause | segment_management_clause | flashback_mode_clause)* (MINIMUM EXTENT size_clause | BLOCKSIZE size_clause | logging_clause | FORCE LOGGING | (ONLINE | OFFLINE) | ENCRYPTION tablespace_encryption_spec | DEFAULT | extent_management_clause | segment_management_clause | flashback_mode_clause) 
               ;

 1191       (SIZE size_clause)
     4454      : 'SIZE' size_clause 
               ;

 1192       (SIZE size_clause)?
     4455      : 
     4456      | (SIZE size_clause) 
               ;

 1193       (AUTOALLOCATE | UNIFORM (SIZE size_clause)?)
     4457      : 'AUTOALLOCATE' 
     4458      | 'UNIFORM' (SIZE size_clause)? 
               ;

 1194       (AUTOALLOCATE | UNIFORM (SIZE size_clause)?)?
     4459      : 
     4460      | (AUTOALLOCATE | UNIFORM (SIZE size_clause)?) 
               ;

 1195       (AUTO | MANUAL)
     4461      : 'AUTO' 
     4462      | 'MANUAL' 
               ;

 1196       tempfile_specification?
     4463      : 
     4464      | tempfile_specification 
               ;

 1197       tablespace_group_clause?
     4465      : 
     4466      | tablespace_group_clause 
               ;

 1198       extent_management_clause?
     4467      : 
     4468      | extent_management_clause 
               ;

 1199       tablespace_retention_clause?
     4469      : 
     4470      | tablespace_retention_clause 
               ;

 1200       (GUARANTEE | NOGUARANTEE)
     4471      : 'GUARANTEE' 
     4472      | 'NOGUARANTEE' 
               ;

 1201       (','? datafile_tempfile_spec)
     4473      : ','? datafile_tempfile_spec 
               ;

 1202       CHAR_STRING?
     4474      : 
     4475      | 'CHAR_STRING' 
               ;

 1203       REUSE?
     4476      : 
     4477      | 'REUSE' 
               ;

 1204       autoextend_clause?
     4478      : 
     4479      | autoextend_clause 
               ;

 1205       (','? CHAR_STRING)
     4480      : ','? 'CHAR_STRING' 
               ;

 1206       (','? CHAR_STRING)+
     4481      : (','? CHAR_STRING) 
     4482      | (','? CHAR_STRING)+ (','? CHAR_STRING) 
               ;

 1207       (DATAFILE CHAR_STRING | '(' (','? CHAR_STRING)+ ')')
     4483      : 'DATAFILE' 'CHAR_STRING' 
     4484      | '(' (','? CHAR_STRING)+ ')' 
               ;

 1208       (DATAFILE CHAR_STRING | '(' (','? CHAR_STRING)+ ')')?
     4485      : 
     4486      | (DATAFILE CHAR_STRING | '(' (','? CHAR_STRING)+ ')') 
               ;

 1209       (BLOCKSIZE size_clause)
     4487      : 'BLOCKSIZE' size_clause 
               ;

 1210       (BLOCKSIZE size_clause)?
     4488      : 
     4489      | (BLOCKSIZE size_clause) 
               ;

 1211       (NEXT size_clause)
     4490      : 'NEXT' size_clause 
               ;

 1212       (NEXT size_clause)?
     4491      : 
     4492      | (NEXT size_clause) 
               ;

 1213       maxsize_clause?
     4493      : 
     4494      | maxsize_clause 
               ;

 1214       (OFF | ON (NEXT size_clause)? maxsize_clause?)
     4495      : 'OFF' 
     4496      | 'ON' (NEXT size_clause)? maxsize_clause? 
               ;

 1215       (UNLIMITED | size_clause)
     4497      : 'UNLIMITED' 
     4498      | size_clause 
               ;

 1216       parallel_countUNSIGNED_INTEGER?
     4499      : 
     4500      | 'parallel_countUNSIGNED_INTEGER' 
               ;

 1217       (',' lob_storage_clause)
     4501      : ',' lob_storage_clause 
               ;

 1218       (',' lob_storage_clause)*
     4502      : 
     4503      | (',' lob_storage_clause)* (',' lob_storage_clause) 
               ;

 1219       (',' modify_lob_storage_clause)
     4504      : ',' modify_lob_storage_clause 
               ;

 1220       (',' modify_lob_storage_clause)*
     4505      : 
     4506      | (',' modify_lob_storage_clause)* (',' modify_lob_storage_clause) 
               ;

 1221       (physical_attributes_clause | modify_mv_column_clause | table_compression | lob_storage_clause (',' lob_storage_clause)* | modify_lob_storage_clause (',' modify_lob_storage_clause)* | parallel_clause | logging_clause | allocate_extent_clause | deallocate_unused_clause | shrink_clause | cache_or_nocache)
     4507      : physical_attributes_clause 
     4508      | modify_mv_column_clause 
     4509      | table_compression 
     4510      | lob_storage_clause (',' lob_storage_clause)* 
     4511      | modify_lob_storage_clause (',' modify_lob_storage_clause)* 
     4512      | parallel_clause 
     4513      | logging_clause 
     4514      | allocate_extent_clause 
     4515      | deallocate_unused_clause 
     4516      | shrink_clause 
     4517      | cache_or_nocache 
               ;

 1222       (physical_attributes_clause | modify_mv_column_clause | table_compression | lob_storage_clause (',' lob_storage_clause)* | modify_lob_storage_clause (',' modify_lob_storage_clause)* | parallel_clause | logging_clause | allocate_extent_clause | deallocate_unused_clause | shrink_clause | cache_or_nocache)?
     4518      : 
     4519      | (physical_attributes_clause | modify_mv_column_clause | table_compression | lob_storage_clause (',' lob_storage_clause)* | modify_lob_storage_clause (',' modify_lob_storage_clause)* | parallel_clause | logging_clause | allocate_extent_clause | deallocate_unused_clause | shrink_clause | cache_or_nocache) 
               ;

 1223       alter_iot_clauses?
     4520      : 
     4521      | alter_iot_clauses 
               ;

 1224       (USING INDEX physical_attributes_clause)
     4522      : 'USING' 'INDEX' physical_attributes_clause 
               ;

 1225       (USING INDEX physical_attributes_clause)?
     4523      : 
     4524      | (USING INDEX physical_attributes_clause) 
               ;

 1226       alter_mv_option1?
     4525      : 
     4526      | alter_mv_option1 
               ;

 1227       (enable_or_disable QUERY REWRITE | COMPILE | CONSIDER FRESH)
     4527      : enable_or_disable 'QUERY' 'REWRITE' 
     4528      | 'COMPILE' 
     4529      | 'CONSIDER' 'FRESH' 
               ;

 1228       (enable_or_disable QUERY REWRITE | COMPILE | CONSIDER FRESH)?
     4530      : 
     4531      | (enable_or_disable QUERY REWRITE | COMPILE | CONSIDER FRESH) 
               ;

 1229       (DEMAND | COMMIT)
     4532      : 'DEMAND' 
     4533      | 'COMMIT' 
               ;

 1230       DEFAULT?
     4534      : 
     4535      | 'DEFAULT' 
               ;

 1231       rollback_segment?
     4536      : 
     4537      | rollback_segment 
               ;

 1232       (ENFORCED | TRUSTED)
     4538      : 'ENFORCED' 
     4539      | 'TRUSTED' 
               ;

 1233       (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS)
     4540      : 'FAST' 
     4541      | 'COMPLETE' 
     4542      | 'FORCE' 
     4543      | 'ON' (DEMAND | COMMIT) 
     4544      | 'START' 'WITH' expression 
     4545      | 'NEXT' expression 
     4546      | 'WITH' 'PRIMARY' 'KEY' 
     4547      | 'USING' DEFAULT? 'MASTER' 'ROLLBACK' 'SEGMENT' rollback_segment? 
     4548      | 'USING' (ENFORCED | TRUSTED) 'CONSTRAINTS' 
               ;

 1234       (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS)+
     4549      : (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS) 
     4550      | (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS)+ (FAST | COMPLETE | FORCE | ON (DEMAND | COMMIT) | START WITH expression | NEXT expression | WITH PRIMARY KEY | USING DEFAULT? MASTER ROLLBACK SEGMENT rollback_segment? | USING (ENFORCED | TRUSTED) CONSTRAINTS) 
               ;

 1235       (ENCRYPT encryption_spec | DECRYPT)
     4551      : 'ENCRYPT' encryption_spec 
     4552      | 'DECRYPT' 
               ;

 1236       (ENCRYPT encryption_spec | DECRYPT)?
     4553      : 
     4554      | (ENCRYPT encryption_spec | DECRYPT) 
               ;

 1237       (physical_attributes_clause | add_mv_log_column_clause | parallel_clause | logging_clause | allocate_extent_clause | shrink_clause | move_mv_log_clause | cache_or_nocache)
     4555      : physical_attributes_clause 
     4556      | add_mv_log_column_clause 
     4557      | parallel_clause 
     4558      | logging_clause 
     4559      | allocate_extent_clause 
     4560      | shrink_clause 
     4561      | move_mv_log_clause 
     4562      | cache_or_nocache 
               ;

 1238       (physical_attributes_clause | add_mv_log_column_clause | parallel_clause | logging_clause | allocate_extent_clause | shrink_clause | move_mv_log_clause | cache_or_nocache)?
     4563      : 
     4564      | (physical_attributes_clause | add_mv_log_column_clause | parallel_clause | logging_clause | allocate_extent_clause | shrink_clause | move_mv_log_clause | cache_or_nocache) 
               ;

 1239       mv_log_augmentation?
     4565      : 
     4566      | mv_log_augmentation 
               ;

 1240       mv_log_purge_clause?
     4567      : 
     4568      | mv_log_purge_clause 
               ;

 1241       (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE)
     4569      : 'OBJECT' 'ID' 
     4570      | 'PRIMARY' 'KEY' 
     4571      | 'ROWID' 
     4572      | 'SEQUENCE' 
               ;

 1242       ('(' column_name (',' column_name)* ')')
     4573      : '(' column_name (',' column_name)* ')' 
               ;

 1243       ('(' column_name (',' column_name)* ')')?
     4574      : 
     4575      | ('(' column_name (',' column_name)* ')') 
               ;

 1244       ((OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE) ('(' column_name (',' column_name)* ')')? | '(' column_name (',' column_name)* ')')
     4576      : (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE) ('(' column_name (',' column_name)* ')')? 
     4577      | '(' column_name (',' column_name)* ')' 
               ;

 1245       new_values_clause?
     4578      : 
     4579      | new_values_clause 
               ;

 1246       (CACHE | NOCACHE)
     4580      : 'CACHE' 
     4581      | 'NOCACHE' 
               ;

 1247       (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause | (CACHE | NOCACHE))
     4582      : physical_attributes_clause 
     4583      | 'TABLESPACE' 'tablespace_nameid_expression' 
     4584      | logging_clause 
     4585      | (CACHE | NOCACHE) 
               ;

 1248       (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause | (CACHE | NOCACHE))*
     4586      : 
     4587      | (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause | (CACHE | NOCACHE))* (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause | (CACHE | NOCACHE)) 
               ;

 1249       (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN)
     4588      : 'OBJECT' 'ID' 
     4589      | 'PRIMARY' 'KEY' 
     4590      | 'ROWID' 
     4591      | 'SEQUENCE' 
     4592      | 'COMMIT' 'SCN' 
               ;

 1250       (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))
     4593      : ','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN) 
               ;

 1251       (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))*
     4594      : 
     4595      | (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN)) 
               ;

 1252       (','? regular_id)
     4596      : ','? regular_id 
               ;

 1253       (','? regular_id)+
     4597      : (','? regular_id) 
     4598      | (','? regular_id)+ (','? regular_id) 
               ;

 1254       ('(' (','? regular_id)+ ')' new_values_clause?)
     4599      : '(' (','? regular_id)+ ')' new_values_clause? 
               ;

 1255       ('(' (','? regular_id)+ ')' new_values_clause?)?
     4600      : 
     4601      | ('(' (','? regular_id)+ ')' new_values_clause?) 
               ;

 1256       (WITH (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause?)
     4602      : 'WITH' (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause? 
               ;

 1257       (WITH (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause?)*
     4603      : 
     4604      | (WITH (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause?)* (WITH (','? (OBJECT ID | PRIMARY KEY | ROWID | SEQUENCE | COMMIT SCN))* ('(' (','? regular_id)+ ')' new_values_clause?)? mv_log_purge_clause?) 
               ;

 1258       (INCLUDING | EXCLUDING)
     4605      : 'INCLUDING' 
     4606      | 'EXCLUDING' 
               ;

 1259       (SYNCHRONOUS | ASYNCHRONOUS)
     4607      : 'SYNCHRONOUS' 
     4608      | 'ASYNCHRONOUS' 
               ;

 1260       (SYNCHRONOUS | ASYNCHRONOUS)?
     4609      : 
     4610      | (SYNCHRONOUS | ASYNCHRONOUS) 
               ;

 1261       (IMMEDIATE (SYNCHRONOUS | ASYNCHRONOUS)?)
     4611      : 'IMMEDIATE' (SYNCHRONOUS | ASYNCHRONOUS)? 
               ;

 1262       (OF type_name)
     4612      : 'OF' type_name 
               ;

 1263       (OF type_name)?
     4613      : 
     4614      | (OF type_name) 
               ;

 1264       (WITH | WITHOUT)
     4615      : 'WITH' 
     4616      | 'WITHOUT' 
               ;

 1265       ((WITH | WITHOUT) REDUCED PRECISION)
     4617      : (WITH | WITHOUT) 'REDUCED' 'PRECISION' 
               ;

 1266       ((WITH | WITHOUT) REDUCED PRECISION)?
     4618      : 
     4619      | ((WITH | WITHOUT) REDUCED PRECISION) 
               ;

 1267       physical_properties?
     4620      : 
     4621      | physical_properties 
               ;

 1268       (CACHE | NOCACHE)?
     4622      : 
     4623      | (CACHE | NOCACHE) 
               ;

 1269       build_clause?
     4624      : 
     4625      | build_clause 
               ;

 1270       (ON PREBUILT TABLE ((WITH | WITHOUT) REDUCED PRECISION)? | physical_properties? (CACHE | NOCACHE)? parallel_clause? build_clause?)
     4626      : 'ON' 'PREBUILT' 'TABLE' ((WITH | WITHOUT) REDUCED PRECISION)? 
     4627      | physical_properties? (CACHE | NOCACHE)? parallel_clause? build_clause? 
               ;

 1271       (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)
     4628      : physical_attributes_clause 
     4629      | 'TABLESPACE' 'mv_tablespaceid_expression' 
               ;

 1272       (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)*
     4630      : 
     4631      | (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression) 
               ;

 1273       (USING INDEX (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* | USING NO INDEX)
     4632      : 'USING' 'INDEX' (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* 
     4633      | 'USING' 'NO' 'INDEX' 
               ;

 1274       (USING INDEX (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* | USING NO INDEX)?
     4634      : 
     4635      | (USING INDEX (physical_attributes_clause | TABLESPACE mv_tablespaceid_expression)* | USING NO INDEX) 
               ;

 1275       create_mv_refresh?
     4636      : 
     4637      | create_mv_refresh 
               ;

 1276       (FOR UPDATE)
     4638      : 'FOR' 'UPDATE' 
               ;

 1277       (FOR UPDATE)?
     4639      : 
     4640      | (FOR UPDATE) 
               ;

 1278       (DISABLE | ENABLE)
     4641      : 'DISABLE' 
     4642      | 'ENABLE' 
               ;

 1279       ((DISABLE | ENABLE) QUERY REWRITE)
     4643      : (DISABLE | ENABLE) 'QUERY' 'REWRITE' 
               ;

 1280       ((DISABLE | ENABLE) QUERY REWRITE)?
     4644      : 
     4645      | ((DISABLE | ENABLE) QUERY REWRITE) 
               ;

 1281       (FAST | COMPLETE | FORCE)
     4646      : 'FAST' 
     4647      | 'COMPLETE' 
     4648      | 'FORCE' 
               ;

 1282       (START WITH | NEXT)
     4649      : 'START' 'WITH' 
     4650      | 'NEXT' 
               ;

 1283       (PRIMARY KEY | ROWID)
     4651      : 'PRIMARY' 'KEY' 
     4652      | 'ROWID' 
               ;

 1284       (MASTER | LOCAL)
     4653      : 'MASTER' 
     4654      | 'LOCAL' 
               ;

 1285       (MASTER | LOCAL)?
     4655      : 
     4656      | (MASTER | LOCAL) 
               ;

 1286       (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID)
     4657      : 'DEFAULT' (MASTER | LOCAL)? 'ROLLBACK' 'SEGMENT' 
     4658      | (MASTER | LOCAL)? 'ROLLBACK' 'SEGMENT' 'rb_segmentREGULAR_ID' 
               ;

 1287       ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)
     4659      : (FAST | COMPLETE | FORCE) 
     4660      | 'ON' (DEMAND | COMMIT) 
     4661      | (START WITH | NEXT) 
     4662      | 'WITH' (PRIMARY KEY | ROWID) 
     4663      | 'USING' (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) 
     4664      | 'USING' (ENFORCED | TRUSTED) 'CONSTRAINTS' 
               ;

 1288       ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)+
     4665      : ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS) 
     4666      | ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)+ ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS) 
               ;

 1289       (NEVER REFRESH | REFRESH ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)+)
     4667      : 'NEVER' 'REFRESH' 
     4668      | 'REFRESH' ((FAST | COMPLETE | FORCE) | ON (DEMAND | COMMIT) | (START WITH | NEXT) | WITH (PRIMARY KEY | ROWID) | USING (DEFAULT (MASTER | LOCAL)? ROLLBACK SEGMENT | (MASTER | LOCAL)? ROLLBACK SEGMENT rb_segmentREGULAR_ID) | USING (ENFORCED | TRUSTED) CONSTRAINTS)+ 
               ;

 1290       (INITIALIZED (EXTERNALLY | GLOBALLY) | ACCESSED GLOBALLY)
     4669      : 'INITIALIZED' (EXTERNALLY | GLOBALLY) 
     4670      | 'ACCESSED' 'GLOBALLY' 
               ;

 1291       (INITIALIZED (EXTERNALLY | GLOBALLY) | ACCESSED GLOBALLY)?
     4671      : 
     4672      | (INITIALIZED (EXTERNALLY | GLOBALLY) | ACCESSED GLOBALLY) 
               ;

 1292       SORT?
     4673      : 
     4674      | 'SORT' 
               ;

 1293       (',' column_name datatype SORT?)
     4675      : ',' column_name datatype SORT? 
               ;

 1294       (',' column_name datatype SORT?)*
     4676      : 
     4677      | (',' column_name datatype SORT?)* (',' column_name datatype SORT?) 
               ;

 1295       (SINGLE TABLE)
     4678      : 'SINGLE' 'TABLE' 
               ;

 1296       (SINGLE TABLE)?
     4679      : 
     4680      | (SINGLE TABLE) 
               ;

 1297       (HASH IS expression)
     4681      : 'HASH' 'IS' expression 
               ;

 1298       (HASH IS expression)?
     4682      : 
     4683      | (HASH IS expression) 
               ;

 1299       (physical_attributes_clause | SIZE size_clause | TABLESPACE tablespace | INDEX | (SINGLE TABLE)? HASHKEYS UNSIGNED_INTEGER (HASH IS expression)?)
     4684      : physical_attributes_clause 
     4685      | 'SIZE' size_clause 
     4686      | 'TABLESPACE' tablespace 
     4687      | 'INDEX' 
     4688      | (SINGLE TABLE)? 'HASHKEYS' 'UNSIGNED_INTEGER' (HASH IS expression)? 
               ;

 1300       (physical_attributes_clause | SIZE size_clause | TABLESPACE tablespace | INDEX | (SINGLE TABLE)? HASHKEYS UNSIGNED_INTEGER (HASH IS expression)?)*
     4689      : 
     4690      | (physical_attributes_clause | SIZE size_clause | TABLESPACE tablespace | INDEX | (SINGLE TABLE)? HASHKEYS UNSIGNED_INTEGER (HASH IS expression)?)* (physical_attributes_clause | SIZE size_clause | TABLESPACE tablespace | INDEX | (SINGLE TABLE)? HASHKEYS UNSIGNED_INTEGER (HASH IS expression)?) 
               ;

 1301       (ROWDEPENDENCIES | NOROWDEPENDENCIES)
     4691      : 'ROWDEPENDENCIES' 
     4692      | 'NOROWDEPENDENCIES' 
               ;

 1302       (ROWDEPENDENCIES | NOROWDEPENDENCIES)?
     4693      : 
     4694      | (ROWDEPENDENCIES | NOROWDEPENDENCIES) 
               ;

 1303       (GLOBAL TEMPORARY)
     4695      : 'GLOBAL' 'TEMPORARY' 
               ;

 1304       (GLOBAL TEMPORARY)?
     4696      : 
     4697      | (GLOBAL TEMPORARY) 
               ;

 1305       (relational_table | object_table | xmltype_table)
     4698      : relational_table 
     4699      | object_table 
     4700      | xmltype_table 
               ;

 1306       (AS select_only_statement)
     4701      : 'AS' select_only_statement 
               ;

 1307       (AS select_only_statement)?
     4702      : 
     4703      | (AS select_only_statement) 
               ;

 1308       ('(' object_properties ')')
     4704      : '(' object_properties ')' 
               ;

 1309       ('(' object_properties ')')?
     4705      : 
     4706      | ('(' object_properties ')') 
               ;

 1310       (XMLTYPE xmltype_storage)
     4707      : 'XMLTYPE' xmltype_storage 
               ;

 1311       (XMLTYPE xmltype_storage)?
     4708      : 
     4709      | (XMLTYPE xmltype_storage) 
               ;

 1312       xmlschema_spec?
     4710      : 
     4711      | xmlschema_spec 
               ;

 1313       xmltype_virtual_columns?
     4712      : 
     4713      | xmltype_virtual_columns 
               ;

 1314       (DELETE | PRESERVE)
     4714      : 'DELETE' 
     4715      | 'PRESERVE' 
               ;

 1315       (ON COMMIT (DELETE | PRESERVE) ROWS)
     4716      : 'ON' 'COMMIT' (DELETE | PRESERVE) 'ROWS' 
               ;

 1316       (ON COMMIT (DELETE | PRESERVE) ROWS)?
     4717      : 
     4718      | (ON COMMIT (DELETE | PRESERVE) ROWS) 
               ;

 1317       oid_clause?
     4719      : 
     4720      | oid_clause 
               ;

 1318       oid_index_clause?
     4721      : 
     4722      | oid_index_clause 
               ;

 1319       column_properties?
     4723      : 
     4724      | column_properties 
               ;

 1320       table_partitioning_clauses?
     4725      : 
     4726      | table_partitioning_clauses 
               ;

 1321       (DEFAULT | FORCE)
     4727      : 'DEFAULT' 
     4728      | 'FORCE' 
               ;

 1322       (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')')
     4729      : 'RESULT_CACHE' '(' 'MODE' (DEFAULT | FORCE) ')' 
               ;

 1323       (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')')?
     4730      : 
     4731      | (RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')') 
               ;

 1324       enable_disable_clause*
     4732      : 
     4733      | enable_disable_clause* enable_disable_clause 
               ;

 1325       row_movement_clause?
     4734      : 
     4735      | row_movement_clause 
               ;

 1326       flashback_archive_clause?
     4736      : 
     4737      | flashback_archive_clause 
               ;

 1327       (',' column_name AS '(' expression ')')
     4738      : ',' column_name 'AS' '(' expression ')' 
               ;

 1328       (',' column_name AS '(' expression ')')*
     4739      : 
     4740      | (',' column_name AS '(' expression ')')* (',' column_name AS '(' expression ')') 
               ;

 1329       COLUMN?
     4741      : 
     4742      | 'COLUMN' 
               ;

 1330       xmltype_storage?
     4743      : 
     4744      | xmltype_storage 
               ;

 1331       (SECUREFILE | BASICFILE)
     4745      : 'SECUREFILE' 
     4746      | 'BASICFILE' 
               ;

 1332       (SECUREFILE | BASICFILE)?
     4747      : 
     4748      | (SECUREFILE | BASICFILE) 
               ;

 1333       (CLOB | BINARY XML)
     4749      : 'CLOB' 
     4750      | 'BINARY' 'XML' 
               ;

 1334       ('(' lob_parameters ')')
     4751      : '(' lob_parameters ')' 
               ;

 1335       ('(' lob_parameters ')')?
     4752      : 
     4753      | ('(' lob_parameters ')') 
               ;

 1336       (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')')
     4754      : lob_segname ('(' lob_parameters ')')? 
     4755      | '(' lob_parameters ')' 
               ;

 1337       (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')')?
     4756      : 
     4757      | (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')') 
               ;

 1338       (OBJECT RELATIONAL | (SECUREFILE | BASICFILE)? (CLOB | BINARY XML) (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')')?)
     4758      : 'OBJECT' 'RELATIONAL' 
     4759      | (SECUREFILE | BASICFILE)? (CLOB | BINARY XML) (lob_segname ('(' lob_parameters ')')? | '(' lob_parameters ')')? 
               ;

 1339       (LOBS | TABLES)
     4760      : 'LOBS' 
     4761      | 'TABLES' 
               ;

 1340       (XMLSCHEMA DELIMITED_ID)
     4762      : 'XMLSCHEMA' 'DELIMITED_ID' 
               ;

 1341       (XMLSCHEMA DELIMITED_ID)?
     4763      : 
     4764      | (XMLSCHEMA DELIMITED_ID) 
               ;

 1342       (allow_or_disallow NONSCHEMA)
     4765      : allow_or_disallow 'NONSCHEMA' 
               ;

 1343       (allow_or_disallow NONSCHEMA)?
     4766      : 
     4767      | (allow_or_disallow NONSCHEMA) 
               ;

 1344       (allow_or_disallow ANYSCHEMA)
     4768      : allow_or_disallow 'ANYSCHEMA' 
               ;

 1345       (allow_or_disallow ANYSCHEMA)?
     4769      : 
     4770      | (allow_or_disallow ANYSCHEMA) 
               ;

 1346       object_table_substitution?
     4771      : 
     4772      | object_table_substitution 
               ;

 1347       (',' object_properties)
     4773      : ',' object_properties 
               ;

 1348       (',' object_properties)*
     4774      : 
     4775      | (',' object_properties)* (',' object_properties) 
               ;

 1349       ('(' object_properties (',' object_properties)* ')')
     4776      : '(' object_properties (',' object_properties)* ')' 
               ;

 1350       ('(' object_properties (',' object_properties)* ')')?
     4777      : 
     4778      | ('(' object_properties (',' object_properties)* ')') 
               ;

 1351       index_name?
     4779      : 
     4780      | index_name 
               ;

 1352       (physical_attributes_clause | TABLESPACE tablespace)
     4781      : physical_attributes_clause 
     4782      | 'TABLESPACE' tablespace 
               ;

 1353       (physical_attributes_clause | TABLESPACE tablespace)+
     4783      : (physical_attributes_clause | TABLESPACE tablespace) 
     4784      | (physical_attributes_clause | TABLESPACE tablespace)+ (physical_attributes_clause | TABLESPACE tablespace) 
               ;

 1354       (SYSTEM GENERATED | PRIMARY KEY)
     4785      : 'SYSTEM' 'GENERATED' 
     4786      | 'PRIMARY' 'KEY' 
               ;

 1355       (column_name | attribute_name)
     4787      : column_name 
     4788      | attribute_name 
               ;

 1356       (DEFAULT expression)
     4789      : 'DEFAULT' expression 
               ;

 1357       (DEFAULT expression)?
     4790      : 
     4791      | (DEFAULT expression) 
               ;

 1358       (',' inline_constraint)
     4792      : ',' inline_constraint 
               ;

 1359       (',' inline_constraint)*
     4793      : 
     4794      | (',' inline_constraint)* (',' inline_constraint) 
               ;

 1360       (inline_constraint (',' inline_constraint)* | inline_ref_constraint)
     4795      : inline_constraint (',' inline_constraint)* 
     4796      | inline_ref_constraint 
               ;

 1361       (inline_constraint (',' inline_constraint)* | inline_ref_constraint)?
     4797      : 
     4798      | (inline_constraint (',' inline_constraint)* | inline_ref_constraint) 
               ;

 1362       (',' relational_property)
     4799      : ',' relational_property 
               ;

 1363       (',' relational_property)*
     4800      : 
     4801      | (',' relational_property)* (',' relational_property) 
               ;

 1364       ('(' relational_property (',' relational_property)* ')')
     4802      : '(' relational_property (',' relational_property)* ')' 
               ;

 1365       ('(' relational_property (',' relational_property)* ')')?
     4803      : 
     4804      | ('(' relational_property (',' relational_property)* ')') 
               ;

 1366       (column_definition | virtual_column_definition | out_of_line_constraint | out_of_line_ref_constraint | supplemental_logging_props)
     4805      : column_definition 
     4806      | virtual_column_definition 
     4807      | out_of_line_constraint 
     4808      | out_of_line_ref_constraint 
     4809      | supplemental_logging_props 
               ;

 1367       (INTERVAL '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')?)
     4810      : 'INTERVAL' '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')? 
               ;

 1368       (INTERVAL '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')?)?
     4811      : 
     4812      | (INTERVAL '(' expression ')' (STORE IN '(' tablespace (',' tablespace)* ')')?) 
               ;

 1369       (',' PARTITION partition_name? range_values_clause table_partition_description)
     4813      : ',' 'PARTITION' partition_name? range_values_clause table_partition_description 
               ;

 1370       (',' PARTITION partition_name? range_values_clause table_partition_description)*
     4814      : 
     4815      | (',' PARTITION partition_name? range_values_clause table_partition_description)* (',' PARTITION partition_name? range_values_clause table_partition_description) 
               ;

 1371       (',' PARTITION partition_name? list_values_clause table_partition_description)
     4816      : ',' 'PARTITION' partition_name? list_values_clause table_partition_description 
               ;

 1372       (',' PARTITION partition_name? list_values_clause table_partition_description)*
     4817      : 
     4818      | (',' PARTITION partition_name? list_values_clause table_partition_description)* (',' PARTITION partition_name? list_values_clause table_partition_description) 
               ;

 1373       partitioning_storage_clause?
     4819      : 
     4820      | partitioning_storage_clause 
               ;

 1374       (',' PARTITION partition_name? partitioning_storage_clause?)
     4821      : ',' 'PARTITION' partition_name? partitioning_storage_clause? 
               ;

 1375       (',' PARTITION partition_name? partitioning_storage_clause?)*
     4822      : 
     4823      | (',' PARTITION partition_name? partitioning_storage_clause?)* (',' PARTITION partition_name? partitioning_storage_clause?) 
               ;

 1376       (table_compression | key_compression)
     4824      : table_compression 
     4825      | key_compression 
               ;

 1377       (table_compression | key_compression)?
     4826      : 
     4827      | (table_compression | key_compression) 
               ;

 1378       (OVERFLOW STORE IN '(' tablespace (',' tablespace)* ')')
     4828      : 'OVERFLOW' 'STORE' 'IN' '(' tablespace (',' tablespace)* ')' 
               ;

 1379       (OVERFLOW STORE IN '(' tablespace (',' tablespace)* ')')?
     4829      : 
     4830      | (OVERFLOW STORE IN '(' tablespace (',' tablespace)* ')') 
               ;

 1380       (subpartition_by_range | subpartition_by_list | subpartition_by_hash)
     4831      : subpartition_by_range 
     4832      | subpartition_by_list 
     4833      | subpartition_by_hash 
               ;

 1381       (',' range_partition_desc)
     4834      : ',' range_partition_desc 
               ;

 1382       (',' range_partition_desc)*
     4835      : 
     4836      | (',' range_partition_desc)* (',' range_partition_desc) 
               ;

 1383       (',' list_partition_desc)
     4837      : ',' list_partition_desc 
               ;

 1384       (',' list_partition_desc)*
     4838      : 
     4839      | (',' list_partition_desc)* (',' list_partition_desc) 
               ;

 1385       (',' column_name)+
     4840      : (',' column_name) 
     4841      | (',' column_name)+ (',' column_name) 
               ;

 1386       (',' reference_partition_desc)
     4842      : ',' reference_partition_desc 
               ;

 1387       (',' reference_partition_desc)*
     4843      : 
     4844      | (',' reference_partition_desc)* (',' reference_partition_desc) 
               ;

 1388       ('(' reference_partition_desc (',' reference_partition_desc)* ')')
     4845      : '(' reference_partition_desc (',' reference_partition_desc)* ')' 
               ;

 1389       ('(' reference_partition_desc (',' reference_partition_desc)* ')')?
     4846      : 
     4847      | ('(' reference_partition_desc (',' reference_partition_desc)* ')') 
               ;

 1390       (PARTITIONS UNSIGNED_INTEGER | reference_partition_desc (',' reference_partition_desc)*)
     4848      : 'PARTITIONS' 'UNSIGNED_INTEGER' 
     4849      | reference_partition_desc (',' reference_partition_desc)* 
               ;

 1391       (PARTITIONS UNSIGNED_INTEGER | reference_partition_desc (',' reference_partition_desc)*)?
     4850      : 
     4851      | (PARTITIONS UNSIGNED_INTEGER | reference_partition_desc (',' reference_partition_desc)*) 
               ;

 1392       (',' range_subpartition_desc)
     4852      : ',' range_subpartition_desc 
               ;

 1393       (',' range_subpartition_desc)*
     4853      : 
     4854      | (',' range_subpartition_desc)* (',' range_subpartition_desc) 
               ;

 1394       (',' list_subpartition_desc)
     4855      : ',' list_subpartition_desc 
               ;

 1395       (',' list_subpartition_desc)*
     4856      : 
     4857      | (',' list_subpartition_desc)* (',' list_subpartition_desc) 
               ;

 1396       (',' individual_hash_subparts)
     4858      : ',' individual_hash_subparts 
               ;

 1397       (',' individual_hash_subparts)*
     4859      : 
     4860      | (',' individual_hash_subparts)* (',' individual_hash_subparts) 
               ;

 1398       (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*)
     4861      : range_subpartition_desc (',' range_subpartition_desc)* 
     4862      | list_subpartition_desc (',' list_subpartition_desc)* 
     4863      | individual_hash_subparts (',' individual_hash_subparts)* 
               ;

 1399       ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subparts_by_quantity)
     4864      : '(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' 
     4865      | hash_subparts_by_quantity 
               ;

 1400       ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subparts_by_quantity)?
     4866      : 
     4867      | ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subparts_by_quantity) 
               ;

 1401       ('(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' | hash_subpartition_quantity)
     4868      : '(' (range_subpartition_desc (',' range_subpartition_desc)* | list_subpartition_desc (',' list_subpartition_desc)* | individual_hash_subparts (',' individual_hash_subparts)*) ')' 
     4869      | hash_subpartition_quantity 
               ;

 1402       subpartition_template?
     4870      : 
     4871      | subpartition_template 
               ;

 1403       (SUBPARTITIONS UNSIGNED_INTEGER (STORE IN '(' tablespace (',' tablespace)* ')')? | subpartition_template)
     4872      : 'SUBPARTITIONS' 'UNSIGNED_INTEGER' (STORE IN '(' tablespace (',' tablespace)* ')')? 
     4873      | subpartition_template 
               ;

 1404       (SUBPARTITIONS UNSIGNED_INTEGER (STORE IN '(' tablespace (',' tablespace)* ')')? | subpartition_template)?
     4874      : 
     4875      | (SUBPARTITIONS UNSIGNED_INTEGER (STORE IN '(' tablespace (',' tablespace)* ')')? | subpartition_template) 
               ;

 1405       (literal (',' literal)* | DEFAULT)
     4876      : literal (',' literal)* 
     4877      | 'DEFAULT' 
               ;

 1406       deferred_segment_creation?
     4878      : 
     4879      | deferred_segment_creation 
               ;

 1407       (OVERFLOW segment_attributes_clause?)
     4880      : 'OVERFLOW' segment_attributes_clause? 
               ;

 1408       (OVERFLOW segment_attributes_clause?)?
     4881      : 
     4882      | (OVERFLOW segment_attributes_clause?) 
               ;

 1409       (lob_storage_clause | varray_col_properties | nested_table_col_properties)
     4883      : lob_storage_clause 
     4884      | varray_col_properties 
     4885      | nested_table_col_properties 
               ;

 1410       (lob_storage_clause | varray_col_properties | nested_table_col_properties)?
     4886      : 
     4887      | (lob_storage_clause | varray_col_properties | nested_table_col_properties) 
               ;

 1411       (BASICFILE | SECUREFILE)
     4888      : 'BASICFILE' 
     4889      | 'SECUREFILE' 
               ;

 1412       (BASICFILE | SECUREFILE)?
     4890      : 
     4891      | (BASICFILE | SECUREFILE) 
               ;

 1413       (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname)
     4892      : 'TABLESPACE' tablespace 
     4893      | 'OVERFLOW' (TABLESPACE tablespace)? 
     4894      | table_compression 
     4895      | key_compression 
     4896      | lob_partitioning_storage 
     4897      | 'VARRAY' varray_item 'STORE' 'AS' (BASICFILE | SECUREFILE)? 'LOB' lob_segname 
               ;

 1414       (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname)+
     4898      : (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname) 
     4899      | (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname)+ (TABLESPACE tablespace | OVERFLOW (TABLESPACE tablespace)? | table_compression | key_compression | lob_partitioning_storage | VARRAY varray_item STORE AS (BASICFILE | SECUREFILE)? LOB lob_segname) 
               ;

 1415       ('(' TABLESPACE tablespace ')')
     4900      : '(' 'TABLESPACE' tablespace ')' 
               ;

 1416       ('(' TABLESPACE tablespace ')')?
     4901      : 
     4902      | ('(' TABLESPACE tablespace ')') 
               ;

 1417       (lob_segname ('(' TABLESPACE tablespace ')')? | '(' TABLESPACE tablespace ')')
     4903      : lob_segname ('(' TABLESPACE tablespace ')')? 
     4904      | '(' 'TABLESPACE' tablespace ')' 
               ;

 1418       (USING CHAR_STRING)
     4905      : 'USING' 'CHAR_STRING' 
               ;

 1419       (USING CHAR_STRING)?
     4906      : 
     4907      | (USING CHAR_STRING) 
               ;

 1420       (IDENTIFIED BY REGULAR_ID)
     4908      : 'IDENTIFIED' 'BY' 'REGULAR_ID' 
               ;

 1421       (IDENTIFIED BY REGULAR_ID)?
     4909      : 
     4910      | (IDENTIFIED BY REGULAR_ID) 
               ;

 1422       (NO? SALT)
     4911      : NO? 'SALT' 
               ;

 1423       (NO? SALT)?
     4912      : 
     4913      | (NO? SALT) 
               ;

 1424       (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)?)
     4914      : 'ENCRYPT' (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)? 
               ;

 1425       (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)?)?
     4915      : 
     4916      | (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY REGULAR_ID)? CHAR_STRING? (NO? SALT)?) 
               ;

 1426       REGULAR_ID?
     4917      : 
     4918      | 'REGULAR_ID' 
               ;

 1427       (QUERY | ARCHIVE)
     4919      : 'QUERY' 
     4920      | 'ARCHIVE' 
               ;

 1428       (LOW | HIGH)
     4921      : 'LOW' 
     4922      | 'HIGH' 
               ;

 1429       (LOW | HIGH)?
     4923      : 
     4924      | (LOW | HIGH) 
               ;

 1430       (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?)
     4925      : 'OLTP' 
     4926      | (QUERY | ARCHIVE) (LOW | HIGH)? 
               ;

 1431       (BASIC | FOR (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?))
     4927      : 'BASIC' 
     4928      | 'FOR' (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?) 
               ;

 1432       (BASIC | FOR (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?))?
     4929      : 
     4930      | (BASIC | FOR (OLTP | (QUERY | ARCHIVE) (LOW | HIGH)?)) 
               ;

 1433       (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause)
     4931      : 'PCTFREE' 'pctfreeUNSIGNED_INTEGER' 
     4932      | 'PCTUSED' 'pctusedUNSIGNED_INTEGER' 
     4933      | 'INITRANS' 'inittransUNSIGNED_INTEGER' 
     4934      | storage_clause 
               ;

 1434       (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause)+
     4935      : (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause) 
     4936      | (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause)+ (PCTFREE pctfreeUNSIGNED_INTEGER | PCTUSED pctusedUNSIGNED_INTEGER | INITRANS inittransUNSIGNED_INTEGER | storage_clause) 
               ;

 1435       (UNSIGNED_INTEGER | UNLIMITED)
     4937      : 'UNSIGNED_INTEGER' 
     4938      | 'UNLIMITED' 
               ;

 1436       (size_clause | NULL_)
     4939      : size_clause 
     4940      | 'NULL_' 
               ;

 1437       (KEEP | RECYCLE | DEFAULT)
     4941      : 'KEEP' 
     4942      | 'RECYCLE' 
     4943      | 'DEFAULT' 
               ;

 1438       (KEEP | NONE | DEFAULT)
     4944      : 'KEEP' 
     4945      | 'NONE' 
     4946      | 'DEFAULT' 
               ;

 1439       (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT)
     4947      : 'INITIAL' 'initial_sizesize_clause' 
     4948      | 'NEXT' 'next_sizesize_clause' 
     4949      | 'MINEXTENTS' 'minextents' (UNSIGNED_INTEGER | UNLIMITED) 
     4950      | 'MAXEXTENTS' 'minextents' (UNSIGNED_INTEGER | UNLIMITED) 
     4951      | 'PCTINCREASE' 'pctincreaseUNSIGNED_INTEGER' 
     4952      | 'FREELISTS' 'freelistsUNSIGNED_INTEGER' 
     4953      | 'FREELIST' 'GROUPS' 'freelist_groupsUNSIGNED_INTEGER' 
     4954      | 'OPTIMAL' (size_clause | NULL_) 
     4955      | 'BUFFER_POOL' (KEEP | RECYCLE | DEFAULT) 
     4956      | 'FLASH_CACHE' (KEEP | NONE | DEFAULT) 
     4957      | 'ENCRYPT' 
               ;

 1440       (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT)+
     4958      : (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT) 
     4959      | (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT)+ (INITIAL initial_sizesize_clause | NEXT next_sizesize_clause | MINEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | MAXEXTENTS minextents (UNSIGNED_INTEGER | UNLIMITED) | PCTINCREASE pctincreaseUNSIGNED_INTEGER | FREELISTS freelistsUNSIGNED_INTEGER | FREELIST GROUPS freelist_groupsUNSIGNED_INTEGER | OPTIMAL (size_clause | NULL_) | BUFFER_POOL (KEEP | RECYCLE | DEFAULT) | FLASH_CACHE (KEEP | NONE | DEFAULT) | ENCRYPT) 
               ;

 1441       (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause)
     4960      : physical_attributes_clause 
     4961      | 'TABLESPACE' 'tablespace_nameid_expression' 
     4962      | logging_clause 
               ;

 1442       (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause)+
     4963      : (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause) 
     4964      | (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause)+ (physical_attributes_clause | TABLESPACE tablespace_nameid_expression | logging_clause) 
               ;

 1443       (supplemental_log_grp_clause | supplemental_id_key_clause)
     4965      : supplemental_log_grp_clause 
     4966      | supplemental_id_key_clause 
               ;

 1444       (',' SUPPLEMENTAL LOG (supplemental_log_grp_clause | supplemental_id_key_clause))
     4967      : ',' 'SUPPLEMENTAL' 'LOG' (supplemental_log_grp_clause | supplemental_id_key_clause) 
               ;

 1445       (',' SUPPLEMENTAL LOG (supplemental_log_grp_clause | supplemental_id_key_clause))*
     4968      : 
     4969      | (',' SUPPLEMENTAL LOG (supplemental_log_grp_clause | supplemental_id_key_clause))* (',' SUPPLEMENTAL LOG (supplemental_log_grp_clause | supplemental_id_key_clause)) 
               ;

 1446       (supplemental_id_key_clause | GROUP log_grp)
     4970      : supplemental_id_key_clause 
     4971      | 'GROUP' log_grp 
               ;

 1447       (',' SUPPLEMENTAL LOG (supplemental_id_key_clause | GROUP log_grp))
     4972      : ',' 'SUPPLEMENTAL' 'LOG' (supplemental_id_key_clause | GROUP log_grp) 
               ;

 1448       (',' SUPPLEMENTAL LOG (supplemental_id_key_clause | GROUP log_grp))*
     4973      : 
     4974      | (',' SUPPLEMENTAL LOG (supplemental_id_key_clause | GROUP log_grp))* (',' SUPPLEMENTAL LOG (supplemental_id_key_clause | GROUP log_grp)) 
               ;

 1449       (NO LOG)
     4975      : 'NO' 'LOG' 
               ;

 1450       (NO LOG)?
     4976      : 
     4977      | (NO LOG) 
               ;

 1451       (',' regular_id (NO LOG)?)
     4978      : ',' regular_id (NO LOG)? 
               ;

 1452       (',' regular_id (NO LOG)?)*
     4979      : 
     4980      | (',' regular_id (NO LOG)?)* (',' regular_id (NO LOG)?) 
               ;

 1453       ALWAYS?
     4981      : 
     4982      | 'ALWAYS' 
               ;

 1454       (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY)
     4983      : 'ALL' 
     4984      | 'PRIMARY' 'KEY' 
     4985      | 'UNIQUE' 
     4986      | 'FOREIGN' 'KEY' 
               ;

 1455       (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY))
     4987      : ','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY) 
               ;

 1456       (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY))+
     4988      : (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY)) 
     4989      | (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY))+ (','? (ALL | PRIMARY KEY | UNIQUE | FOREIGN KEY)) 
               ;

 1457       (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)
     4990      : 'SIZE' size_clause 
     4991      | 'DATAFILE' 'datafileCHAR_STRING' 
     4992      | 'INSTANCE' 'inst_numUNSIGNED_INTEGER' 
               ;

 1458       (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+
     4993      : (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER) 
     4994      | (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER) 
               ;

 1459       ('(' (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ ')')
     4995      : '(' (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ ')' 
               ;

 1460       ('(' (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ ')')?
     4996      : 
     4997      | ('(' (SIZE size_clause | DATAFILE datafileCHAR_STRING | INSTANCE inst_numUNSIGNED_INTEGER)+ ')') 
               ;

 1461       COMPACT?
     4998      : 
     4999      | 'COMPACT' 
               ;

 1462       CASCADE?
     5000      : 
     5001      | 'CASCADE' 
               ;

 1463       (MINIMIZE | NOMINIMIZE)
     5002      : 'MINIMIZE' 
     5003      | 'NOMINIMIZE' 
               ;

 1464       (MINIMIZE | NOMINIMIZE)?
     5004      : 
     5005      | (MINIMIZE | NOMINIMIZE) 
               ;

 1465       (NOT? INCLUDING DATA)
     5006      : NOT? 'INCLUDING' 'DATA' 
               ;

 1466       PURGE?
     5007      : 
     5008      | 'PURGE' 
               ;

 1467       (CASCADE CONSTRAINT)
     5009      : 'CASCADE' 'CONSTRAINT' 
               ;

 1468       (CASCADE CONSTRAINT)?
     5010      : 
     5011      | (CASCADE CONSTRAINT) 
               ;

 1469       (schema_name PERIOD)
     5012      : schema_name 'PERIOD' 
               ;

 1470       (schema_name PERIOD)?
     5013      : 
     5014      | (schema_name PERIOD) 
               ;

 1471       (AT_SIGN link_name)
     5015      : 'AT_SIGN' link_name 
               ;

 1472       (AT_SIGN link_name)?
     5016      : 
     5017      | (AT_SIGN link_name) 
               ;

 1473       (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache)
     5018      : physical_attributes_clause 
     5019      | 'SIZE' size_clause 
     5020      | allocate_extent_clause 
     5021      | deallocate_unused_clause 
     5022      | cache_or_nocache 
               ;

 1474       (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache)+
     5023      : (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache) 
     5024      | (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache)+ (physical_attributes_clause | SIZE size_clause | allocate_extent_clause | deallocate_unused_clause | cache_or_nocache) 
               ;

 1475       database_name?
     5025      : 
     5026      | database_name 
               ;

 1476       (startup_clauses | recovery_clauses | database_file_clauses | logfile_clauses | controlfile_clauses | standby_database_clauses | default_settings_clause | instance_clauses | security_clause)
     5027      : startup_clauses 
     5028      | recovery_clauses 
     5029      | database_file_clauses 
     5030      | logfile_clauses 
     5031      | controlfile_clauses 
     5032      | standby_database_clauses 
     5033      | default_settings_clause 
     5034      | instance_clauses 
     5035      | security_clause 
               ;

 1477       (STANDBY | CLONE)
     5036      : 'STANDBY' 
     5037      | 'CLONE' 
               ;

 1478       ((STANDBY | CLONE) DATABASE)
     5038      : (STANDBY | CLONE) 'DATABASE' 
               ;

 1479       ((STANDBY | CLONE) DATABASE)?
     5039      : 
     5040      | ((STANDBY | CLONE) DATABASE) 
               ;

 1480       (READ WRITE)
     5041      : 'READ' 'WRITE' 
               ;

 1481       (READ WRITE)?
     5042      : 
     5043      | (READ WRITE) 
               ;

 1482       resetlogs_or_noresetlogs?
     5044      : 
     5045      | resetlogs_or_noresetlogs 
               ;

 1483       upgrade_or_downgrade?
     5046      : 
     5047      | upgrade_or_downgrade 
               ;

 1484       AUTOMATIC?
     5048      : 
     5049      | 'AUTOMATIC' 
               ;

 1485       (FROM CHAR_STRING)
     5050      : 'FROM' 'CHAR_STRING' 
               ;

 1486       (FROM CHAR_STRING)?
     5051      : 
     5052      | (FROM CHAR_STRING) 
               ;

 1487       (full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING)
     5053      : full_database_recovery 
     5054      | partial_database_recovery 
     5055      | 'LOGFILE' 'CHAR_STRING' 
               ;

 1488       (full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING)?
     5056      : 
     5057      | (full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING) 
               ;

 1489       (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)
     5058      : 'TEST' 
     5059      | 'ALLOW' 'UNSIGNED_INTEGER' 'CORRUPTION' 
     5060      | parallel_clause 
               ;

 1490       (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)*
     5061      : 
     5062      | (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)* (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause) 
               ;

 1491       ((full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING)? (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)* | CONTINUE DEFAULT? | CANCEL)
     5063      : (full_database_recovery | partial_database_recovery | LOGFILE CHAR_STRING)? (TEST | ALLOW UNSIGNED_INTEGER CORRUPTION | parallel_clause)* 
     5064      | 'CONTINUE' DEFAULT? 
     5065      | 'CANCEL' 
               ;

 1492       STANDBY?
     5066      : 
     5067      | 'STANDBY' 
               ;

 1493       (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT)
     5068      : 'CANCEL' 
     5069      | 'TIME' 'CHAR_STRING' 
     5070      | 'CHANGE' 'UNSIGNED_INTEGER' 
     5071      | 'CONSISTENT' 
               ;

 1494       (UNTIL (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) | USING BACKUP CONTROLFILE)
     5072      : 'UNTIL' (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) 
     5073      | 'USING' 'BACKUP' 'CONTROLFILE' 
               ;

 1495       (UNTIL (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) | USING BACKUP CONTROLFILE)*
     5074      : 
     5075      | (UNTIL (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) | USING BACKUP CONTROLFILE)* (UNTIL (CANCEL | TIME CHAR_STRING | CHANGE UNSIGNED_INTEGER | CONSISTENT) | USING BACKUP CONTROLFILE) 
               ;

 1496       (',' CHAR_STRING | filenumber)
     5076      : ',' 'CHAR_STRING' 
     5077      | filenumber 
               ;

 1497       (',' CHAR_STRING | filenumber)*
     5078      : 
     5079      | (',' CHAR_STRING | filenumber)* (',' CHAR_STRING | filenumber) 
               ;

 1498       {self_isVersion10}?
     5080      : 
     5081      | {self_isVersion10} 
               ;

 1499       (TABLESPACE tablespace (',' tablespace)* | DATAFILE CHAR_STRING | filenumber (',' CHAR_STRING | filenumber)*)
     5082      : 'TABLESPACE' tablespace (',' tablespace)* 
     5083      | 'DATAFILE' 'CHAR_STRING' 
     5084      | filenumber (',' CHAR_STRING | filenumber)* 
               ;

 1500       (CONSISTENT WITH)
     5085      : 'CONSISTENT' 'WITH' 
               ;

 1501       (CONSISTENT WITH)?
     5086      : 
     5087      | (CONSISTENT WITH) 
               ;

 1502       (FROM SESSION)
     5088      : 'FROM' 'SESSION' 
               ;

 1503       (FROM SESSION)?
     5089      : 
     5090      | (FROM SESSION) 
               ;

 1504       (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)
     5091      : 'USING' 'CURRENT' 'LOGFILE' 
     5092      | 'DISCONNECT' (FROM SESSION)? 
     5093      | 'NODELAY' 
     5094      | 'UNTIL' 'CHANGE' 'UNSIGNED_INTEGER' 
     5095      | 'UNTIL' 'CONSISTENT' 
     5096      | parallel_clause 
               ;

 1505       (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+
     5097      : (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause) 
     5098      | (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause) 
               ;

 1506       ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL)
     5099      : (USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ 
     5100      | 'FINISH' 
     5101      | 'CANCEL' 
               ;

 1507       ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL)?
     5102      : 
     5103      | ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL) 
               ;

 1508       (db_name | KEEP IDENTITY)
     5104      : db_name 
     5105      | 'KEEP' 'IDENTITY' 
               ;

 1509       (MANAGED STANDBY DATABASE ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL)? | TO LOGICAL STANDBY (db_name | KEEP IDENTITY))
     5106      : 'MANAGED' 'STANDBY' 'DATABASE' ((USING CURRENT LOGFILE | DISCONNECT (FROM SESSION)? | NODELAY | UNTIL CHANGE UNSIGNED_INTEGER | UNTIL CONSISTENT | parallel_clause)+ | FINISH | CANCEL)? 
     5107      | 'TO' 'LOGICAL' 'STANDBY' (db_name | KEEP IDENTITY) 
               ;

 1510       (filename | filenumber)
     5108      : filename 
     5109      | filenumber 
               ;

 1511       (',' (filename | filenumber))
     5110      : ',' (filename | filenumber) 
               ;

 1512       (',' (filename | filenumber))*
     5111      : 
     5112      | (',' (filename | filenumber))* (',' (filename | filenumber)) 
               ;

 1513       (AS NEW)
     5113      : 'AS' 'NEW' 
               ;

 1514       (AS NEW)?
     5114      : 
     5115      | (AS NEW) 
               ;

 1515       (FOR DROP)
     5116      : 'FOR' 'DROP' 
               ;

 1516       (FOR DROP)?
     5117      : 
     5118      | (FOR DROP) 
               ;

 1517       (ONLINE | OFFLINE (FOR DROP)? | RESIZE size_clause | autoextend_clause | END BACKUP)
     5119      : 'ONLINE' 
     5120      | 'OFFLINE' (FOR DROP)? 
     5121      | 'RESIZE' size_clause 
     5122      | autoextend_clause 
     5123      | 'END' 'BACKUP' 
               ;

 1518       (INCLUDING DATAFILES)
     5124      : 'INCLUDING' 'DATAFILES' 
               ;

 1519       (RESIZE size_clause | autoextend_clause | DROP (INCLUDING DATAFILES) | ONLINE | OFFLINE)
     5125      : 'RESIZE' size_clause 
     5126      | autoextend_clause 
     5127      | 'DROP' (INCLUDING DATAFILES) 
     5128      | 'ONLINE' 
     5129      | 'OFFLINE' 
               ;

 1520       MANUAL?
     5130      : 
     5131      | 'MANUAL' 
               ;

 1521       (ARCHIVELOG MANUAL? | NOARCHIVELOG)
     5132      : 'ARCHIVELOG' MANUAL? 
     5133      | 'NOARCHIVELOG' 
               ;

 1522       UNARCHIVED?
     5134      : 
     5135      | 'UNARCHIVED' 
               ;

 1523       (',' logfile_descriptor)
     5136      : ',' logfile_descriptor 
               ;

 1524       (',' logfile_descriptor)*
     5137      : 
     5138      | (',' logfile_descriptor)* (',' logfile_descriptor) 
               ;

 1525       (UNRECOVERABLE DATAFILE)
     5139      : 'UNRECOVERABLE' 'DATAFILE' 
               ;

 1526       (UNRECOVERABLE DATAFILE)?
     5140      : 
     5141      | (UNRECOVERABLE DATAFILE) 
               ;

 1527       (log_file_group redo_log_file_spec)
     5142      : log_file_group redo_log_file_spec 
               ;

 1528       (log_file_group redo_log_file_spec)+
     5143      : (log_file_group redo_log_file_spec) 
     5144      | (log_file_group redo_log_file_spec)+ (log_file_group redo_log_file_spec) 
               ;

 1529       (',' filename REUSE?)
     5145      : ',' filename REUSE? 
               ;

 1530       (',' filename REUSE?)*
     5146      : 
     5147      | (',' filename REUSE?)* (',' filename REUSE?) 
               ;

 1531       ((log_file_group redo_log_file_spec)+ | MEMBER filename REUSE? (',' filename REUSE?)* TO logfile_descriptor (',' logfile_descriptor)*)
     5148      : (log_file_group redo_log_file_spec)+ 
     5149      | 'MEMBER' filename REUSE? (',' filename REUSE?)* 'TO' logfile_descriptor (',' logfile_descriptor)* 
               ;

 1532       (THREAD UNSIGNED_INTEGER)
     5150      : 'THREAD' 'UNSIGNED_INTEGER' 
               ;

 1533       (THREAD UNSIGNED_INTEGER)?
     5151      : 
     5152      | (THREAD UNSIGNED_INTEGER) 
               ;

 1534       (','? (THREAD UNSIGNED_INTEGER)? GROUP UNSIGNED_INTEGER)
     5153      : ','? (THREAD UNSIGNED_INTEGER)? 'GROUP' 'UNSIGNED_INTEGER' 
               ;

 1535       (logfile_descriptor (',' logfile_descriptor)* | MEMBER filename (',' filename)*)
     5154      : logfile_descriptor (',' logfile_descriptor)* 
     5155      | 'MEMBER' filename (',' filename)* 
               ;

 1536       (DATA | supplemental_id_key_clause | supplemental_plsql_clause)
     5156      : 'DATA' 
     5157      | supplemental_id_key_clause 
     5158      | supplemental_plsql_clause 
               ;

 1537       (LOGICAL | PHYSICAL)
     5159      : 'LOGICAL' 
     5160      | 'PHYSICAL' 
               ;

 1538       (LOGICAL | PHYSICAL)?
     5161      : 
     5162      | (LOGICAL | PHYSICAL) 
               ;

 1539       (filename REUSE? | trace_file_clause)
     5163      : filename REUSE? 
     5164      | trace_file_clause 
               ;

 1540       (AS filename REUSE?)
     5165      : 'AS' filename REUSE? 
               ;

 1541       (AS filename REUSE?)?
     5166      : 
     5167      | (AS filename REUSE?) 
               ;

 1542       (RESETLOGS | NORESETLOGS)
     5168      : 'RESETLOGS' 
     5169      | 'NORESETLOGS' 
               ;

 1543       (RESETLOGS | NORESETLOGS)?
     5170      : 
     5171      | (RESETLOGS | NORESETLOGS) 
               ;

 1544       (activate_standby_db_clause | maximize_standby_db_clause | register_logfile_clause | commit_switchover_clause | start_standby_clause | stop_standby_clause | convert_database_clause)
     5172      : activate_standby_db_clause 
     5173      | maximize_standby_db_clause 
     5174      | register_logfile_clause 
     5175      | commit_switchover_clause 
     5176      | start_standby_clause 
     5177      | stop_standby_clause 
     5178      | convert_database_clause 
               ;

 1545       (PHYSICAL | LOGICAL)
     5179      : 'PHYSICAL' 
     5180      | 'LOGICAL' 
               ;

 1546       (PHYSICAL | LOGICAL)?
     5181      : 
     5182      | (PHYSICAL | LOGICAL) 
               ;

 1547       (FINISH APPLY)
     5183      : 'FINISH' 'APPLY' 
               ;

 1548       (FINISH APPLY)?
     5184      : 
     5185      | (FINISH APPLY) 
               ;

 1549       (PROTECTION | AVAILABILITY | PERFORMANCE)
     5186      : 'PROTECTION' 
     5187      | 'AVAILABILITY' 
     5188      | 'PERFORMANCE' 
               ;

 1550       (PREPARE | COMMIT)
     5189      : 'PREPARE' 
     5190      | 'COMMIT' 
               ;

 1551       PHYSICAL?
     5191      : 
     5192      | 'PHYSICAL' 
               ;

 1552       ((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY)
     5193      : (PHYSICAL | LOGICAL)? 'PRIMARY' 
     5194      | PHYSICAL? 'STANDBY' 
               ;

 1553       (WITH | WITHOUT)?
     5195      : 
     5196      | (WITH | WITHOUT) 
               ;

 1554       (WAIT | NOWAIT)
     5197      : 'WAIT' 
     5198      | 'NOWAIT' 
               ;

 1555       ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))
     5199      : (WITH | WITHOUT)? 'SESSION' 'SHUTDOWN' (WAIT | NOWAIT) 
               ;

 1556       ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))?
     5200      : 
     5201      | ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT)) 
               ;

 1557       (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY)
     5202      : ((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? 
     5203      | 'LOGICAL' 'STANDBY' 
               ;

 1558       (TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY)
     5204      : 'TO' (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) 
     5205      | 'LOGICAL' 'STANDBY' 
               ;

 1559       ((TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY) | CANCEL)
     5206      : (TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY) 
     5207      | 'CANCEL' 
               ;

 1560       ((TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY) | CANCEL)?
     5208      : 
     5209      | ((TO (((PHYSICAL | LOGICAL)? PRIMARY | PHYSICAL? STANDBY) ((WITH | WITHOUT)? SESSION SHUTDOWN (WAIT | NOWAIT))? | LOGICAL STANDBY) | LOGICAL STANDBY) | CANCEL) 
               ;

 1561       IMMEDIATE?
     5210      : 
     5211      | 'IMMEDIATE' 
               ;

 1562       NODELAY?
     5212      : 
     5213      | 'NODELAY' 
               ;

 1563       scn_valueUNSIGNED_INTEGER?
     5214      : 
     5215      | 'scn_valueUNSIGNED_INTEGER' 
               ;

 1564       (NEW PRIMARY regular_id | INITIAL scn_valueUNSIGNED_INTEGER? | SKIP_ FAILED TRANSACTION | FINISH)
     5216      : 'NEW' 'PRIMARY' regular_id 
     5217      | 'INITIAL' scn_valueUNSIGNED_INTEGER? 
     5218      | 'SKIP_' 'FAILED' 'TRANSACTION' 
     5219      | 'FINISH' 
               ;

 1565       (NEW PRIMARY regular_id | INITIAL scn_valueUNSIGNED_INTEGER? | SKIP_ FAILED TRANSACTION | FINISH)?
     5220      : 
     5221      | (NEW PRIMARY regular_id | INITIAL scn_valueUNSIGNED_INTEGER? | SKIP_ FAILED TRANSACTION | FINISH) 
               ;

 1566       (STOP | ABORT)
     5222      : 'STOP' 
     5223      | 'ABORT' 
               ;

 1567       (PHYSICAL | SNAPSHOT)
     5224      : 'PHYSICAL' 
     5225      | 'SNAPSHOT' 
               ;

 1568       (tablespace | tablespace_group_name)
     5226      : tablespace 
     5227      | tablespace_group_name 
               ;

 1569       ('.' domain)
     5228      : '.' domain 
               ;

 1570       ('.' domain)+
     5229      : ('.' domain) 
     5230      | ('.' domain)+ ('.' domain) 
               ;

 1571       (USING FILE filename REUSE?)
     5231      : 'USING' 'FILE' filename REUSE? 
               ;

 1572       (USING FILE filename REUSE?)?
     5232      : 
     5233      | (USING FILE filename REUSE?) 
               ;

 1573       (ALL | STANDBY | NONE)
     5234      : 'ALL' 
     5235      | 'STANDBY' 
     5236      | 'NONE' 
               ;

 1574       (alter_table_properties | constraint_clauses | column_clauses | move_table_clause)?
     5237      : 
     5238      | alter_table_properties 
     5239      | constraint_clauses 
     5240      | column_clauses 
     5241      | move_table_clause 
               ;

 1575       (TABLE LOCK | ALL TRIGGERS)
     5242      : 'TABLE' 'LOCK' 
     5243      | 'ALL' 'TRIGGERS' 
               ;

 1576       (enable_disable_clause | enable_or_disable (TABLE LOCK | ALL TRIGGERS))
     5244      : enable_disable_clause 
     5245      | enable_or_disable (TABLE LOCK | ALL TRIGGERS) 
               ;

 1577       (enable_disable_clause | enable_or_disable (TABLE LOCK | ALL TRIGGERS))*
     5246      : 
     5247      | (enable_disable_clause | enable_or_disable (TABLE LOCK | ALL TRIGGERS))* (enable_disable_clause | enable_or_disable (TABLE LOCK | ALL TRIGGERS)) 
               ;

 1578       (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause)
     5248      : physical_attributes_clause 
     5249      | logging_clause 
     5250      | table_compression 
     5251      | supplemental_table_logging 
     5252      | allocate_extent_clause 
     5253      | deallocate_unused_clause 
     5254      | (CACHE | NOCACHE) 
     5255      | 'RESULT_CACHE' '(' 'MODE' (DEFAULT | FORCE) ')' 
     5256      | upgrade_table_clause 
     5257      | records_per_block_clause 
     5258      | parallel_clause 
     5259      | row_movement_clause 
     5260      | flashback_archive_clause 
               ;

 1579       (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause)+
     5261      : (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause) 
     5262      | (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause)+ (physical_attributes_clause | logging_clause | table_compression | supplemental_table_logging | allocate_extent_clause | deallocate_unused_clause | (CACHE | NOCACHE) | RESULT_CACHE '(' MODE (DEFAULT | FORCE) ')' | upgrade_table_clause | records_per_block_clause | parallel_clause | row_movement_clause | flashback_archive_clause) 
               ;

 1580       (allocate_extent_clause | deallocate_unused_clause)
     5263      : allocate_extent_clause 
     5264      | deallocate_unused_clause 
               ;

 1581       (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause)
     5265      : segment_attributes_clause 
     5266      | allocate_extent_clause 
     5267      | shrink_clause 
     5268      | deallocate_unused_clause 
               ;

 1582       (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+
     5269      : (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause) 
     5270      | (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+ (segment_attributes_clause | allocate_extent_clause | shrink_clause | deallocate_unused_clause) 
               ;

 1583       (',' PARTITION segment_attributes_clause?)
     5271      : ',' 'PARTITION' segment_attributes_clause? 
               ;

 1584       (',' PARTITION segment_attributes_clause?)*
     5272      : 
     5273      | (',' PARTITION segment_attributes_clause?)* (',' PARTITION segment_attributes_clause?) 
               ;

 1585       ('(' PARTITION segment_attributes_clause? (',' PARTITION segment_attributes_clause?)* ')')
     5274      : '(' 'PARTITION' segment_attributes_clause? (',' PARTITION segment_attributes_clause?)* ')' 
               ;

 1586       ('(' PARTITION segment_attributes_clause? (',' PARTITION segment_attributes_clause?)* ')')?
     5275      : 
     5276      | ('(' PARTITION segment_attributes_clause? (',' PARTITION segment_attributes_clause?)* ')') 
               ;

 1587       (VALIDATE | NOVALIDATE)?
     5277      : 
     5278      | (VALIDATE | NOVALIDATE) 
               ;

 1588       (UNIQUE '(' column_name (',' column_name)* ')' | PRIMARY KEY | CONSTRAINT constraint_name)
     5279      : 'UNIQUE' '(' column_name (',' column_name)* ')' 
     5280      | 'PRIMARY' 'KEY' 
     5281      | 'CONSTRAINT' constraint_name 
               ;

 1589       using_index_clause?
     5282      : 
     5283      | using_index_clause 
               ;

 1590       exceptions_clause?
     5284      : 
     5285      | exceptions_clause 
               ;

 1591       (KEEP | DROP)
     5286      : 'KEEP' 
     5287      | 'DROP' 
               ;

 1592       ((KEEP | DROP) INDEX)
     5288      : (KEEP | DROP) 'INDEX' 
               ;

 1593       ((KEEP | DROP) INDEX)?
     5289      : 
     5290      | ((KEEP | DROP) INDEX) 
               ;

 1594       (index_name | '(' create_index ')' | index_attributes)
     5291      : index_name 
     5292      | '(' create_index ')' 
     5293      | index_attributes 
               ;

 1595       (index_name | '(' create_index ')' | index_attributes)?
     5294      : 
     5295      | (index_name | '(' create_index ')' | index_attributes) 
               ;

 1596       (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause)
     5296      : physical_attributes_clause 
     5297      | logging_clause 
     5298      | 'TABLESPACE' (tablespace | DEFAULT) 
     5299      | key_compression 
     5300      | sort_or_nosort 
     5301      | 'REVERSE' 
     5302      | visible_or_invisible 
     5303      | parallel_clause 
               ;

 1597       (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause)+
     5304      : (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause) 
     5305      | (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause)+ (physical_attributes_clause | logging_clause | TABLESPACE (tablespace | DEFAULT) | key_compression | sort_or_nosort | REVERSE | visible_or_invisible | parallel_clause) 
               ;

 1598       ONLINE?
     5306      : 
     5307      | 'ONLINE' 
               ;

 1599       index_org_table_clause?
     5308      : 
     5309      | index_org_table_clause 
               ;

 1600       (lob_storage_clause | varray_col_properties)
     5310      : lob_storage_clause 
     5311      | varray_col_properties 
               ;

 1601       (lob_storage_clause | varray_col_properties)*
     5312      : 
     5313      | (lob_storage_clause | varray_col_properties)* (lob_storage_clause | varray_col_properties) 
               ;

 1602       (mapping_table_clause | PCTTHRESHOLD UNSIGNED_INTEGER | key_compression)
     5314      : mapping_table_clause 
     5315      | 'PCTTHRESHOLD' 'UNSIGNED_INTEGER' 
     5316      | key_compression 
               ;

 1603       index_org_overflow_clause?
     5317      : 
     5318      | index_org_overflow_clause 
               ;

 1604       (INCLUDING column_name)
     5319      : 'INCLUDING' column_name 
               ;

 1605       (INCLUDING column_name)?
     5320      : 
     5321      | (INCLUDING column_name) 
               ;

 1606       (LOCATOR | VALUE)
     5322      : 'LOCATOR' 
     5323      | 'VALUE' 
               ;

 1607       (add_column_clause | modify_column_clauses | drop_column_clause)
     5324      : add_column_clause 
     5325      | modify_column_clauses 
     5326      | drop_column_clause 
               ;

 1608       (add_column_clause | modify_column_clauses | drop_column_clause)+
     5327      : (add_column_clause | modify_column_clauses | drop_column_clause) 
     5328      | (add_column_clause | modify_column_clauses | drop_column_clause)+ (add_column_clause | modify_column_clauses | drop_column_clause) 
               ;

 1609       (COLUMN column_name | ('(' column_name (',' column_name)* ')'))
     5329      : 'COLUMN' column_name 
     5330      | ('(' column_name (',' column_name)* ')') 
               ;

 1610       (CASCADE CONSTRAINTS | INVALIDATE)
     5331      : 'CASCADE' 'CONSTRAINTS' 
     5332      | 'INVALIDATE' 
               ;

 1611       (CASCADE CONSTRAINTS | INVALIDATE)*
     5333      : 
     5334      | (CASCADE CONSTRAINTS | INVALIDATE)* (CASCADE CONSTRAINTS | INVALIDATE) 
               ;

 1612       (COLUMN column_name | '(' column_name (',' column_name)* ')')
     5335      : 'COLUMN' column_name 
     5336      | '(' column_name (',' column_name)* ')' 
               ;

 1613       (CHECKPOINT UNSIGNED_INTEGER)
     5337      : 'CHECKPOINT' 'UNSIGNED_INTEGER' 
               ;

 1614       (CHECKPOINT UNSIGNED_INTEGER)?
     5338      : 
     5339      | (CHECKPOINT UNSIGNED_INTEGER) 
               ;

 1615       (UNUSED COLUMNS | COLUMNS CONTINUE)
     5340      : 'UNUSED' 'COLUMNS' 
     5341      | 'COLUMNS' 'CONTINUE' 
               ;

 1616       (',' modify_col_properties)
     5342      : ',' modify_col_properties 
               ;

 1617       (',' modify_col_properties)*
     5343      : 
     5344      | (',' modify_col_properties)* (',' modify_col_properties) 
               ;

 1618       ('(' modify_col_properties (',' modify_col_properties)* ')' | modify_col_properties | modify_col_substitutable)
     5345      : '(' modify_col_properties (',' modify_col_properties)* ')' 
     5346      | modify_col_properties 
     5347      | modify_col_substitutable 
               ;

 1619       datatype?
     5348      : 
     5349      | datatype 
               ;

 1620       lob_storage_clause?
     5350      : 
     5351      | lob_storage_clause 
               ;

 1621       (column_definition | virtual_column_definition)
     5352      : column_definition 
     5353      | virtual_column_definition 
               ;

 1622       (',' (column_definition | virtual_column_definition))
     5354      : ',' (column_definition | virtual_column_definition) 
               ;

 1623       (',' (column_definition | virtual_column_definition))*
     5355      : 
     5356      | (',' (column_definition | virtual_column_definition))* (',' (column_definition | virtual_column_definition)) 
               ;

 1624       ('(' (column_definition | virtual_column_definition) (',' (column_definition | virtual_column_definition))* ')' | (column_definition | virtual_column_definition))
     5357      : '(' (column_definition | virtual_column_definition) (',' (column_definition | virtual_column_definition))* ')' 
     5358      | (column_definition | virtual_column_definition) 
               ;

 1625       substitutable_column_clause?
     5359      : 
     5360      | substitutable_column_clause 
               ;

 1626       (substitutable_column_clause? varray_storage_clause | substitutable_column_clause)
     5361      : substitutable_column_clause? varray_storage_clause 
     5362      | substitutable_column_clause 
               ;

 1627       lob_segname?
     5363      : 
     5364      | lob_segname 
               ;

 1628       (lob_segname? '(' lob_storage_parameters ')' | lob_segname)
     5365      : lob_segname? '(' lob_storage_parameters ')' 
     5366      | lob_segname 
               ;

 1629       (lob_parameters storage_clause?)
     5367      : lob_parameters storage_clause? 
               ;

 1630       (',' lob_item)
     5368      : ',' lob_item 
               ;

 1631       (',' lob_item)*
     5369      : 
     5370      | (',' lob_item)* (',' lob_item) 
               ;

 1632       ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')
     5371      : (SECUREFILE | BASICFILE) 
     5372      | '(' lob_storage_parameters ')' 
               ;

 1633       ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')+
     5373      : ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')') 
     5374      | ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')+ ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')') 
               ;

 1634       ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')
     5375      : (SECUREFILE | BASICFILE) 
     5376      | lob_segname 
     5377      | '(' lob_storage_parameters ')' 
               ;

 1635       ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')+
     5378      : ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')') 
     5379      | ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')+ ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')') 
               ;

 1636       ('(' lob_item (',' lob_item)* ')' STORE AS ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')+ | '(' lob_item ')' STORE AS ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')+)
     5380      : '(' lob_item (',' lob_item)* ')' 'STORE' 'AS' ((SECUREFILE | BASICFILE) | '(' lob_storage_parameters ')')+ 
     5381      | '(' lob_item ')' 'STORE' 'AS' ((SECUREFILE | BASICFILE) | lob_segname | '(' lob_storage_parameters ')')+ 
               ;

 1637       (PCTVERSION | FREEPOOLS)
     5382      : 'PCTVERSION' 
     5383      | 'FREEPOOLS' 
               ;

 1638       (CACHE | NOCACHE | CACHE READS)
     5384      : 'CACHE' 
     5385      | 'NOCACHE' 
     5386      | 'CACHE' 'READS' 
               ;

 1639       logging_clause?
     5387      : 
     5388      | logging_clause 
               ;

 1640       (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause)
     5389      : storage_clause 
     5390      | (PCTVERSION | FREEPOOLS) 'UNSIGNED_INTEGER' 
     5391      | 'REBUILD' 'FREEPOOLS' 
     5392      | lob_retention_clause 
     5393      | lob_deduplicate_clause 
     5394      | lob_compression_clause 
     5395      | 'ENCRYPT' encryption_spec 
     5396      | 'DECRYPT' 
     5397      | 'CACHE' 
     5398      | (CACHE | NOCACHE | CACHE READS) logging_clause? 
     5399      | allocate_extent_clause 
     5400      | shrink_clause 
     5401      | deallocate_unused_clause 
               ;

 1641       (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+
     5402      : (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause) 
     5403      | (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause)+ (storage_clause | (PCTVERSION | FREEPOOLS) UNSIGNED_INTEGER | REBUILD FREEPOOLS | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | CACHE | (CACHE | NOCACHE | CACHE READS) logging_clause? | allocate_extent_clause | shrink_clause | deallocate_unused_clause) 
               ;

 1642       ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?)
     5404      : (ENABLE | DISABLE) 'STORAGE' 'IN' 'ROW' 
     5405      | 'CHUNK' 'UNSIGNED_INTEGER' 
     5406      | 'PCTVERSION' 'UNSIGNED_INTEGER' 
     5407      | 'FREEPOOLS' 'UNSIGNED_INTEGER' 
     5408      | lob_retention_clause 
     5409      | lob_deduplicate_clause 
     5410      | lob_compression_clause 
     5411      | 'ENCRYPT' encryption_spec 
     5412      | 'DECRYPT' 
     5413      | (CACHE | NOCACHE | CACHE READS) logging_clause? 
               ;

 1643       ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?)+
     5414      : ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?) 
     5415      | ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?)+ ((ENABLE | DISABLE) STORAGE IN ROW | CHUNK UNSIGNED_INTEGER | PCTVERSION UNSIGNED_INTEGER | FREEPOOLS UNSIGNED_INTEGER | lob_retention_clause | lob_deduplicate_clause | lob_compression_clause | ENCRYPT encryption_spec | DECRYPT | (CACHE | NOCACHE | CACHE READS) logging_clause?) 
               ;

 1644       (HIGH | MEDIUM | LOW)
     5416      : 'HIGH' 
     5417      | 'MEDIUM' 
     5418      | 'LOW' 
               ;

 1645       (HIGH | MEDIUM | LOW)?
     5419      : 
     5420      | (HIGH | MEDIUM | LOW) 
               ;

 1646       (MAX | MIN UNSIGNED_INTEGER | AUTO | NONE)
     5421      : 'MAX' 
     5422      | 'MIN' 'UNSIGNED_INTEGER' 
     5423      | 'AUTO' 
     5424      | 'NONE' 
               ;

 1647       (MAX | MIN UNSIGNED_INTEGER | AUTO | NONE)?
     5425      : 
     5426      | (MAX | MIN UNSIGNED_INTEGER | AUTO | NONE) 
               ;

 1648       (varray_col_properties | lob_storage_clause)
     5427      : varray_col_properties 
     5428      | lob_storage_clause 
               ;

 1649       ('(' start_time_column ',' end_time_column ')')
     5429      : '(' start_time_column ',' end_time_column ')' 
               ;

 1650       ('(' start_time_column ',' end_time_column ')')?
     5430      : 
     5431      | ('(' start_time_column ',' end_time_column ')') 
               ;

 1651       (datatype | type_name)
     5432      : datatype 
     5433      | type_name 
               ;

 1652       (IDENTIFIED BY regular_id)
     5434      : 'IDENTIFIED' 'BY' regular_id 
               ;

 1653       (IDENTIFIED BY regular_id)?
     5435      : 
     5436      | (IDENTIFIED BY regular_id) 
               ;

 1654       (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY regular_id)? CHAR_STRING? (NO? SALT)?)
     5437      : 'ENCRYPT' (USING CHAR_STRING)? (IDENTIFIED BY regular_id)? CHAR_STRING? (NO? SALT)? 
               ;

 1655       (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY regular_id)? CHAR_STRING? (NO? SALT)?)?
     5438      : 
     5439      | (ENCRYPT (USING CHAR_STRING)? (IDENTIFIED BY regular_id)? CHAR_STRING? (NO? SALT)?) 
               ;

 1656       (inline_constraint* | inline_ref_constraint)
     5440      : inline_constraint* 
     5441      | inline_ref_constraint 
               ;

 1657       autogenerated_sequence_definition?
     5442      : 
     5443      | autogenerated_sequence_definition 
               ;

 1658       VIRTUAL?
     5444      : 
     5445      | 'VIRTUAL' 
               ;

 1659       (ON NULL_)
     5446      : 'ON' 'NULL_' 
               ;

 1660       (ON NULL_)?
     5447      : 
     5448      | (ON NULL_) 
               ;

 1661       (ALWAYS | BY DEFAULT (ON NULL_)?)
     5449      : 'ALWAYS' 
     5450      | 'BY' 'DEFAULT' (ON NULL_)? 
               ;

 1662       (ALWAYS | BY DEFAULT (ON NULL_)?)?
     5451      : 
     5452      | (ALWAYS | BY DEFAULT (ON NULL_)?) 
               ;

 1663       ('(' (sequence_start_clause | sequence_spec)* ')')
     5453      : '(' (sequence_start_clause | sequence_spec)* ')' 
               ;

 1664       ('(' (sequence_start_clause | sequence_spec)* ')')?
     5454      : 
     5455      | ('(' (sequence_start_clause | sequence_spec)* ')') 
               ;

 1665       (nested_item | COLUMN_VALUE)
     5456      : nested_item 
     5457      | 'COLUMN_VALUE' 
               ;

 1666       (LOCAL | GLOBAL)
     5458      : 'LOCAL' 
     5459      | 'GLOBAL' 
               ;

 1667       (LOCAL | GLOBAL)?
     5460      : 
     5461      | (LOCAL | GLOBAL) 
               ;

 1668       ('(' object_properties ')' | physical_properties | column_properties)
     5462      : '(' object_properties ')' 
     5463      | physical_properties 
     5464      | column_properties 
               ;

 1669       ('(' object_properties ')' | physical_properties | column_properties)+
     5465      : ('(' object_properties ')' | physical_properties | column_properties) 
     5466      | ('(' object_properties ')' | physical_properties | column_properties)+ ('(' object_properties ')' | physical_properties | column_properties) 
               ;

 1670       ('(' ('(' object_properties ')' | physical_properties | column_properties)+ ')')
     5467      : '(' ('(' object_properties ')' | physical_properties | column_properties)+ ')' 
               ;

 1671       ('(' ('(' object_properties ')' | physical_properties | column_properties)+ ')')?
     5468      : 
     5469      | ('(' ('(' object_properties ')' | physical_properties | column_properties)+ ')') 
               ;

 1672       AS?
     5470      : 
     5471      | 'AS' 
               ;

 1673       (RETURN AS? (LOCATOR | VALUE))
     5472      : 'RETURN' AS? (LOCATOR | VALUE) 
               ;

 1674       (RETURN AS? (LOCATOR | VALUE))?
     5473      : 
     5474      | (RETURN AS? (LOCATOR | VALUE)) 
               ;

 1675       ELEMENT?
     5475      : 
     5476      | 'ELEMENT' 
               ;

 1676       TYPE?
     5477      : 
     5478      | 'TYPE' 
               ;

 1677       out_of_line_constraint*
     5479      : 
     5480      | out_of_line_constraint* out_of_line_constraint 
               ;

 1678       (out_of_line_constraint* | out_of_line_ref_constraint)
     5481      : out_of_line_constraint* 
     5482      | out_of_line_ref_constraint 
               ;

 1679       drop_constraint_clause+
     5483      : drop_constraint_clause 
     5484      | drop_constraint_clause+ drop_constraint_clause 
               ;

 1680       (PRIMARY KEY | UNIQUE '(' column_name (',' column_name)* ')')
     5485      : 'PRIMARY' 'KEY' 
     5486      | 'UNIQUE' '(' column_name (',' column_name)* ')' 
               ;

 1681       (KEEP | DROP)?
     5487      : 
     5488      | (KEEP | DROP) 
               ;

 1682       (',' (CONSTRAINT constraint_name)? add_constraint_clause)
     5489      : ',' (CONSTRAINT constraint_name)? add_constraint_clause 
               ;

 1683       (',' (CONSTRAINT constraint_name)? add_constraint_clause)+
     5490      : (',' (CONSTRAINT constraint_name)? add_constraint_clause) 
     5491      | (',' (CONSTRAINT constraint_name)? add_constraint_clause)+ (',' (CONSTRAINT constraint_name)? add_constraint_clause) 
               ;

 1684       DISABLE?
     5492      : 
     5493      | 'DISABLE' 
               ;

 1685       on_delete_clause?
     5494      : 
     5495      | on_delete_clause 
               ;

 1686       (CASCADE | SET NULL_)
     5496      : 'CASCADE' 
     5497      | 'SET' 'NULL_' 
               ;

 1687       (DECLARE seq_of_declare_specs)
     5498      : 'DECLARE' seq_of_declare_specs 
               ;

 1688       (DECLARE seq_of_declare_specs)?
     5499      : 
     5500      | (DECLARE seq_of_declare_specs) 
               ;

 1689       exception_handler+
     5501      : exception_handler 
     5502      | exception_handler+ exception_handler 
               ;

 1690       (EXCEPTION exception_handler+)
     5503      : 'EXCEPTION' exception_handler+ 
               ;

 1691       (EXCEPTION exception_handler+)?
     5504      : 
     5505      | (EXCEPTION exception_handler+) 
               ;

 1692       (CURRENT_USER | DEFINER)
     5506      : 'CURRENT_USER' 
     5507      | 'DEFINER' 
               ;

 1693       (java_spec | c_spec)
     5508      : java_spec 
     5509      | c_spec 
               ;

 1694       (NAME CHAR_STRING)
     5510      : 'NAME' 'CHAR_STRING' 
               ;

 1695       (NAME CHAR_STRING)?
     5511      : 
     5512      | (NAME CHAR_STRING) 
               ;

 1696       c_agent_in_clause?
     5513      : 
     5514      | c_agent_in_clause 
               ;

 1697       (WITH CONTEXT)
     5515      : 'WITH' 'CONTEXT' 
               ;

 1698       (WITH CONTEXT)?
     5516      : 
     5517      | (WITH CONTEXT) 
               ;

 1699       c_parameters_clause?
     5518      : 
     5519      | c_parameters_clause 
               ;

 1700       (expressions | '.' '.' '.')
     5520      : expressions 
     5521      | '.' '.' '.' 
               ;

 1701       (IN | OUT | INOUT | NOCOPY)
     5522      : 'IN' 
     5523      | 'OUT' 
     5524      | 'INOUT' 
     5525      | 'NOCOPY' 
               ;

 1702       (IN | OUT | INOUT | NOCOPY)*
     5526      : 
     5527      | (IN | OUT | INOUT | NOCOPY)* (IN | OUT | INOUT | NOCOPY) 
               ;

 1703       default_value_part?
     5528      : 
     5529      | default_value_part 
               ;

 1704       (ASSIGN_OP | DEFAULT)
     5530      : 'ASSIGN_OP' 
     5531      | 'DEFAULT' 
               ;

 1705       declare_spec+
     5532      : declare_spec 
     5533      | declare_spec+ declare_spec 
               ;

 1706       CONSTANT?
     5534      : 
     5535      | 'CONSTANT' 
               ;

 1707       (RANGE expression '..' expression)
     5536      : 'RANGE' expression '..' expression 
               ;

 1708       (RANGE expression '..' expression)?
     5537      : 
     5538      | (RANGE expression '..' expression) 
               ;

 1709       (',' parameter_spec)
     5539      : ',' parameter_spec 
               ;

 1710       (',' parameter_spec)*
     5540      : 
     5541      | (',' parameter_spec)* (',' parameter_spec) 
               ;

 1711       ('(' parameter_spec (',' parameter_spec)* ')')
     5542      : '(' parameter_spec (',' parameter_spec)* ')' 
               ;

 1712       ('(' parameter_spec (',' parameter_spec)* ')')?
     5543      : 
     5544      | ('(' parameter_spec (',' parameter_spec)* ')') 
               ;

 1713       (RETURN type_spec)
     5545      : 'RETURN' type_spec 
               ;

 1714       (RETURN type_spec)?
     5546      : 
     5547      | (RETURN type_spec) 
               ;

 1715       (IS select_statement)
     5548      : 'IS' select_statement 
               ;

 1716       (IS select_statement)?
     5549      : 
     5550      | (IS select_statement) 
               ;

 1717       IN?
     5551      : 
     5552      | 'IN' 
               ;

 1718       (IN? type_spec)
     5553      : IN? type_spec 
               ;

 1719       (IN? type_spec)?
     5554      : 
     5555      | (IN? type_spec) 
               ;

 1720       (identifier | DEFAULT)
     5556      : identifier 
     5557      | 'DEFAULT' 
               ;

 1721       (',' identifier)
     5558      : ',' identifier 
               ;

 1722       (',' identifier)+
     5559      : (',' identifier) 
     5560      | (',' identifier)+ (',' identifier) 
               ;

 1723       (SERIALLY_REUSABLE | AUTONOMOUS_TRANSACTION | EXCEPTION_INIT '(' exception_name ',' numeric_negative ')' | INLINE '(' id1identifier ',' expression ')' | RESTRICT_REFERENCES '(' (identifier | DEFAULT) (',' identifier)+ ')')
     5561      : 'SERIALLY_REUSABLE' 
     5562      | 'AUTONOMOUS_TRANSACTION' 
     5563      | 'EXCEPTION_INIT' '(' exception_name ',' numeric_negative ')' 
     5564      | 'INLINE' '(' 'id1identifier' ',' expression ')' 
     5565      | 'RESTRICT_REFERENCES' '(' (identifier | DEFAULT) (',' identifier)+ ')' 
               ;

 1724       (',' field_spec)
     5566      : ',' field_spec 
               ;

 1725       (',' field_spec)*
     5567      : 
     5568      | (',' field_spec)* (',' field_spec) 
               ;

 1726       (table_type_def | varray_type_def | record_type_def | ref_cursor_type_def)
     5569      : table_type_def 
     5570      | varray_type_def 
     5571      | record_type_def 
     5572      | ref_cursor_type_def 
               ;

 1727       table_indexed_by_part?
     5573      : 
     5574      | table_indexed_by_part 
               ;

 1728       (idx1INDEXED | idx2INDEX)
     5575      : 'idx1INDEXED' 
     5576      | 'idx2INDEX' 
               ;

 1729       (VARRAY | VARYING ARRAY)
     5577      : 'VARRAY' 
     5578      | 'VARYING' 'ARRAY' 
               ;

 1730       (statement ';' | label_declaration)
     5579      : statement ';' 
     5580      | label_declaration 
               ;

 1731       (statement ';' | label_declaration)+
     5581      : (statement ';' | label_declaration) 
     5582      | (statement ';' | label_declaration)+ (statement ';' | label_declaration) 
               ;

 1732       ';'+
     5583      : ';' 
     5584      | ';'+ ';' 
               ;

 1733       (general_element | bind_variable)
     5585      : general_element 
     5586      | bind_variable 
               ;

 1734       label_name?
     5587      : 
     5588      | label_name 
               ;

 1735       (WHEN condition)
     5589      : 'WHEN' condition 
               ;

 1736       (WHEN condition)?
     5590      : 
     5591      | (WHEN condition) 
               ;

 1737       elsif_part*
     5592      : 
     5593      | elsif_part* elsif_part 
               ;

 1738       else_part?
     5594      : 
     5595      | else_part 
               ;

 1739       label_declaration?
     5596      : 
     5597      | label_declaration 
               ;

 1740       (WHILE condition | FOR cursor_loop_param)
     5598      : 'WHILE' condition 
     5599      | 'FOR' cursor_loop_param 
               ;

 1741       (WHILE condition | FOR cursor_loop_param)?
     5600      : 
     5601      | (WHILE condition | FOR cursor_loop_param) 
               ;

 1742       REVERSE?
     5602      : 
     5603      | 'REVERSE' 
               ;

 1743       expressions?
     5604      : 
     5605      | expressions 
               ;

 1744       ('(' expressions? ')')
     5606      : '(' expressions? ')' 
               ;

 1745       ('(' expressions? ')')?
     5607      : 
     5608      | ('(' expressions? ')') 
               ;

 1746       (cursor_name ('(' expressions? ')')? | '(' select_statement ')')
     5609      : cursor_name ('(' expressions? ')')? 
     5610      | '(' select_statement ')' 
               ;

 1747       (SAVE EXCEPTIONS)
     5611      : 'SAVE' 'EXCEPTIONS' 
               ;

 1748       (SAVE EXCEPTIONS)?
     5612      : 
     5613      | (SAVE EXCEPTIONS) 
               ;

 1749       between_bound?
     5614      : 
     5615      | between_bound 
               ;

 1750       exception_name?
     5616      : 
     5617      | exception_name 
               ;

 1751       expression?
     5618      : 
     5619      | expression 
               ;

 1752       CALL?
     5620      : 
     5621      | 'CALL' 
               ;

 1753       (OR exception_name)
     5622      : 'OR' exception_name 
               ;

 1754       (OR exception_name)*
     5623      : 
     5624      | (OR exception_name)* (OR exception_name) 
               ;

 1755       declare_spec*
     5625      : 
     5626      | declare_spec* declare_spec 
               ;

 1756       (DECLARE declare_spec*)
     5627      : 'DECLARE' declare_spec* 
               ;

 1757       (DECLARE declare_spec*)?
     5628      : 
     5629      | (DECLARE declare_spec*) 
               ;

 1758       using_clause?
     5630      : 
     5631      | using_clause 
               ;

 1759       dynamic_returning_clause?
     5632      : 
     5633      | dynamic_returning_clause 
               ;

 1760       (into_clause using_clause? | using_clause dynamic_returning_clause? | dynamic_returning_clause)
     5634      : into_clause using_clause? 
     5635      | using_clause dynamic_returning_clause? 
     5636      | dynamic_returning_clause 
               ;

 1761       (into_clause using_clause? | using_clause dynamic_returning_clause? | dynamic_returning_clause)?
     5637      : 
     5638      | (into_clause using_clause? | using_clause dynamic_returning_clause? | dynamic_returning_clause) 
               ;

 1762       (RETURNING | RETURN)
     5639      : 'RETURNING' 
     5640      | 'RETURN' 
               ;

 1763       (',' variable_name)
     5641      : ',' variable_name 
               ;

 1764       (',' variable_name)*
     5642      : 
     5643      | (',' variable_name)* (',' variable_name) 
               ;

 1765       (numeric | variable_name)
     5644      : numeric 
     5645      | variable_name 
               ;

 1766       (LIMIT (numeric | variable_name))
     5646      : 'LIMIT' (numeric | variable_name) 
               ;

 1767       (LIMIT (numeric | variable_name))?
     5647      : 
     5648      | (LIMIT (numeric | variable_name)) 
               ;

 1768       (it1INTO variable_name (',' variable_name)* | BULK COLLECT INTO variable_name (',' variable_name)* (LIMIT (numeric | variable_name))?)
     5649      : 'it1INTO' variable_name (',' variable_name)* 
     5650      | 'BULK' 'COLLECT' 'INTO' variable_name (',' variable_name)* (LIMIT (numeric | variable_name))? 
               ;

 1769       (select_statement | expression)
     5651      : select_statement 
     5652      | expression 
               ;

 1770       (SERIALIZABLE | READ COMMITTED)
     5653      : 'SERIALIZABLE' 
     5654      | 'READ' 'COMMITTED' 
               ;

 1771       (READ (ONLY | WRITE) | ISOLATION LEVEL (SERIALIZABLE | READ COMMITTED) | USE ROLLBACK SEGMENT rollback_segment_name)
     5655      : 'READ' (ONLY | WRITE) 
     5656      | 'ISOLATION' 'LEVEL' (SERIALIZABLE | READ COMMITTED) 
     5657      | 'USE' 'ROLLBACK' 'SEGMENT' rollback_segment_name 
               ;

 1772       (READ (ONLY | WRITE) | ISOLATION LEVEL (SERIALIZABLE | READ COMMITTED) | USE ROLLBACK SEGMENT rollback_segment_name)?
     5658      : 
     5659      | (READ (ONLY | WRITE) | ISOLATION LEVEL (SERIALIZABLE | READ COMMITTED) | USE ROLLBACK SEGMENT rollback_segment_name) 
               ;

 1773       (NAME quoted_string)
     5660      : 'NAME' quoted_string 
               ;

 1774       (NAME quoted_string)?
     5661      : 
     5662      | (NAME quoted_string) 
               ;

 1775       (CONSTRAINT | CONSTRAINTS)
     5663      : 'CONSTRAINT' 
     5664      | 'CONSTRAINTS' 
               ;

 1776       (',' constraint_name)
     5665      : ',' constraint_name 
               ;

 1777       (',' constraint_name)*
     5666      : 
     5667      | (',' constraint_name)* (',' constraint_name) 
               ;

 1778       (ALL | constraint_name (',' constraint_name)*)
     5668      : 'ALL' 
     5669      | constraint_name (',' constraint_name)* 
               ;

 1779       WORK?
     5670      : 
     5671      | 'WORK' 
               ;

 1780       (',' expression)
     5672      : ',' expression 
               ;

 1781       (',' expression)?
     5673      : 
     5674      | (',' expression) 
               ;

 1782       (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?)
     5675      : 'CORRUPT_XID' expression 
     5676      | 'CORRUPT_XID_ALL' 
     5677      | expression (',' expression)? 
               ;

 1783       (COMMENT expression | FORCE (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?))
     5678      : 'COMMENT' expression 
     5679      | 'FORCE' (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?) 
               ;

 1784       (COMMENT expression | FORCE (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?))?
     5680      : 
     5681      | (COMMENT expression | FORCE (CORRUPT_XID expression | CORRUPT_XID_ALL | expression (',' expression)?)) 
               ;

 1785       write_clause?
     5682      : 
     5683      | write_clause 
               ;

 1786       (WAIT | NOWAIT)?
     5684      : 
     5685      | (WAIT | NOWAIT) 
               ;

 1787       (IMMEDIATE | BATCH)
     5686      : 'IMMEDIATE' 
     5687      | 'BATCH' 
               ;

 1788       (IMMEDIATE | BATCH)?
     5688      : 
     5689      | (IMMEDIATE | BATCH) 
               ;

 1789       SAVEPOINT?
     5690      : 
     5691      | 'SAVEPOINT' 
               ;

 1790       (TO SAVEPOINT? savepoint_name | FORCE quoted_string)
     5692      : 'TO' SAVEPOINT? savepoint_name 
     5693      | 'FORCE' quoted_string 
               ;

 1791       (TO SAVEPOINT? savepoint_name | FORCE quoted_string)?
     5694      : 
     5695      | (TO SAVEPOINT? savepoint_name | FORCE quoted_string) 
               ;

 1792       (SET STATEMENT_ID '=' quoted_string)
     5696      : 'SET' 'STATEMENT_ID' '=' quoted_string 
               ;

 1793       (SET STATEMENT_ID '=' quoted_string)?
     5697      : 
     5698      | (SET STATEMENT_ID '=' quoted_string) 
               ;

 1794       (INTO tableview_name)
     5699      : 'INTO' tableview_name 
               ;

 1795       (INTO tableview_name)?
     5700      : 
     5701      | (INTO tableview_name) 
               ;

 1796       (select_statement | update_statement | delete_statement | insert_statement | merge_statement)
     5702      : select_statement 
     5703      | update_statement 
     5704      | delete_statement 
     5705      | insert_statement 
     5706      | merge_statement 
               ;

 1797       subquery_factoring_clause?
     5707      : 
     5708      | subquery_factoring_clause 
               ;

 1798       (for_update_clause | order_by_clause | offset_clause | fetch_clause)
     5709      : for_update_clause 
     5710      | order_by_clause 
     5711      | offset_clause 
     5712      | fetch_clause 
               ;

 1799       (for_update_clause | order_by_clause | offset_clause | fetch_clause)*
     5713      : 
     5714      | (for_update_clause | order_by_clause | offset_clause | fetch_clause)* (for_update_clause | order_by_clause | offset_clause | fetch_clause) 
               ;

 1800       (',' factoring_element)
     5715      : ',' factoring_element 
               ;

 1801       (',' factoring_element)*
     5716      : 
     5717      | (',' factoring_element)* (',' factoring_element) 
               ;

 1802       order_by_clause?
     5718      : 
     5719      | order_by_clause 
               ;

 1803       search_clause?
     5720      : 
     5721      | search_clause 
               ;

 1804       cycle_clause?
     5722      : 
     5723      | cycle_clause 
               ;

 1805       (DEPTH | BREADTH)
     5724      : 'DEPTH' 
     5725      | 'BREADTH' 
               ;

 1806       ASC?
     5726      : 
     5727      | 'ASC' 
               ;

 1807       DESC?
     5728      : 
     5729      | 'DESC' 
               ;

 1808       (NULLS FIRST)
     5730      : 'NULLS' 'FIRST' 
               ;

 1809       (NULLS FIRST)?
     5731      : 
     5732      | (NULLS FIRST) 
               ;

 1810       (NULLS LAST)
     5733      : 'NULLS' 'LAST' 
               ;

 1811       (NULLS LAST)?
     5734      : 
     5735      | (NULLS LAST) 
               ;

 1812       (',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)?)
     5736      : ',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)? 
               ;

 1813       (',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)?)*
     5737      : 
     5738      | (',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)?)* (',' column_name ASC? DESC? (NULLS FIRST)? (NULLS LAST)?) 
               ;

 1814       subquery_operation_part*
     5739      : 
     5740      | subquery_operation_part* subquery_operation_part 
               ;

 1815       ALL?
     5741      : 
     5742      | 'ALL' 
               ;

 1816       (UNION ALL? | INTERSECT | MINUS)
     5743      : 'UNION' ALL? 
     5744      | 'INTERSECT' 
     5745      | 'MINUS' 
               ;

 1817       (DISTINCT | UNIQUE | ALL)
     5746      : 'DISTINCT' 
     5747      | 'UNIQUE' 
     5748      | 'ALL' 
               ;

 1818       (DISTINCT | UNIQUE | ALL)?
     5749      : 
     5750      | (DISTINCT | UNIQUE | ALL) 
               ;

 1819       where_clause?
     5751      : 
     5752      | where_clause 
               ;

 1820       hierarchical_query_clause?
     5753      : 
     5754      | hierarchical_query_clause 
               ;

 1821       group_by_clause?
     5755      : 
     5756      | group_by_clause 
               ;

 1822       model_clause?
     5757      : 
     5758      | model_clause 
               ;

 1823       fetch_clause?
     5759      : 
     5760      | fetch_clause 
               ;

 1824       (',' select_list_elements)
     5761      : ',' select_list_elements 
               ;

 1825       (',' select_list_elements)*
     5762      : 
     5763      | (',' select_list_elements)* (',' select_list_elements) 
               ;

 1826       column_alias?
     5764      : 
     5765      | column_alias 
               ;

 1827       (',' table_ref)
     5766      : ',' table_ref 
               ;

 1828       (',' table_ref)*
     5767      : 
     5768      | (',' table_ref)* (',' table_ref) 
               ;

 1829       join_clause*
     5769      : 
     5770      | join_clause* join_clause 
               ;

 1830       (pivot_clause | unpivot_clause)
     5771      : pivot_clause 
     5772      | unpivot_clause 
               ;

 1831       (pivot_clause | unpivot_clause)?
     5773      : 
     5774      | (pivot_clause | unpivot_clause) 
               ;

 1832       flashback_query_clause*
     5775      : 
     5776      | flashback_query_clause* flashback_query_clause 
               ;

 1833       query_partition_clause?
     5777      : 
     5778      | query_partition_clause 
               ;

 1834       (CROSS | NATURAL)
     5779      : 'CROSS' 
     5780      | 'NATURAL' 
               ;

 1835       (CROSS | NATURAL)?
     5781      : 
     5782      | (CROSS | NATURAL) 
               ;

 1836       (INNER | outer_join_type)
     5783      : 'INNER' 
     5784      | outer_join_type 
               ;

 1837       (INNER | outer_join_type)?
     5785      : 
     5786      | (INNER | outer_join_type) 
               ;

 1838       (join_on_part | join_using_part)
     5787      : join_on_part 
     5788      | join_using_part 
               ;

 1839       (join_on_part | join_using_part)*
     5789      : 
     5790      | (join_on_part | join_using_part)* (join_on_part | join_using_part) 
               ;

 1840       (FULL | LEFT | RIGHT)
     5791      : 'FULL' 
     5792      | 'LEFT' 
     5793      | 'RIGHT' 
               ;

 1841       OUTER?
     5794      : 
     5795      | 'OUTER' 
               ;

 1842       (subquery | expressions)
     5796      : subquery 
     5797      | expressions 
               ;

 1843       (subquery | expressions)?
     5798      : 
     5799      | (subquery | expressions) 
               ;

 1844       ('(' (subquery | expressions)? ')')
     5800      : '(' (subquery | expressions)? ')' 
               ;

 1845       (('(' (subquery | expressions)? ')') | expressions)
     5801      : ('(' (subquery | expressions)? ')') 
     5802      | expressions 
               ;

 1846       (SCN | TIMESTAMP)
     5803      : 'SCN' 
     5804      | 'TIMESTAMP' 
               ;

 1847       (SCN | TIMESTAMP | SNAPSHOT)
     5805      : 'SCN' 
     5806      | 'TIMESTAMP' 
     5807      | 'SNAPSHOT' 
               ;

 1848       XML?
     5808      : 
     5809      | 'XML' 
               ;

 1849       (',' pivot_element)
     5810      : ',' pivot_element 
               ;

 1850       (',' pivot_element)*
     5811      : 
     5812      | (',' pivot_element)* (',' pivot_element) 
               ;

 1851       (column_name | paren_column_list)
     5813      : column_name 
     5814      | paren_column_list 
               ;

 1852       (',' ANY)
     5815      : ',' 'ANY' 
               ;

 1853       (',' ANY)*
     5816      : 
     5817      | (',' ANY)* (',' ANY) 
               ;

 1854       (',' pivot_in_clause_element)
     5818      : ',' pivot_in_clause_element 
               ;

 1855       (',' pivot_in_clause_element)*
     5819      : 
     5820      | (',' pivot_in_clause_element)* (',' pivot_in_clause_element) 
               ;

 1856       (subquery | ANY (',' ANY)* | pivot_in_clause_element (',' pivot_in_clause_element)*)
     5821      : subquery 
     5822      | 'ANY' (',' ANY)* 
     5823      | pivot_in_clause_element (',' pivot_in_clause_element)* 
               ;

 1857       (INCLUDE | EXCLUDE)
     5824      : 'INCLUDE' 
     5825      | 'EXCLUDE' 
               ;

 1858       ((INCLUDE | EXCLUDE) NULLS)
     5826      : (INCLUDE | EXCLUDE) 'NULLS' 
               ;

 1859       ((INCLUDE | EXCLUDE) NULLS)?
     5827      : 
     5828      | ((INCLUDE | EXCLUDE) NULLS) 
               ;

 1860       (',' unpivot_in_elements)
     5829      : ',' unpivot_in_elements 
               ;

 1861       (',' unpivot_in_elements)*
     5830      : 
     5831      | (',' unpivot_in_elements)* (',' unpivot_in_elements) 
               ;

 1862       (',' constant)
     5832      : ',' constant 
               ;

 1863       (',' constant)*
     5833      : 
     5834      | (',' constant)* (',' constant) 
               ;

 1864       (constant | '(' constant (',' constant)* ')')
     5835      : constant 
     5836      | '(' constant (',' constant)* ')' 
               ;

 1865       (AS (constant | '(' constant (',' constant)* ')'))
     5837      : 'AS' (constant | '(' constant (',' constant)* ')') 
               ;

 1866       (AS (constant | '(' constant (',' constant)* ')'))?
     5838      : 
     5839      | (AS (constant | '(' constant (',' constant)* ')')) 
               ;

 1867       NOCYCLE?
     5840      : 
     5841      | 'NOCYCLE' 
               ;

 1868       start_part?
     5842      : 
     5843      | start_part 
               ;

 1869       (',' group_by_elements)
     5844      : ',' group_by_elements 
               ;

 1870       (',' group_by_elements)*
     5845      : 
     5846      | (',' group_by_elements)* (',' group_by_elements) 
               ;

 1871       having_clause?
     5847      : 
     5848      | having_clause 
               ;

 1872       (GROUP BY group_by_elements (',' group_by_elements)*)
     5849      : 'GROUP' 'BY' group_by_elements (',' group_by_elements)* 
               ;

 1873       (GROUP BY group_by_elements (',' group_by_elements)*)?
     5850      : 
     5851      | (GROUP BY group_by_elements (',' group_by_elements)*) 
               ;

 1874       (ROLLUP | CUBE)
     5852      : 'ROLLUP' 
     5853      | 'CUBE' 
               ;

 1875       (',' grouping_sets_elements)
     5854      : ',' grouping_sets_elements 
               ;

 1876       (',' grouping_sets_elements)*
     5855      : 
     5856      | (',' grouping_sets_elements)* (',' grouping_sets_elements) 
               ;

 1877       cell_reference_options*
     5857      : 
     5858      | cell_reference_options* cell_reference_options 
               ;

 1878       return_rows_clause?
     5859      : 
     5860      | return_rows_clause 
               ;

 1879       reference_model*
     5861      : 
     5862      | reference_model* reference_model 
               ;

 1880       (IGNORE | KEEP)
     5863      : 'IGNORE' 
     5864      | 'KEEP' 
               ;

 1881       (DIMENSION | SINGLE REFERENCE)
     5865      : 'DIMENSION' 
     5866      | 'SINGLE' 'REFERENCE' 
               ;

 1882       (UPDATED | ALL)
     5867      : 'UPDATED' 
     5868      | 'ALL' 
               ;

 1883       (MAIN main_model_name)
     5869      : 'MAIN' main_model_name 
               ;

 1884       (MAIN main_model_name)?
     5870      : 
     5871      | (MAIN main_model_name) 
               ;

 1885       model_column_partition_part?
     5872      : 
     5873      | model_column_partition_part 
               ;

 1886       (',' model_column)
     5874      : ',' model_column 
               ;

 1887       (',' model_column)*
     5875      : 
     5876      | (',' model_column)* (',' model_column) 
               ;

 1888       (expression | query_block)
     5877      : expression 
     5878      | query_block 
               ;

 1889       model_rules_part?
     5879      : 
     5880      | model_rules_part 
               ;

 1890       (',' model_rules_element)
     5881      : ',' model_rules_element 
               ;

 1891       (',' model_rules_element)*
     5882      : 
     5883      | (',' model_rules_element)* (',' model_rules_element) 
               ;

 1892       (model_rules_element (',' model_rules_element)*)
     5884      : model_rules_element (',' model_rules_element)* 
               ;

 1893       (model_rules_element (',' model_rules_element)*)?
     5885      : 
     5886      | (model_rules_element (',' model_rules_element)*) 
               ;

 1894       (UPDATE | UPSERT ALL?)
     5887      : 'UPDATE' 
     5888      | 'UPSERT' ALL? 
               ;

 1895       (UPDATE | UPSERT ALL?)?
     5889      : 
     5890      | (UPDATE | UPSERT ALL?) 
               ;

 1896       (AUTOMATIC | SEQUENTIAL)
     5891      : 'AUTOMATIC' 
     5892      | 'SEQUENTIAL' 
               ;

 1897       ((AUTOMATIC | SEQUENTIAL) ORDER)
     5893      : (AUTOMATIC | SEQUENTIAL) 'ORDER' 
               ;

 1898       ((AUTOMATIC | SEQUENTIAL) ORDER)?
     5894      : 
     5895      | ((AUTOMATIC | SEQUENTIAL) ORDER) 
               ;

 1899       model_iterate_clause?
     5896      : 
     5897      | model_iterate_clause 
               ;

 1900       until_part?
     5898      : 
     5899      | until_part 
               ;

 1901       SIBLINGS?
     5900      : 
     5901      | 'SIBLINGS' 
               ;

 1902       (',' order_by_elements)
     5902      : ',' order_by_elements 
               ;

 1903       (',' order_by_elements)*
     5903      : 
     5904      | (',' order_by_elements)* (',' order_by_elements) 
               ;

 1904       (FIRST | LAST)
     5905      : 'FIRST' 
     5906      | 'LAST' 
               ;

 1905       (NULLS (FIRST | LAST))
     5907      : 'NULLS' (FIRST | LAST) 
               ;

 1906       (NULLS (FIRST | LAST))?
     5908      : 
     5909      | (NULLS (FIRST | LAST)) 
               ;

 1907       (ROW | ROWS)
     5910      : 'ROW' 
     5911      | 'ROWS' 
               ;

 1908       (FIRST | NEXT)
     5912      : 'FIRST' 
     5913      | 'NEXT' 
               ;

 1909       PERCENT_KEYWORD?
     5914      : 
     5915      | 'PERCENT_KEYWORD' 
               ;

 1910       (expression PERCENT_KEYWORD?)
     5916      : expression PERCENT_KEYWORD? 
               ;

 1911       (expression PERCENT_KEYWORD?)?
     5917      : 
     5918      | (expression PERCENT_KEYWORD?) 
               ;

 1912       (ONLY | WITH TIES)
     5919      : 'ONLY' 
     5920      | 'WITH' 'TIES' 
               ;

 1913       for_update_of_part?
     5921      : 
     5922      | for_update_of_part 
               ;

 1914       for_update_options?
     5923      : 
     5924      | for_update_options 
               ;

 1915       static_returning_clause?
     5925      : 
     5926      | static_returning_clause 
               ;

 1916       error_logging_clause?
     5927      : 
     5928      | error_logging_clause 
               ;

 1917       (',' column_based_update_set_clause)
     5929      : ',' column_based_update_set_clause 
               ;

 1918       (',' column_based_update_set_clause)*
     5930      : 
     5931      | (',' column_based_update_set_clause)* (',' column_based_update_set_clause) 
               ;

 1919       (column_based_update_set_clause (',' column_based_update_set_clause)* | VALUE '(' identifier ')' '=' expression)
     5932      : column_based_update_set_clause (',' column_based_update_set_clause)* 
     5933      | 'VALUE' '(' identifier ')' '=' expression 
               ;

 1920       FROM?
     5934      : 
     5935      | 'FROM' 
               ;

 1921       (single_table_insert | multi_table_insert)
     5936      : single_table_insert 
     5937      | multi_table_insert 
               ;

 1922       (values_clause static_returning_clause? | select_statement)
     5938      : values_clause static_returning_clause? 
     5939      | select_statement 
               ;

 1923       multi_table_element+
     5940      : multi_table_element 
     5941      | multi_table_element+ multi_table_element 
               ;

 1924       (ALL multi_table_element+ | conditional_insert_clause)
     5942      : 'ALL' multi_table_element+ 
     5943      | conditional_insert_clause 
               ;

 1925       values_clause?
     5944      : 
     5945      | values_clause 
               ;

 1926       (ALL | FIRST)
     5946      : 'ALL' 
     5947      | 'FIRST' 
               ;

 1927       (ALL | FIRST)?
     5948      : 
     5949      | (ALL | FIRST) 
               ;

 1928       conditional_insert_when_part+
     5950      : conditional_insert_when_part 
     5951      | conditional_insert_when_part+ conditional_insert_when_part 
               ;

 1929       conditional_insert_else_part?
     5952      : 
     5953      | conditional_insert_else_part 
               ;

 1930       (REGULAR_ID | '(' expressions ')')
     5954      : 'REGULAR_ID' 
     5955      | '(' expressions ')' 
               ;

 1931       merge_insert_clause?
     5956      : 
     5957      | merge_insert_clause 
               ;

 1932       merge_update_clause?
     5958      : 
     5959      | merge_update_clause 
               ;

 1933       (merge_update_clause merge_insert_clause? | merge_insert_clause merge_update_clause?)
     5960      : merge_update_clause merge_insert_clause? 
     5961      | merge_insert_clause merge_update_clause? 
               ;

 1934       (merge_update_clause merge_insert_clause? | merge_insert_clause merge_update_clause?)?
     5962      : 
     5963      | (merge_update_clause merge_insert_clause? | merge_insert_clause merge_update_clause?) 
               ;

 1935       (',' merge_element)
     5964      : ',' merge_element 
               ;

 1936       (',' merge_element)*
     5965      : 
     5966      | (',' merge_element)* (',' merge_element) 
               ;

 1937       merge_update_delete_part?
     5967      : 
     5968      | merge_update_delete_part 
               ;

 1938       (tableview_name | '(' select_statement ')')
     5969      : tableview_name 
     5970      | '(' select_statement ')' 
               ;

 1939       (',' lock_table_element)
     5971      : ',' lock_table_element 
               ;

 1940       (',' lock_table_element)*
     5972      : 
     5973      | (',' lock_table_element)* (',' lock_table_element) 
               ;

 1941       wait_nowait_part?
     5974      : 
     5975      | wait_nowait_part 
               ;

 1942       partition_extension_clause?
     5976      : 
     5977      | partition_extension_clause 
               ;

 1943       UPDATE?
     5978      : 
     5979      | 'UPDATE' 
               ;

 1944       (dml_table_expression_clause | ONLY '(' dml_table_expression_clause ')')
     5980      : dml_table_expression_clause 
     5981      | 'ONLY' '(' dml_table_expression_clause ')' 
               ;

 1945       error_logging_into_part?
     5982      : 
     5983      | error_logging_into_part 
               ;

 1946       error_logging_reject_part?
     5984      : 
     5985      | error_logging_reject_part 
               ;

 1947       (UNLIMITED | expression)
     5986      : 'UNLIMITED' 
     5987      | expression 
               ;

 1948       sample_clause?
     5988      : 
     5989      | sample_clause 
               ;

 1949       (TABLE | THE)
     5990      : 'TABLE' 
     5991      | 'THE' 
               ;

 1950       outer_join_sign?
     5992      : 
     5993      | outer_join_sign 
               ;

 1951       ('(' subquery ')' | '(' expression ')' outer_join_sign?)
     5994      : '(' subquery ')' 
     5995      | '(' expression ')' outer_join_sign? 
               ;

 1952       (READ ONLY | CHECK OPTION (CONSTRAINT constraint_name)?)
     5996      : 'READ' 'ONLY' 
     5997      | 'CHECK' 'OPTION' (CONSTRAINT constraint_name)? 
               ;

 1953       BLOCK?
     5998      : 
     5999      | 'BLOCK' 
               ;

 1954       seed_part?
     6000      : 
     6001      | seed_part 
               ;

 1955       (',' expression)*
     6002      : 
     6003      | (',' expression)* (',' expression) 
               ;

 1956       (IS NOT? logical_operation)
     6004      : 'IS' NOT? logical_operation 
               ;

 1957       (IS NOT? logical_operation)*
     6005      : 
     6006      | (IS NOT? logical_operation)* (IS NOT? logical_operation) 
               ;

 1958       ONLY?
     6007      : 
     6008      | 'ONLY' 
               ;

 1959       (',' type_spec)
     6009      : ',' type_spec 
               ;

 1960       (',' type_spec)*
     6010      : 
     6011      | (',' type_spec)* (',' type_spec) 
               ;

 1961       (NULL_ | NAN | PRESENT | INFINITE | A_LETTER SET | EMPTY | OF TYPE? '(' ONLY? type_spec (',' type_spec)* ')')
     6012      : 'NULL_' 
     6013      | 'NAN' 
     6014      | 'PRESENT' 
     6015      | 'INFINITE' 
     6016      | 'A_LETTER' 'SET' 
     6017      | 'EMPTY' 
     6018      | 'OF' TYPE? '(' ONLY? type_spec (',' type_spec)* ')' 
               ;

 1962       (MEMBER | SUBMULTISET)
     6019      : 'MEMBER' 
     6020      | 'SUBMULTISET' 
               ;

 1963       OF?
     6021      : 
     6022      | 'OF' 
               ;

 1964       (multiset_type (MEMBER | SUBMULTISET) OF? concatenation)
     6023      : 'multiset_type' (MEMBER | SUBMULTISET) OF? concatenation 
               ;

 1965       (multiset_type (MEMBER | SUBMULTISET) OF? concatenation)?
     6024      : 
     6025      | (multiset_type (MEMBER | SUBMULTISET) OF? concatenation) 
               ;

 1966       (LIKE | LIKEC | LIKE2 | LIKE4)
     6026      : 'LIKE' 
     6027      | 'LIKEC' 
     6028      | 'LIKE2' 
     6029      | 'LIKE4' 
               ;

 1967       (ESCAPE concatenation)
     6030      : 'ESCAPE' concatenation 
               ;

 1968       (ESCAPE concatenation)?
     6031      : 
     6032      | (ESCAPE concatenation) 
               ;

 1969       (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?)
     6033      : 'IN' in_elements 
     6034      | 'BETWEEN' between_elements 
     6035      | 'like_type' (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)? 
               ;

 1970       (NOT? (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?))
     6036      : NOT? (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?) 
               ;

 1971       (NOT? (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?))?
     6037      : 
     6038      | (NOT? (IN in_elements | BETWEEN between_elements | like_type (LIKE | LIKEC | LIKE2 | LIKE4) concatenation (ESCAPE concatenation)?)) 
               ;

 1972       (NOT_EQUAL_OP | '<' '>' | '!' '=' | '^' '=')
     6039      : 'NOT_EQUAL_OP' 
     6040      | '<' '>' 
     6041      | '!' '=' 
     6042      | '^' '=' 
               ;

 1973       ('<' | '>')
     6043      : '<' 
     6044      | '>' 
               ;

 1974       '='?
     6045      : 
     6046      | '=' 
               ;

 1975       (',' concatenation)
     6047      : ',' concatenation 
               ;

 1976       (',' concatenation)*
     6048      : 
     6049      | (',' concatenation)* (',' concatenation) 
               ;

 1977       (LOCAL | TIME ZONE concatenation)
     6050      : 'LOCAL' 
     6051      | 'TIME' 'ZONE' concatenation 
               ;

 1978       (AT (LOCAL | TIME ZONE concatenation) | interval_expression)
     6052      : 'AT' (LOCAL | TIME ZONE concatenation) 
     6053      | interval_expression 
               ;

 1979       (AT (LOCAL | TIME ZONE concatenation) | interval_expression)?
     6054      : 
     6055      | (AT (LOCAL | TIME ZONE concatenation) | interval_expression) 
               ;

 1980       (TRUNCATE | ERROR)
     6056      : 'TRUNCATE' 
     6057      | 'ERROR' 
               ;

 1981       (ON OVERFLOW (TRUNCATE | ERROR))
     6058      : 'ON' 'OVERFLOW' (TRUNCATE | ERROR) 
               ;

 1982       (ON OVERFLOW (TRUNCATE | ERROR))?
     6059      : 
     6060      | (ON OVERFLOW (TRUNCATE | ERROR)) 
               ;

 1983       (ASTERISK | SOLIDUS)
     6061      : 'ASTERISK' 
     6062      | 'SOLIDUS' 
               ;

 1984       (PLUS_SIGN | MINUS_SIGN)
     6063      : 'PLUS_SIGN' 
     6064      | 'MINUS_SIGN' 
               ;

 1985       ('(' concatenation ')')
     6065      : '(' concatenation ')' 
               ;

 1986       ('(' concatenation ')')?
     6066      : 
     6067      | ('(' concatenation ')') 
               ;

 1987       ('[' model_expression_element ']')
     6068      : '[' model_expression_element ']' 
               ;

 1988       ('[' model_expression_element ']')?
     6069      : 
     6070      | ('[' model_expression_element ']') 
               ;

 1989       (ANY | expression)
     6071      : 'ANY' 
     6072      | expression 
               ;

 1990       (',' (ANY | expression))
     6073      : ',' (ANY | expression) 
               ;

 1991       (',' (ANY | expression))*
     6074      : 
     6075      | (',' (ANY | expression))* (',' (ANY | expression)) 
               ;

 1992       (',' single_column_for_loop)
     6076      : ',' single_column_for_loop 
               ;

 1993       (',' single_column_for_loop)*
     6077      : 
     6078      | (',' single_column_for_loop)* (',' single_column_for_loop) 
               ;

 1994       (LIKE expression)
     6079      : 'LIKE' expression 
               ;

 1995       (LIKE expression)?
     6080      : 
     6081      | (LIKE expression) 
               ;

 1996       (INCREMENT | DECREMENT)
     6082      : 'INCREMENT' 
     6083      | 'DECREMENT' 
               ;

 1997       (IN '(' expressions? ')' | (LIKE expression)? FROM fromExprexpression TO toExprexpression action_type (INCREMENT | DECREMENT) action_exprexpression)
     6084      : 'IN' '(' expressions? ')' 
     6085      | (LIKE expression)? 'FROM' 'fromExprexpression' 'TO' 'toExprexpression' 'action_type' (INCREMENT | DECREMENT) 'action_exprexpression' 
               ;

 1998       (subquery | '(' expressions? ')')
     6086      : subquery 
     6087      | '(' expressions? ')' 
               ;

 1999       ('-' | '+')
     6088      : '-' 
     6089      | '+' 
               ;

 2000       simple_case_when_part+
     6090      : simple_case_when_part 
     6091      | simple_case_when_part+ simple_case_when_part 
               ;

 2001       case_else_part?
     6092      : 
     6093      | case_else_part 
               ;

 2002       CASE?
     6094      : 
     6095      | 'CASE' 
               ;

 2003       (seq_of_statements | expression)
     6096      : seq_of_statements 
     6097      | expression 
               ;

 2004       searched_case_when_part+
     6098      : searched_case_when_part 
     6099      | searched_case_when_part+ searched_case_when_part 
               ;

 2005       (SOME | EXISTS | ALL | ANY)
     6100      : 'SOME' 
     6101      | 'EXISTS' 
     6102      | 'ALL' 
     6103      | 'ANY' 
               ;

 2006       ('(' select_only_statement ')' | '(' expression ')')
     6104      : '(' select_only_statement ')' 
     6105      | '(' expression ')' 
               ;

 2007       (table_element | standard_function | expression)
     6106      : table_element 
     6107      | standard_function 
     6108      | expression 
               ;

 2008       (',' quoted_string)
     6109      : ',' quoted_string 
               ;

 2009       (',' quoted_string)?
     6110      : 
     6111      | (',' quoted_string) 
               ;

 2010       (LEADING | TRAILING | BOTH)
     6112      : 'LEADING' 
     6113      | 'TRAILING' 
     6114      | 'BOTH' 
               ;

 2011       (LEADING | TRAILING | BOTH)?
     6115      : 
     6116      | (LEADING | TRAILING | BOTH) 
               ;

 2012       quoted_string?
     6117      : 
     6118      | quoted_string 
               ;

 2013       ((LEADING | TRAILING | BOTH)? quoted_string? FROM)
     6119      : (LEADING | TRAILING | BOTH)? quoted_string? 'FROM' 
               ;

 2014       ((LEADING | TRAILING | BOTH)? quoted_string? FROM)?
     6120      : 
     6121      | ((LEADING | TRAILING | BOTH)? quoted_string? FROM) 
               ;

 2015       (single_column_for_loop | multi_column_for_loop)
     6122      : single_column_for_loop 
     6123      | multi_column_for_loop 
               ;

 2016       (single_column_for_loop | multi_column_for_loop)?
     6124      : 
     6125      | (single_column_for_loop | multi_column_for_loop) 
               ;

 2017       (DISTINCT | ALL)
     6126      : 'DISTINCT' 
     6127      | 'ALL' 
               ;

 2018       (DISTINCT | ALL)?
     6128      : 
     6129      | (DISTINCT | ALL) 
               ;

 2019       ((DISTINCT | UNIQUE | ALL)? concatenation)
     6130      : (DISTINCT | UNIQUE | ALL)? concatenation 
               ;

 2020       ((DISTINCT | UNIQUE | ALL)? concatenation)?
     6131      : 
     6132      | ((DISTINCT | UNIQUE | ALL)? concatenation) 
               ;

 2021       (ASTERISK | ((DISTINCT | UNIQUE | ALL)? concatenation)?)
     6133      : 'ASTERISK' 
     6134      | ((DISTINCT | UNIQUE | ALL)? concatenation)? 
               ;

 2022       over_clause?
     6135      : 
     6136      | over_clause 
               ;

 2023       (',' UNSIGNED_INTEGER)
     6137      : ',' 'UNSIGNED_INTEGER' 
               ;

 2024       (',' UNSIGNED_INTEGER)?
     6138      : 
     6139      | (',' UNSIGNED_INTEGER) 
               ;

 2025       (ERROR | TRUNCATE)
     6140      : 'ERROR' 
     6141      | 'TRUNCATE' 
               ;

 2026       ((WITH | WITHOUT) COUNT)
     6142      : (WITH | WITHOUT) 'COUNT' 
               ;

 2027       ((WITH | WITHOUT) COUNT)?
     6143      : 
     6144      | ((WITH | WITHOUT) COUNT) 
               ;

 2028       (ASTERISK | (DISTINCT | UNIQUE | ALL)? concatenation)
     6145      : 'ASTERISK' 
     6146      | (DISTINCT | UNIQUE | ALL)? concatenation 
               ;

 2029       (CAST | XMLCAST)
     6147      : 'CAST' 
     6148      | 'XMLCAST' 
               ;

 2030       (MULTISET '(' subquery ')' | concatenation)
     6149      : 'MULTISET' '(' subquery ')' 
     6150      | concatenation 
               ;

 2031       (numeric | quoted_string)
     6151      : numeric 
     6152      | quoted_string 
               ;

 2032       (',' (numeric | quoted_string))
     6153      : ',' (numeric | quoted_string) 
               ;

 2033       (',' (numeric | quoted_string))?
     6154      : 
     6155      | (',' (numeric | quoted_string)) 
               ;

 2034       (DISTINCT | UNIQUE)
     6156      : 'DISTINCT' 
     6157      | 'UNIQUE' 
               ;

 2035       (DISTINCT | UNIQUE)?
     6158      : 
     6159      | (DISTINCT | UNIQUE) 
               ;

 2036       collect_order_by_part?
     6160      : 
     6161      | collect_order_by_part 
               ;

 2037       within_or_over_part+
     6162      : within_or_over_part 
     6163      | within_or_over_part+ within_or_over_part 
               ;

 2038       (ALL | DISTINCT | UNIQUE)
     6164      : 'ALL' 
     6165      | 'DISTINCT' 
     6166      | 'UNIQUE' 
               ;

 2039       (ALL | DISTINCT | UNIQUE)?
     6167      : 
     6168      | (ALL | DISTINCT | UNIQUE) 
               ;

 2040       (',' CHAR_STRING)
     6169      : ',' 'CHAR_STRING' 
               ;

 2041       (',' CHAR_STRING)?
     6170      : 
     6171      | (',' CHAR_STRING) 
               ;

 2042       listagg_overflow_clause?
     6172      : 
     6173      | listagg_overflow_clause 
               ;

 2043       (WITHIN GROUP '(' order_by_clause ')')
     6174      : 'WITHIN' 'GROUP' '(' order_by_clause ')' 
               ;

 2044       (WITHIN GROUP '(' order_by_clause ')')?
     6175      : 
     6176      | (WITHIN GROUP '(' order_by_clause ')') 
               ;

 2045       (PERCENT_ISOPEN | PERCENT_FOUND | PERCENT_NOTFOUND | PERCENT_ROWCOUNT)
     6177      : 'PERCENT_ISOPEN' 
     6178      | 'PERCENT_FOUND' 
     6179      | 'PERCENT_NOTFOUND' 
     6180      | 'PERCENT_ROWCOUNT' 
               ;

 2046       (CANONICAL | COMPATIBILITY)
     6181      : 'CANONICAL' 
     6182      | 'COMPATIBILITY' 
               ;

 2047       (CANONICAL | COMPATIBILITY)?
     6183      : 
     6184      | (CANONICAL | COMPATIBILITY) 
               ;

 2048       (FIRST_VALUE | LAST_VALUE)
     6185      : 'FIRST_VALUE' 
     6186      | 'LAST_VALUE' 
               ;

 2049       respect_or_ignore_nulls?
     6187      : 
     6188      | respect_or_ignore_nulls 
               ;

 2050       cost_matrix_clause?
     6189      : 
     6190      | cost_matrix_clause 
               ;

 2051       (CHAR_CS | NCHAR_CS)
     6191      : 'CHAR_CS' 
     6192      | 'NCHAR_CS' 
               ;

 2052       (USING (CHAR_CS | NCHAR_CS))
     6193      : 'USING' (CHAR_CS | NCHAR_CS) 
               ;

 2053       (USING (CHAR_CS | NCHAR_CS))?
     6194      : 
     6195      | (USING (CHAR_CS | NCHAR_CS)) 
               ;

 2054       REF?
     6196      : 
     6197      | 'REF' 
               ;

 2055       ('.' general_element_part)
     6198      : '.' general_element_part 
               ;

 2056       ('.' general_element_part)?
     6199      : 
     6200      | ('.' general_element_part) 
               ;

 2057       (XMLCOLATTVAL | XMLFOREST)
     6201      : 'XMLCOLATTVAL' 
     6202      | 'XMLFOREST' 
               ;

 2058       (',' xml_multiuse_expression_element)
     6203      : ',' xml_multiuse_expression_element 
               ;

 2059       (',' xml_multiuse_expression_element)*
     6204      : 
     6205      | (',' xml_multiuse_expression_element)* (',' xml_multiuse_expression_element) 
               ;

 2060       (ENTITYESCAPING | NOENTITYESCAPING)
     6206      : 'ENTITYESCAPING' 
     6207      | 'NOENTITYESCAPING' 
               ;

 2061       (ENTITYESCAPING | NOENTITYESCAPING)?
     6208      : 
     6209      | (ENTITYESCAPING | NOENTITYESCAPING) 
               ;

 2062       (NAME | EVALNAME)
     6210      : 'NAME' 
     6211      | 'EVALNAME' 
               ;

 2063       (NAME | EVALNAME)?
     6212      : 
     6213      | (NAME | EVALNAME) 
               ;

 2064       (',' xml_attributes_clause)
     6214      : ',' xml_attributes_clause 
               ;

 2065       (',' xml_attributes_clause)?
     6215      : 
     6216      | (',' xml_attributes_clause) 
               ;

 2066       (',' expression column_alias?)
     6217      : ',' expression column_alias? 
               ;

 2067       (',' expression column_alias?)*
     6218      : 
     6219      | (',' expression column_alias?)* (',' expression column_alias?) 
               ;

 2068       xml_passing_clause?
     6220      : 
     6221      | xml_passing_clause 
               ;

 2069       (DOCUMENT | CONTENT)
     6222      : 'DOCUMENT' 
     6223      | 'CONTENT' 
               ;

 2070       WELLFORMED?
     6224      : 
     6225      | 'WELLFORMED' 
               ;

 2071       (NAME identifier | EVALNAME concatenation)
     6226      : 'NAME' identifier 
     6227      | 'EVALNAME' concatenation 
               ;

 2072       (',' concatenation)?
     6228      : 
     6229      | (',' concatenation) 
               ;

 2073       (NULL_ ON EMPTY)
     6230      : 'NULL_' 'ON' 'EMPTY' 
               ;

 2074       (NULL_ ON EMPTY)?
     6231      : 
     6232      | (NULL_ ON EMPTY) 
               ;

 2075       (',' xmlroot_param_version_part)
     6233      : ',' xmlroot_param_version_part 
               ;

 2076       (',' xmlroot_param_version_part)?
     6234      : 
     6235      | (',' xmlroot_param_version_part) 
               ;

 2077       (',' xmlroot_param_standalone_part)
     6236      : ',' xmlroot_param_standalone_part 
               ;

 2078       (',' xmlroot_param_standalone_part)?
     6237      : 
     6238      | (',' xmlroot_param_standalone_part) 
               ;

 2079       (AS type_spec)
     6239      : 'AS' type_spec 
               ;

 2080       (AS type_spec)?
     6240      : 
     6241      | (AS type_spec) 
               ;

 2081       xmlserialize_param_enconding_part?
     6242      : 
     6243      | xmlserialize_param_enconding_part 
               ;

 2082       xmlserialize_param_version_part?
     6244      : 
     6245      | xmlserialize_param_version_part 
               ;

 2083       xmlserialize_param_ident_part?
     6246      : 
     6247      | xmlserialize_param_ident_part 
               ;

 2084       (HIDE | SHOW)
     6248      : 'HIDE' 
     6249      | 'SHOW' 
               ;

 2085       ((HIDE | SHOW) DEFAULTS)
     6250      : (HIDE | SHOW) 'DEFAULTS' 
               ;

 2086       ((HIDE | SHOW) DEFAULTS)?
     6251      : 
     6252      | ((HIDE | SHOW) DEFAULTS) 
               ;

 2087       windowing_clause?
     6253      : 
     6254      | windowing_clause 
               ;

 2088       (order_by_clause windowing_clause?)
     6255      : order_by_clause windowing_clause? 
               ;

 2089       (order_by_clause windowing_clause?)?
     6256      : 
     6257      | (order_by_clause windowing_clause?) 
               ;

 2090       (BETWEEN windowing_elements AND windowing_elements | windowing_elements)
     6258      : 'BETWEEN' windowing_elements 'AND' windowing_elements 
     6259      | windowing_elements 
               ;

 2091       (PRECEDING | FOLLOWING)
     6260      : 'PRECEDING' 
     6261      | 'FOLLOWING' 
               ;

 2092       (',' using_element)
     6262      : ',' using_element 
               ;

 2093       (',' using_element)*
     6263      : 
     6264      | (',' using_element)* (',' using_element) 
               ;

 2094       (ASTERISK | using_element (',' using_element)*)
     6265      : 'ASTERISK' 
     6266      | using_element (',' using_element)* 
               ;

 2095       OUT?
     6267      : 
     6268      | 'OUT' 
               ;

 2096       (IN OUT? | OUT)
     6269      : 'IN' OUT? 
     6270      | 'OUT' 
               ;

 2097       (IN OUT? | OUT)?
     6271      : 
     6272      | (IN OUT? | OUT) 
               ;

 2098       AUTO?
     6273      : 
     6274      | 'AUTO' 
               ;

 2099       (',' cost_class_name)
     6275      : ',' cost_class_name 
               ;

 2100       (',' cost_class_name)*
     6276      : 
     6277      | (',' cost_class_name)* (',' cost_class_name) 
               ;

 2101       (MODEL AUTO? | '(' cost_class_name (',' cost_class_name)* ')' VALUES '(' expressions? ')')
     6278      : 'MODEL' AUTO? 
     6279      | '(' cost_class_name (',' cost_class_name)* ')' 'VALUES' '(' expressions? ')' 
               ;

 2102       (BY VALUE)
     6280      : 'BY' 'VALUE' 
               ;

 2103       (BY VALUE)?
     6281      : 
     6282      | (BY VALUE) 
               ;

 2104       (SCHEMACHECK | NOSCHEMACHECK)
     6283      : 'SCHEMACHECK' 
     6284      | 'NOSCHEMACHECK' 
               ;

 2105       (SCHEMACHECK | NOSCHEMACHECK)?
     6285      : 
     6286      | (SCHEMACHECK | NOSCHEMACHECK) 
               ;

 2106       (concatenation column_alias)
     6287      : concatenation column_alias 
               ;

 2107       (concatenation column_alias)?
     6288      : 
     6289      | (concatenation column_alias) 
               ;

 2108       (',' concatenation column_alias)
     6290      : ',' concatenation column_alias 
               ;

 2109       (',' concatenation column_alias)*
     6291      : 
     6292      | (',' concatenation column_alias)* (',' concatenation column_alias) 
               ;

 2110       xml_general_default_part?
     6293      : 
     6294      | xml_general_default_part 
               ;

 2111       (PATH concatenation)
     6295      : 'PATH' concatenation 
               ;

 2112       (PATH concatenation)?
     6296      : 
     6297      | (PATH concatenation) 
               ;

 2113       (FOR ORDINALITY | type_spec (PATH concatenation)? xml_general_default_part?)
     6298      : 'FOR' 'ORDINALITY' 
     6299      | type_spec (PATH concatenation)? xml_general_default_part? 
               ;

 2114       (id_expression | EVALNAME concatenation)
     6300      : id_expression 
     6301      | 'EVALNAME' concatenation 
               ;

 2115       (AS (id_expression | EVALNAME concatenation))
     6302      : 'AS' (id_expression | EVALNAME concatenation) 
               ;

 2116       (AS (id_expression | EVALNAME concatenation))?
     6303      : 
     6304      | (AS (id_expression | EVALNAME concatenation)) 
               ;

 2117       (NO VALUE | expression)
     6305      : 'NO' 'VALUE' 
     6306      | expression 
               ;

 2118       VALUE?
     6307      : 
     6308      | 'VALUE' 
               ;

 2119       (YES | NO VALUE?)
     6309      : 'YES' 
     6310      | 'NO' VALUE? 
               ;

 2120       (SIZE '=' concatenation)
     6311      : 'SIZE' '=' concatenation 
               ;

 2121       (SIZE '=' concatenation)?
     6312      : 
     6313      | (SIZE '=' concatenation) 
               ;

 2122       (ERR | ERRORS)
     6314      : 'ERR' 
     6315      | 'ERRORS' 
               ;

 2123       (SQLERROR | OSERROR)
     6316      : 'SQLERROR' 
     6317      | 'OSERROR' 
               ;

 2124       (SUCCESS | FAILURE | WARNING | variable_name)
     6318      : 'SUCCESS' 
     6319      | 'FAILURE' 
     6320      | 'WARNING' 
     6321      | variable_name 
               ;

 2125       (COMMIT | ROLLBACK)
     6322      : 'COMMIT' 
     6323      | 'ROLLBACK' 
               ;

 2126       (COMMIT | ROLLBACK | NONE)
     6324      : 'COMMIT' 
     6325      | 'ROLLBACK' 
     6326      | 'NONE' 
               ;

 2127       (EXIT (SUCCESS | FAILURE | WARNING | variable_name) (COMMIT | ROLLBACK) | CONTINUE (COMMIT | ROLLBACK | NONE))
     6327      : 'EXIT' (SUCCESS | FAILURE | WARNING | variable_name) (COMMIT | ROLLBACK) 
     6328      | 'CONTINUE' (COMMIT | ROLLBACK | NONE) 
               ;

 2128       (CHAR_STRING | ON | OFF | numeric | regular_id)
     6329      : 'CHAR_STRING' 
     6330      | 'ON' 
     6331      | 'OFF' 
     6332      | numeric 
     6333      | regular_id 
               ;

 2129       (SUBPARTITION | PARTITION)
     6334      : 'SUBPARTITION' 
     6335      | 'PARTITION' 
               ;

 2130       FOR?
     6336      : 
     6337      | 'FOR' 
               ;

 2131       (identifier | quoted_string)
     6338      : identifier 
     6339      | quoted_string 
               ;

 2132       (CURRENT OF cursor_name | expression)
     6340      : 'CURRENT' 'OF' cursor_name 
     6341      | expression 
               ;

 2133       (BULK COLLECT)
     6342      : 'BULK' 'COLLECT' 
               ;

 2134       (BULK COLLECT)?
     6343      : 
     6344      | (BULK COLLECT) 
               ;

 2135       (',' (general_element | bind_variable))
     6345      : ',' (general_element | bind_variable) 
               ;

 2136       (',' (general_element | bind_variable))*
     6346      : 
     6347      | (',' (general_element | bind_variable))* (',' (general_element | bind_variable)) 
               ;

 2137       ('.' id_expression)
     6348      : '.' id_expression 
               ;

 2138       ('.' id_expression)*
     6349      : 
     6350      | ('.' id_expression)* ('.' id_expression) 
               ;

 2139       ('@' link_name)
     6351      : '@' link_name 
               ;

 2140       ('@' link_name)?
     6352      : 
     6353      | ('@' link_name) 
               ;

 2141       ('.' id_expression)?
     6354      : 
     6355      | ('.' id_expression) 
               ;

 2142       identified_by?
     6356      : 
     6357      | identified_by 
               ;

 2143       (INTRODUCER char_set_name)
     6358      : 'INTRODUCER' char_set_name 
               ;

 2144       (INTRODUCER char_set_name)?
     6359      : 
     6360      | (INTRODUCER char_set_name) 
               ;

 2145       (PERIOD link_name)
     6361      : 'PERIOD' link_name 
               ;

 2146       (PERIOD link_name)?
     6362      : 
     6363      | (PERIOD link_name) 
               ;

 2147       (AT_SIGN link_name (PERIOD link_name)? | partition_extension_clause)
     6364      : 'AT_SIGN' link_name (PERIOD link_name)? 
     6365      | partition_extension_clause 
               ;

 2148       (AT_SIGN link_name (PERIOD link_name)? | partition_extension_clause)?
     6366      : 
     6367      | (AT_SIGN link_name (PERIOD link_name)? | partition_extension_clause) 
               ;

 2149       (xml_namespaces_clause ',')
     6368      : xml_namespaces_clause ',' 
               ;

 2150       (xml_namespaces_clause ',')?
     6369      : 
     6370      | (xml_namespaces_clause ',') 
               ;

 2151       (',' xml_table_column)
     6371      : ',' xml_table_column 
               ;

 2152       (',' xml_table_column)*
     6372      : 
     6373      | (',' xml_table_column)* (',' xml_table_column) 
               ;

 2153       (COLUMNS xml_table_column (',' xml_table_column)*)
     6374      : 'COLUMNS' xml_table_column (',' xml_table_column)* 
               ;

 2154       (COLUMNS xml_table_column (',' xml_table_column)*)?
     6375      : 
     6376      | (COLUMNS xml_table_column (',' xml_table_column)*) 
               ;

 2155       (SOURCE | RESOURCE)
     6377      : 'SOURCE' 
     6378      | 'RESOURCE' 
               ;

 2156       (',' argument)
     6379      : ',' argument 
               ;

 2157       (',' argument)*
     6380      : 
     6381      | (',' argument)* (',' argument) 
               ;

 2158       (argument (',' argument)*)
     6382      : argument (',' argument)* 
               ;

 2159       (argument (',' argument)*)?
     6383      : 
     6384      | (argument (',' argument)*) 
               ;

 2160       keep_clause?
     6385      : 
     6386      | keep_clause 
               ;

 2161       (',' argument respect_or_ignore_nulls?)
     6387      : ',' argument respect_or_ignore_nulls? 
               ;

 2162       (',' argument respect_or_ignore_nulls?)*
     6388      : 
     6389      | (',' argument respect_or_ignore_nulls?)* (',' argument respect_or_ignore_nulls?) 
               ;

 2163       (argument respect_or_ignore_nulls? (',' argument respect_or_ignore_nulls?)*)
     6390      : argument respect_or_ignore_nulls? (',' argument respect_or_ignore_nulls?)* 
               ;

 2164       (argument respect_or_ignore_nulls? (',' argument respect_or_ignore_nulls?)*)?
     6391      : 
     6392      | (argument respect_or_ignore_nulls? (',' argument respect_or_ignore_nulls?)*) 
               ;

 2165       (numeric | NULL_)
     6393      : numeric 
     6394      | 'NULL_' 
               ;

 2166       (',' (numeric | NULL_))
     6395      : ',' (numeric | NULL_) 
               ;

 2167       (',' (numeric | NULL_))?
     6396      : 
     6397      | (',' (numeric | NULL_)) 
               ;

 2168       (',' (numeric | NULL_) (',' (numeric | NULL_))?)
     6398      : ',' (numeric | NULL_) (',' (numeric | NULL_))? 
               ;

 2169       (',' (numeric | NULL_) (',' (numeric | NULL_))?)?
     6399      : 
     6400      | (',' (numeric | NULL_) (',' (numeric | NULL_))?) 
               ;

 2170       (tableview_name '.' ASTERISK | ASTERISK | expression column_alias? (',' expression column_alias?)*)
     6401      : tableview_name '.' 'ASTERISK' 
     6402      | 'ASTERISK' 
     6403      | expression column_alias? (',' expression column_alias?)* 
               ;

 2171       (RESPECT | IGNORE)
     6404      : 'RESPECT' 
     6405      | 'IGNORE' 
               ;

 2172       (identifier '=' '>')
     6406      : identifier '=' '>' 
               ;

 2173       (identifier '=' '>')?
     6407      : 
     6408      | (identifier '=' '>') 
               ;

 2174       (PERCENT_ROWTYPE | PERCENT_TYPE)
     6409      : 'PERCENT_ROWTYPE' 
     6410      | 'PERCENT_TYPE' 
               ;

 2175       (PERCENT_ROWTYPE | PERCENT_TYPE)?
     6411      : 
     6412      | (PERCENT_ROWTYPE | PERCENT_TYPE) 
               ;

 2176       precision_part?
     6413      : 
     6414      | precision_part 
               ;

 2177       LOCAL?
     6415      : 
     6416      | 'LOCAL' 
               ;

 2178       (WITH LOCAL? TIME ZONE | CHARACTER SET char_set_name)
     6417      : 'WITH' LOCAL? 'TIME' 'ZONE' 
     6418      | 'CHARACTER' 'SET' char_set_name 
               ;

 2179       (WITH LOCAL? TIME ZONE | CHARACTER SET char_set_name)?
     6419      : 
     6420      | (WITH LOCAL? TIME ZONE | CHARACTER SET char_set_name) 
               ;

 2180       (YEAR | DAY)
     6421      : 'YEAR' 
     6422      | 'DAY' 
               ;

 2181       ('(' expression ')')
     6423      : '(' expression ')' 
               ;

 2182       ('(' expression ')')?
     6424      : 
     6425      | ('(' expression ')') 
               ;

 2183       (MONTH | SECOND)
     6426      : 'MONTH' 
     6427      | 'SECOND' 
               ;

 2184       (numeric | ASTERISK)
     6428      : numeric 
     6429      | 'ASTERISK' 
               ;

 2185       (numeric | numeric_negative)
     6430      : numeric 
     6431      | numeric_negative 
               ;

 2186       (',' (numeric | numeric_negative))
     6432      : ',' (numeric | numeric_negative) 
               ;

 2187       (',' (numeric | numeric_negative))?
     6433      : 
     6434      | (',' (numeric | numeric_negative)) 
               ;

 2188       (CHAR | BYTE)
     6435      : 'CHAR' 
     6436      | 'BYTE' 
               ;

 2189       (CHAR | BYTE)?
     6437      : 
     6438      | (CHAR | BYTE) 
               ;

 2190       PRECISION?
     6439      : 
     6440      | 'PRECISION' 
               ;

 2191       RAW?
     6441      : 
     6442      | 'RAW' 
               ;

 2192       (BINDVAR | ':' UNSIGNED_INTEGER)
     6443      : 'BINDVAR' 
     6444      | ':' 'UNSIGNED_INTEGER' 
               ;

 2193       INDICATOR?
     6445      : 
     6446      | 'INDICATOR' 
               ;

 2194       (INDICATOR? (BINDVAR | ':' UNSIGNED_INTEGER))
     6447      : INDICATOR? (BINDVAR | ':' UNSIGNED_INTEGER) 
               ;

 2195       (INDICATOR? (BINDVAR | ':' UNSIGNED_INTEGER))?
     6448      : 
     6449      | (INDICATOR? (BINDVAR | ':' UNSIGNED_INTEGER)) 
               ;

 2196       ('.' general_element_part)*
     6450      : 
     6451      | ('.' general_element_part)* ('.' general_element_part) 
               ;

 2197       PRIVILEGES?
     6452      : 
     6453      | 'PRIVILEGES' 
               ;

 2198       ANY?
     6454      : 
     6455      | 'ANY' 
               ;

 2199       (ALTER | CREATE | DROP)
     6456      : 'ALTER' 
     6457      | 'CREATE' 
     6458      | 'DROP' 
               ;

 2200       (ALTER | DROP)
     6459      : 'ALTER' 
     6460      | 'DROP' 
               ;

 2201       (CREATE | DROP)
     6461      : 'CREATE' 
     6462      | 'DROP' 
               ;

 2202       (ALTER | CREATE)
     6463      : 'ALTER' 
     6464      | 'CREATE' 
               ;

 2203       PUBLIC?
     6465      : 
     6466      | 'PUBLIC' 
               ;

 2204       (ARCHIVE ADMINISTER | ANY TABLE)
     6467      : 'ARCHIVE' 'ADMINISTER' 
     6468      | 'ANY' 'TABLE' 
               ;

 2205       (ALTER | DROP | EXECUTE)
     6469      : 'ALTER' 
     6470      | 'DROP' 
     6471      | 'EXECUTE' 
               ;

 2206       (ANY | EXTERNAL)
     6472      : 'ANY' 
     6473      | 'EXTERNAL' 
               ;

 2207       (ANY | EXTERNAL)?
     6474      : 
     6475      | (ANY | EXTERNAL) 
               ;

 2208       (CLASS | PROGRAM)
     6476      : 'CLASS' 
     6477      | 'PROGRAM' 
               ;

 2209       GLOBAL?
     6478      : 
     6479      | 'GLOBAL' 
               ;

 2210       (ALTER | DROP | SELECT | COMMENT)
     6480      : 'ALTER' 
     6481      | 'DROP' 
     6482      | 'SELECT' 
     6483      | 'COMMENT' 
               ;

 2211       (ALTER | DROP | SELECT | UPDATE)
     6484      : 'ALTER' 
     6485      | 'DROP' 
     6486      | 'SELECT' 
     6487      | 'UPDATE' 
               ;

 2212       (DELETE | DROP | INSERT)
     6488      : 'DELETE' 
     6489      | 'DROP' 
     6490      | 'INSERT' 
               ;

 2213       (ALTER | DELETE | DROP | INSERT | SELECT | UPDATE)
     6491      : 'ALTER' 
     6492      | 'DELETE' 
     6493      | 'DROP' 
     6494      | 'INSERT' 
     6495      | 'SELECT' 
     6496      | 'UPDATE' 
               ;

 2214       (DROP | UPDATE)
     6497      : 'DROP' 
     6498      | 'UPDATE' 
               ;

 2215       (CREATE | ALTER | DROP)
     6499      : 'CREATE' 
     6500      | 'ALTER' 
     6501      | 'DROP' 
               ;

 2216       (ALTER | DROP | GRANT)
     6502      : 'ALTER' 
     6503      | 'DROP' 
     6504      | 'GRANT' 
               ;

 2217       (ALTER | DROP | SELECT)
     6505      : 'ALTER' 
     6506      | 'DROP' 
     6507      | 'SELECT' 
               ;

 2218       (ALTER | CREATE | RESTRICTED)
     6508      : 'ALTER' 
     6509      | 'CREATE' 
     6510      | 'RESTRICTED' 
               ;

 2219       (ALTER | DROP | USE)
     6511      : 'ALTER' 
     6512      | 'DROP' 
     6513      | 'USE' 
               ;

 2220       (ALTER | BACKUP | COMMENT | DELETE | DROP | INSERT | LOCK | READ | SELECT | UPDATE)
     6514      : 'ALTER' 
     6515      | 'BACKUP' 
     6516      | 'COMMENT' 
     6517      | 'DELETE' 
     6518      | 'DROP' 
     6519      | 'INSERT' 
     6520      | 'LOCK' 
     6521      | 'READ' 
     6522      | 'SELECT' 
     6523      | 'UPDATE' 
               ;

 2221       (CREATE | ALTER | DROP | MANAGE | UNLIMITED)
     6524      : 'CREATE' 
     6525      | 'ALTER' 
     6526      | 'DROP' 
     6527      | 'MANAGE' 
     6528      | 'UNLIMITED' 
               ;

 2222       (ALTER | DROP | EXECUTE | UNDER)
     6529      : 'ALTER' 
     6530      | 'DROP' 
     6531      | 'EXECUTE' 
     6532      | 'UNDER' 
               ;

 2223       (DROP | UNDER | MERGE)
     6533      : 'DROP' 
     6534      | 'UNDER' 
     6535      | 'MERGE' 
               ;

 2224       (ANALYZE | AUDIT)
     6536      : 'ANALYZE' 
     6537      | 'AUDIT' 
               ;

 2225       OBJECT?
     6538      : 
     6539      | 'OBJECT' 
               ;

 2226       (DICTIONARY | TRANSACTION)
     6540      : 'DICTIONARY' 
     6541      | 'TRANSACTION' 
               ;

 2227       (quoted_string | bind_variable)
     6542      : quoted_string 
     6543      | bind_variable 
               ;

 2228       (AT TIME ZONE quoted_string)
     6544      : 'AT' 'TIME' 'ZONE' quoted_string 
               ;

 2229       (AT TIME ZONE quoted_string)?
     6545      : 
     6546      | (AT TIME ZONE quoted_string) 
               ;

 2230       (quoted_string | bind_variable | general_element_part)
     6547      : quoted_string 
     6548      | bind_variable 
     6549      | general_element_part 
               ;

 2231       (YEAR | MONTH | DAY | HOUR | MINUTE | SECOND)
     6550      : 'YEAR' 
     6551      | 'MONTH' 
     6552      | 'DAY' 
     6553      | 'HOUR' 
     6554      | 'MINUTE' 
     6555      | 'SECOND' 
               ;

 2232       (UNSIGNED_INTEGER | bind_variable)
     6556      : 'UNSIGNED_INTEGER' 
     6557      | bind_variable 
               ;

 2233       (',' (UNSIGNED_INTEGER | bind_variable))
     6558      : ',' (UNSIGNED_INTEGER | bind_variable) 
               ;

 2234       (',' (UNSIGNED_INTEGER | bind_variable))?
     6559      : 
     6560      | (',' (UNSIGNED_INTEGER | bind_variable)) 
               ;

 2235       ('(' (UNSIGNED_INTEGER | bind_variable) (',' (UNSIGNED_INTEGER | bind_variable))? ')')
     6561      : '(' (UNSIGNED_INTEGER | bind_variable) (',' (UNSIGNED_INTEGER | bind_variable))? ')' 
               ;

 2236       ('(' (UNSIGNED_INTEGER | bind_variable) (',' (UNSIGNED_INTEGER | bind_variable))? ')')?
     6562      : 
     6563      | ('(' (UNSIGNED_INTEGER | bind_variable) (',' (UNSIGNED_INTEGER | bind_variable))? ')') 
               ;

 2237       ('(' (UNSIGNED_INTEGER | bind_variable) ')')
     6564      : '(' (UNSIGNED_INTEGER | bind_variable) ')' 
               ;

 2238       ('(' (UNSIGNED_INTEGER | bind_variable) ')')?
     6565      : 
     6566      | ('(' (UNSIGNED_INTEGER | bind_variable) ')') 
               ;

 2239       (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?)
     6567      : 'DAY' 
     6568      | 'HOUR' 
     6569      | 'MINUTE' 
     6570      | 'SECOND' ('(' (UNSIGNED_INTEGER | bind_variable) ')')? 
               ;

 2240       (TO (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?))
     6571      : 'TO' (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?) 
               ;

 2241       (TO (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?))?
     6572      : 
     6573      | (TO (DAY | HOUR | MINUTE | SECOND ('(' (UNSIGNED_INTEGER | bind_variable) ')')?)) 
               ;

/* End of PLSQL grammar 


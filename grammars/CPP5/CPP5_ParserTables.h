
////////////////////////////////////////////////////////////////////////////////
//
//    CPP5_ParserTables.h (generated by LRSTAR 24.0.017)

      #pragma once

      #undef  GRAMMAR
      #undef  PARSER
      #undef  PARSER_TABLES
      #undef  LEXER
      #undef  ACTIONS
      #undef  TERM_ACTIONS
      #undef  NODE_ACTIONS
      #undef  INSENSITIVE
      #undef  LOOKAHEADS
      #undef  DEBUG_PARSER
      #undef  DEBUG_TRACE
      #undef  MAKE_AST
      #undef  EXPECTING
      #undef  REVERSABLE
      #undef  SEMANTICS
      #undef  ND_PARSING
      #undef  ND_THREADS

      #define GRAMMAR      "CPP5"
      #define PARSER        CPP5_Parser
      #define PARSER_TABLES CPP5_ParserTables
      #define LEXER         CPP5_Lexer
      #define LOOKAHEADS    1
      #define EXPECTING


      #define TOP_DOWN  0
      #define PASS_OVER 1
      #define BOTTOM_UP 2

      class CPP5_ParserTables
      {
         friend class CPP5_Parser;
         public:
         static const char *term_symb[   103]; // Terminal symbols of the grammar.
         static const char *head_symb[   164]; // Nonterminal symbols of the grammar.
         static const uchar  head_numb[   643]; // Head symbol number for a production.
         static const ushort f_tail   [   644]; // First tail in a production.
         static const short  tail     [  1532]; // Tail symbol number.

         private:
         static const uchar  Bm[   685]       ; // Boolean matrix.
         static const ushort Br[   701]       ; // Boolean matrix row.
         static const uchar  Bc[   103]       ; // Boolean matrix column.
         static const uchar Bf[   103]       ; // Boolean matrix filter/mask.
         static const short  Tm[  6334]       ; // Terminal transition matrix.
         static const ushort Tr[   701]       ; // Terminal transition matrix row.
         static const uchar  Tc[   103]       ; // Terminal transition matrix column.
         static const short  Nm[ 15764]       ; // Nonterminal transition matrix.
         static const ushort Nr[   701]       ; // Nonterminal transition matrix row.
         static const uchar  Nc[   643]       ; // Nonterminal transition matrix column.
         static const ushort Rm[   834]       ; // Reduction matrix.
         static const short  Rr[   701]       ; // Reduction matrix row.
         static const uchar  Rc[   103]       ; // Reduction matrix column.
         static const char   PL[   643]       ; // Production length minus one.
      };

//
////////////////////////////////////////////////////////////////////////////////


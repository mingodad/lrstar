// Generated by LRSTAR 24.0.017
// DO NOT EDIT.

#if !defined(__verilog__ParserTables_INSTANTIATE)
#define __verilog__ParserTables_INSTANTIATE

// Include this file only once in a project.
//  It instantiates a parser.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_term_symb = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_head_symb = 230;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_tact_name = 2;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_node_name = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_text_str = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_head_numb = 521;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_f_tail = 522;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_tail = 1093;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_arga = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_argx = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_argy = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Bm = 505;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Br = 569;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Bc = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Bf = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Tm = 1592;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Tr = 569;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Tc = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Nm = 3577;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Nr = 569;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Nc = 521;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Rm = 153;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Rr = 569;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_Rc = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_PL = 521;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nd_fterm = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nd_term = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nd_faction = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nd_action = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_tact_numb = 177;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_node_numb = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nact_numb = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_reverse = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_terms = 177; // Number of terminals.

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_heads      =  230; // Number of nonterminals.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_prods = 521; // Number of productions.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_states = 569; // Number of states.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::accept_state = 568; // Accept state.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_termactns = 2; // Number of terminal actions.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nodenames = 0; // Number of node names.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::n_nodeactns = 0; // Number of node actions.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::eof_symb = 1; // <eof> symbol number.
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const int templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::err_used = 0; // <error> used in grammar?

// Terminal symbols of the grammar.
static const char *term_symb_[177] = {
   "<error>",
   "<eof>",
   "<output_symbol>",
   "<level_symbol>",
   "<edge_symbol>",
   "<symtem_name_of_task>",
   "<scalar_constant>",
   "<string>",
   "<size_base>",
   "<number>",
   "<decimal_number>",
   "<real_number>",
   "<name_of_system_function>",
   "<identifier>",
   "\'module\'",
   "{identifier}",
   "\';\'",
   "\'endmodule\'",
   "\'macromodule\'",
   "\'(\'",
   "\',\'",
   "\')\'",
   "\'.\'",
   "\'{\'",
   "\'}\'",
   "\'[\'",
   "\']\'",
   "\':\'",
   "\'primitive\'",
   "\'endprimitive\'",
   "\'initial\'",
   "\'=\'",
   "\'1\'b0\'",
   "\'1\'b1\'",
   "\'1\'bx\'",
   "\'1\'",
   "\'0\'",
   "\'table\'",
   "\'endtable\'",
   "\'-\'",
   "\'task\'",
   "\'endtask\'",
   "\'function\'",
   "\'endfunction\'",
   "\'integer\'",
   "\'real\'",
   "\'parameter\'",
   "\'input\'",
   "\'output\'",
   "\'inout\'",
   "\'trireg\'",
   "\'wire\'",
   "\'tri\'",
   "\'tri1\'",
   "\'supply0\'",
   "\'wand\'",
   "\'triand\'",
   "\'tri0\'",
   "\'supply1\'",
   "\'wor\'",
   "\'trior\'",
   "\'scalared\'",
   "\'vectored\'",
   "\'reg\'",
   "\'time\'",
   "\'event\'",
   "\'assign\'",
   "\'defparam\'",
   "\'small\'",
   "\'medium\'",
   "\'large\'",
   "\'strong0\'",
   "\'pull0\'",
   "\'weak0\'",
   "\'highz0\'",
   "\'strong1\'",
   "\'pull1\'",
   "\'weak1\'",
   "\'highz1\'",
   "\'and\'",
   "\'nand\'",
   "\'or\'",
   "\'nor\'",
   "\'xor\'",
   "\'xnor\'",
   "\'buf\'",
   "\'bufif0\'",
   "\'bufif1\'",
   "\'not\'",
   "\'notif0\'",
   "\'notif1\'",
   "\'pulldown\'",
   "\'pullup\'",
   "\'nmos\'",
   "\'rnmos\'",
   "\'pmos\'",
   "\'rpmos\'",
   "\'cmos\'",
   "\'rcmos\'",
   "\'tran\'",
   "\'rtran\'",
   "\'tranif0\'",
   "\'rtranif0\'",
   "\'tranif1\'",
   "\'rtranif1\'",
   "\'#\'",
   "\'always\'",
   "\'if\'",
   "\'else\'",
   "\'case\'",
   "\'endcase\'",
   "\'casex\'",
   "\'casez\'",
   "\'forever\'",
   "\'repeat\'",
   "\'while\'",
   "\'for\'",
   "\'wait\'",
   "\'->\'",
   "\'disable\'",
   "\'force\'",
   "\'release\'",
   "\'deassign\'",
   "\'<=\'",
   "\'default\'",
   "\'begin\'",
   "\'end\'",
   "\'fork\'",
   "\'join\'",
   "\'specify\'",
   "\'endspecify\'",
   "\'specparam\'",
   "\'=>\'",
   "\'*>\'",
   "\'$setup\'",
   "\'$hold\'",
   "\'$period\'",
   "\'$width\'",
   "\'$skew\'",
   "\'$recovery\'",
   "\'$setuphold\'",
   "\'&&&\'",
   "\'posedge\'",
   "\'negedge\'",
   "\'edge\'",
   "\'01\'",
   "\'10\'",
   "\'0x\'",
   "\'x1\'",
   "\'1x\'",
   "\'x0\'",
   "\'~\'",
   "\'==\'",
   "\'===\'",
   "\'!=\'",
   "\'!==\'",
   "\'+\'",
   "\'?\'",
   "\'!\'",
   "\'&\'",
   "\'~&\'",
   "\'|\'",
   "\'~|\'",
   "\'^\'",
   "\'~^\'",
   "\'^~\'",
   "\'*\'",
   "\'/\'",
   "\'%\'",
   "\'>>\'",
   "\'<<\'",
   "\'<\'",
   "\'>\'",
   "\'>=\'",
   "\'&&\'",
   "\'||\'",
   "\'@\'",
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_term_symb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::term_symb = &term_symb_[0];

// Nonterminal symbols of the grammar.
static const char *head_symb_[230] = {
   "source_text",
   "description",
   "module",
   "name_of_module",
   "list_of_ports",
   "port",
   "port_expression",
   "port_reference",
   "name_of_port",
   "module_item",
   "UDP",
   "UDP_declaration",
   "UDP_initial_statement",
   "init_val",
   "output_terminal_name",
   "table_definition",
   "table_entries",
   "combinational_entry",
   "sequential_entry",
   "input_list",
   "level_input_list",
   "edge_input_list",
   "edge",
   "state",
   "next_state",
   "OUTPUT_SYMBOL",
   "LEVEL_SYMBOL",
   "EDGE_SYMBOL",
   "task",
   "name_of_decld_task",
   "function",
   "range_or_type",
   "tf_declaration",
   "parameter_declaration",
   "list_of_param_assignments",
   "param_assignment",
   "input_declaration",
   "output_declaration",
   "inout_declaration",
   "net_declaration",
   "NETTYPE",
   "expandrange",
   "reg_declaration",
   "time_declaration",
   "integer_declaration",
   "real_declaration",
   "event_declaration",
   "continuous_assign",
   "parameter_override",
   "list_of_variables",
   "name_of_variable",
   "list_of_register_variables",
   "register_decl",
   "name_of_register",
   "name_of_memory",
   "name_of_event",
   "charge_strength",
   "drive_strength",
   "STRENGTH0",
   "STRENGTH1",
   "range",
   "list_of_assignments",
   "gate_declaration",
   "GATETYPE",
   "gate_instance",
   "name_of_gate_instance",
   "UDP_instantiation",
   "name_of_UDP",
   "UDP_instance",
   "name_of_UDP_instance",
   "terminal",
   "module_instantiation",
   "parameter_value_assignment",
   "module_instance",
   "name_of_instance",
   "list_of_module_connections",
   "module_port_connection",
   "named_port_connection",
   "initial_statement",
   "always_statement",
   "statement_or_null",
   "statement",
   "name_of_task_or_block",
   "name_of_task",
   "assignment",
   "blocking_assignment",
   "non_blocking_assignment",
   "case_item",
   "seq_block",
   "par_block",
   "name_of_block",
   "block_declaration",
   "task_enable",
   "system_task_enable",
   "system_name_of_task",
   "specify_block",
   "specify_item",
   "specparam_declaration",
   "path_declaration",
   "path_description",
   "list_of_path_inputs",
   "list_of_path_outputs",
   "specify_input_terminal_descriptor",
   "specify_output_terminal_descriptor",
   "input_identifier",
   "output_identifier",
   "path_delay_value",
   "path_delay_expression",
   "constant_mintypmax_expression",
   "system_timing_check",
   "timing_check_event",
   "specify_terminal_descriptor",
   "controlled_timing_check_event",
   "timing_check_event_control",
   "edge_control_specifier",
   "edge_descriptor",
   "timing_check_condition",
   "SCALAR_EXPRESSION",
   "timing_check_limit",
   "scalar_constant",
   "notify_register",
   "level_sensitive_path_declaration",
   "conditional_port_expression",
   "polarity_operator",
   "edge_sensitive_path_declaration",
   "data_source_expression",
   "sdpd",
   "sdpd_conditional_expression",
   "lvalue",
   "constant_expression",
   "mintypmax_expression",
   "expression",
   "UNARY_OPERATOR",
   "BINARY_OPERATOR",
   "STRING",
   "primary",
   "number",
   "SIZE_BASE",
   "NUMBER",
   "DECIMAL_NUMBER",
   "REAL_NUMBER",
   "concatenation",
   "multiple_concatenation",
   "function_call",
   "name_of_function",
   "name_of_system_function",
   "identifier",
   "IDENTIFIER",
   "delay",
   "delay_control",
   "event_control",
   "event_expression",
   "SCALAR_EVENT_EXPRESSION",
   "description*",
   "list_of_ports?",
   "module_item*",
   "(',' port)",
   "(',' port)*",
   "port_expression?",
   "(',' port_reference)",
   "(',' port_reference)*",
   "(',' name_of_variable)",
   "(',' name_of_variable)*",
   "UDP_declaration+",
   "UDP_initial_statement?",
   "combinational_entry+",
   "sequential_entry+",
   "LEVEL_SYMBOL+",
   "LEVEL_SYMBOL*",
   "tf_declaration*",
   "range_or_type?",
   "tf_declaration+",
   "(',' param_assignment)",
   "(',' param_assignment)*",
   "range?",
   "expandrange?",
   "delay?",
   "charge_strength?",
   "(',' name_of_event)",
   "(',' name_of_event)*",
   "drive_strength?",
   "(',' register_decl)",
   "(',' register_decl)*",
   "('=' constant_expression)?",
   "(',' assignment)",
   "(',' assignment)*",
   "(',' gate_instance)",
   "(',' gate_instance)*",
   "name_of_gate_instance?",
   "(',' terminal)",
   "(',' terminal)*",
   "(',' UDP_instance)",
   "(',' UDP_instance)*",
   "name_of_UDP_instance?",
   "parameter_value_assignment?",
   "(',' module_instance)",
   "(',' module_instance)*",
   "(',' expression)",
   "(',' expression)+",
   "list_of_module_connections?",
   "(',' module_port_connection)",
   "(',' module_port_connection)*",
   "(',' named_port_connection)",
   "(',' named_port_connection)*",
   "expression?",
   "case_item+",
   "(',' expression)*",
   "':'?",
   "statement*",
   "block_declaration*",
   "(',' expression?)",
   "(',' expression?)*",
   "specify_item*",
   "(',' specify_input_terminal_descriptor)",
   "(',' specify_input_terminal_descriptor)*",
   "(',' specify_output_terminal_descriptor)",
   "(',' specify_output_terminal_descriptor)*",
   "(',' notify_register)?",
   "(',' constant_expression ',' notify_register)?",
   "timing_check_event_control?",
   "('&&&' timing_check_condition)?",
   "(',' edge_descriptor)",
   "(',' edge_descriptor)*",
   "polarity_operator?",
   "('if' '(' expression ')')?",
   "(expression (',' expression)*)?",
   "('.' IDENTIFIER)",
   "('.' IDENTIFIER)*",
   "(',' mintypmax_expression)?",
   "(',' mintypmax_expression (',' mintypmax_expression)?)?",
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_head_symb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::head_symb = &head_symb_[0];

// Terninal action names found in the grammar ...
static const char *tact_name_[2] = {
   "error",
   "lookup",
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_tact_name *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::tact_name = &tact_name_[0];

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_node_name *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::node_name = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_text_str *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::text_str = 0;

// Head symbol numbers for the productions.
static const uint8 head_numb_[521] = {
       0,     1,     1,     2,     2,     3,     4,     5,     5,     6, 
       6,     7,     7,     7,     8,     9,     9,     9,     9,     9, 
       9,     9,     9,     9,     9,     9,     9,     9,     9,     9, 
       9,     9,     9,     9,     9,    10,    11,    11,    11,    12, 
      13,    13,    13,    13,    13,    14,    15,    16,    16,    17, 
      18,    19,    19,    20,    21,    22,    22,    23,    24,    24, 
      25,    26,    27,    28,    29,    30,    31,    31,    31,    32, 
      32,    32,    32,    32,    32,    32,    32,    32,    33,    34, 
      35,    36,    37,    38,    39,    39,    40,    40,    40,    40, 
      40,    40,    40,    40,    40,    40,    40,    41,    41,    41, 
      42,    43,    44,    45,    46,    47,    47,    48,    49,    50, 
      51,    52,    52,    53,    54,    55,    56,    56,    56,    57, 
      57,    58,    58,    58,    58,    58,    59,    59,    59,    59, 
      59,    60,    61,    62,    63,    63,    63,    63,    63,    63, 
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63, 
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63, 
      64,    65,    66,    67,    68,    69,    70,    71,    72,    72, 
      73,    74,    75,    75,    76,    76,    77,    78,    79,    80, 
      80,    81,    81,    81,    81,    81,    81,    81,    81,    81, 
      81,    81,    81,    81,    81,    81,    81,    81,    81,    81, 
      81,    81,    81,    81,    81,    82,    83,    84,    85,    85, 
      85,    86,    86,    86,    87,    87,    88,    88,    89,    89, 
      90,    91,    91,    91,    91,    91,    91,    92,    92,    93, 
      93,    94,    95,    96,    96,    96,    96,    96,    96,    97, 
      98,    99,    99,   100,   101,   102,   102,   102,   103,   103, 
     103,   104,   105,   106,   106,   106,   106,   107,   108,   109, 
     109,   109,   109,   109,   109,   109,   110,   111,   111,   112, 
     113,   113,   113,   114,   115,   115,   115,   115,   115,   115, 
     116,   116,   116,   116,   116,   116,   117,   118,   119,   120, 
     121,   121,   122,   122,   122,   123,   123,   124,   124,   125, 
     126,   127,   127,   128,   128,   128,   128,   129,   130,   130, 
     131,   131,   131,   131,   131,   132,   132,   132,   132,   132, 
     132,   132,   132,   132,   132,   132,   133,   133,   133,   133, 
     133,   133,   133,   133,   133,   133,   133,   133,   133,   133, 
     133,   133,   133,   133,   133,   133,   133,   133,   134,   135, 
     135,   135,   135,   135,   135,   135,   135,   136,   136,   136, 
     137,   138,   139,   140,   141,   142,   143,   143,   143,   144, 
     145,   146,   147,   148,   148,   148,   149,   149,   149,   150, 
     150,   151,   151,   151,   151,   152,   153,   153,   154,   154, 
     155,   155,   156,   157,   157,   158,   158,   159,   160,   160, 
     161,   162,   162,   163,   163,   164,   164,   165,   165,   166, 
     166,   167,   167,   168,   168,   169,   169,   170,   170,   171, 
     171,   172,   173,   173,   174,   174,   175,   175,   176,   176, 
     177,   177,   178,   179,   179,   180,   180,   181,   182,   182, 
     183,   183,   184,   185,   185,   186,   187,   187,   188,   188, 
     189,   190,   190,   191,   192,   192,   193,   193,   194,   194, 
     195,   196,   196,   197,   198,   198,   199,   199,   200,   201, 
     201,   202,   203,   203,   204,   204,   205,   205,   206,   206, 
     207,   207,   208,   208,   209,   209,   210,   211,   211,   212, 
     212,   213,   214,   214,   215,   216,   216,   217,   217,   218, 
     218,   219,   219,   220,   220,   221,   222,   222,   223,   223, 
     224,   224,   225,   225,   226,   227,   227,   228,   228,   229, 
     229, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_head_numb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::head_numb = &head_numb_[0];

// First tail symbol index into the tail list ...
static const uint16 f_tail_[522] = {
       0,     2,     3,     4,    11,    17,    18,    22,    23,    28, 
      29,    33,    34,    38,    44,    45,    46,    47,    48,    49, 
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59, 
      60,    61,    62,    63,    64,    65,    76,    77,    78,    79, 
      84,    85,    86,    87,    88,    89,    90,    93,    94,    95, 
      99,   105,   106,   107,   108,   111,   115,   116,   117,   118, 
     119,   120,   121,   122,   128,   129,   136,   137,   138,   139, 
     140,   141,   142,   143,   144,   145,   146,   147,   148,   152, 
     154,   157,   161,   165,   169,   174,   180,   181,   182,   183, 
     184,   185,   186,   187,   188,   189,   190,   191,   192,   194, 
     196,   200,   203,   206,   209,   213,   218,   224,   227,   229, 
     230,   232,   234,   240,   241,   242,   243,   246,   249,   252, 
     257,   262,   263,   264,   265,   266,   267,   268,   269,   270, 
     271,   272,   277,   279,   285,   286,   287,   288,   289,   290, 
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300, 
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310, 
     311,   317,   318,   323,   324,   329,   330,   331,   336,   341, 
     343,   348,   349,   351,   353,   353,   354,   359,   361,   363, 
     364,   365,   367,   369,   374,   381,   387,   393,   399,   401, 
     406,   411,   420,   422,   424,   429,   432,   433,   434,   435, 
     436,   439,   442,   445,   448,   451,   452,   453,   456,   459, 
     463,   467,   470,   474,   478,   482,   485,   488,   494,   497, 
     503,   504,   505,   506,   507,   508,   509,   510,   512,   518, 
     520,   526,   527,   530,   531,   532,   533,   534,   535,   536, 
     539,   543,   548,   553,   555,   557,   558,   562,   568,   569, 
     573,   579,   580,   581,   582,   587,   594,   607,   608,   609, 
     619,   629,   637,   646,   656,   666,   679,   682,   683,   684, 
     687,   688,   689,   690,   695,   696,   697,   698,   699,   700, 
     701,   702,   704,   707,   710,   713,   716,   717,   718,   719, 
     720,   733,   746,   747,   749,   752,   753,   754,   768,   782, 
     783,   791,   794,   796,   797,   801,   807,   808,   809,   810, 
     815,   816,   818,   821,   826,   827,   828,   829,   830,   831, 
     832,   833,   834,   835,   836,   837,   838,   839,   840,   841, 
     842,   843,   844,   845,   846,   847,   848,   849,   850,   851, 
     852,   853,   854,   855,   856,   857,   858,   859,   860,   861, 
     862,   863,   867,   873,   874,   875,   876,   879,   880,   882, 
     883,   884,   885,   886,   887,   891,   898,   902,   906,   907, 
     908,   909,   911,   912,   914,   916,   921,   923,   925,   929, 
     931,   935,   936,   938,   940,   943,   944,   944,   946,   946, 
     947,   947,   949,   951,   951,   953,   953,   954,   956,   956, 
     958,   960,   960,   962,   963,   965,   965,   966,   967,   969, 
     970,   972,   973,   975,   975,   977,   977,   979,   979,   980, 
     981,   983,   985,   985,   987,   987,   988,   988,   989,   989, 
     990,   990,   991,   993,   993,   995,   995,   996,   998,   998, 
    1000,  1000,  1002,  1004,  1004,  1006,  1008,  1008,  1010,  1010, 
    1011,  1013,  1013,  1015,  1017,  1017,  1019,  1019,  1020,  1020, 
    1021,  1023,  1023,  1025,  1027,  1028,  1030,  1030,  1031,  1033, 
    1033,  1035,  1037,  1037,  1039,  1039,  1040,  1041,  1043,  1043, 
    1045,  1045,  1046,  1046,  1048,  1048,  1050,  1052,  1052,  1054, 
    1054,  1056,  1058,  1058,  1060,  1062,  1062,  1064,  1064,  1066, 
    1066,  1070,  1070,  1071,  1071,  1073,  1075,  1075,  1077,  1077, 
    1078,  1078,  1082,  1082,  1084,  1086,  1086,  1088,  1088,  1090, 
    1090,  1093, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_f_tail *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::f_tail = &f_tail_[0];

// Tail symbol numbers ...
static const int16 tail_[1093] = {
    -153,     1,    -2,   -10,    14,    -3,  -154,    15,    16,  -155, 
      17,    18,    -3,  -154,    16,  -155,    17,  -147,    19,    -5, 
    -157,    21,  -158,    22,    -8,    19,  -158,    21,    -7,    23, 
      -7,  -160,    24,   -50,   -50,    25,  -129,    26,   -50,    25, 
    -129,    27,  -129,    26,  -147,   -33,   -36,   -37,   -38,   -39, 
     -42,   -43,   -44,   -45,   -46,   -62,   -66,   -71,   -48,   -47, 
     -95,   -78,   -79,   -28,   -30,    28,   -67,    19,   -50,  -162, 
      21,    16,  -163,  -164,   -15,    29,   -37,   -42,   -36,    30, 
     -14,    31,   -13,    16,    32,    33,    34,    35,    36,  -147, 
      37,   -16,    38,  -165,  -166,   -20,    27,   -25,    16,   -19, 
      27,   -23,    27,   -24,    16,   -20,   -21,  -167,  -168,   -22, 
    -168,    19,   -26,   -26,    21,   -27,   -26,   -25,    39,     2, 
       3,     4,    40,   -29,    16,  -169,   -80,    41,  -147,    42, 
    -170,  -144,    16,  -171,   -81,    43,   -60,    44,    45,   -33, 
     -36,   -37,   -38,   -42,   -43,   -44,   -45,   -46,    46,  -170, 
     -34,    16,   -35,  -173,  -146,    31,  -129,    47,  -174,   -49, 
      16,    48,  -174,   -49,    16,    49,  -174,   -49,    16,   -40, 
    -175,  -176,   -49,    16,    50,  -177,  -175,  -176,   -49,    16, 
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60, 
      50,   -60,    61,   -60,    62,   -60,    63,  -174,   -51,    16, 
      64,   -51,    16,    44,   -51,    16,    45,   -51,    16,    65, 
     -55,  -179,    16,    66,  -180,  -176,   -61,    16,   -40,  -180, 
    -175,  -176,   -61,    16,    67,   -34,    16,   -50,  -162,  -147, 
     -52,  -182,   -53,  -183,   -54,    25,  -129,    27,  -129,    26, 
    -147,  -147,  -147,    19,    68,    21,    19,    69,    21,    19, 
      70,    21,    19,   -58,    20,   -59,    21,    19,   -59,    20, 
     -58,    21,    54,    71,    72,    73,    74,    58,    75,    76, 
      77,    78,    25,  -129,    27,  -129,    26,   -84,  -185,   -63, 
    -180,  -176,   -64,  -187,    16,    79,    80,    81,    82,    83, 
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93, 
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103, 
     104,  -188,  -174,    19,   -70,  -190,    21,  -147,   -67,  -180, 
    -176,   -68,  -192,  -147,  -193,    19,   -70,  -190,    21,  -146, 
    -131,    -3,  -194,   -73,  -196,    16,   105,    19,  -131,  -198, 
      21,   105,  -131,   -74,  -174,    19,  -199,    21,  -147,   -76, 
    -201,   -77,  -203,  -131,    22,  -147,    19,  -204,    21,    30, 
     -81,   106,   -81,   -81,    16,   -85,    16,   -86,    16,   107, 
      19,  -131,    21,   -80,   107,    19,  -131,    21,   -80,   108, 
     -80,   109,    19,  -131,    21,  -205,   110,   111,    19,  -131, 
      21,  -205,   110,   112,    19,  -131,    21,  -205,   110,   113, 
     -81,   114,    19,  -131,    21,   -81,   115,    19,  -131,    21, 
     -81,   116,    19,   -84,    16,  -131,    16,   -84,    21,   -81, 
    -149,   -80,  -150,   -80,   117,    19,  -131,    21,   -80,   118, 
     -55,    16,   -88,   -89,   -92,   -93,   119,   -82,    16,   120, 
     -84,    16,   121,  -128,    16,    66,   -84,    16,   122,  -128, 
      16,  -146,  -146,  -128,    31,  -131,  -128,    31,  -131,  -128, 
      31,  -149,  -131,  -128,    31,  -150,  -131,  -128,   123,  -131, 
    -128,   123,  -149,  -131,  -128,   123,  -150,  -131,  -131,  -206, 
      27,   -80,   124,  -207,   -80,   125,  -208,   126,   125,    27, 
     -90,  -209,  -208,   126,   127,  -208,   128,   127,    27,   -90, 
    -209,  -208,   128,  -147,   -33,   -42,   -44,   -45,   -43,   -46, 
     -83,    16,   -83,    19,  -131,  -206,    21,    16,   -94,    16, 
     -94,    19,  -204,  -211,    21,    16,     5,   129,  -212,   130, 
     -97,   -98,  -121,  -124,  -109,  -126,   131,   -34,    16,   -99, 
      31,  -106,    16,    19,  -102,   132,  -103,    21,    19,  -100, 
     133,  -101,    21,  -102,  -214,  -103,  -216,  -104,  -104,    25, 
    -129,    26,  -104,    25,  -129,    27,  -129,    26,  -105,  -105, 
      25,  -129,    26,  -105,    25,  -129,    27,  -129,    26,  -147, 
    -147,  -107,    19,  -107,    20,  -107,    21,    19,  -107,    20, 
    -107,    20,  -107,    21,    19,  -107,    20,  -107,    20,  -107, 
      20,  -107,    20,  -107,    20,  -107,    21,  -108,  -130,   134, 
      19,  -110,    20,  -110,    20,  -118,  -217,    21,    16,   135, 
      19,  -110,    20,  -110,    20,  -118,  -217,    21,    16,   136, 
      19,  -112,    20,  -118,  -217,    21,    16,   137,    19,  -112, 
      20,  -118,    20,  -218,    21,    16,   138,    19,  -110,    20, 
    -110,    20,  -118,  -217,    21,    16,   139,    19,  -112,    20, 
    -110,    20,  -118,  -217,    21,    16,   140,    19,  -110,    20, 
    -110,    20,  -118,    20,  -118,    20,  -217,    21,    16,  -219, 
    -111,  -220,  -102,  -103,  -113,  -111,  -220,   142,   143,  -114, 
     144,    25,  -115,  -222,    26,   145,   146,   147,   148,   149, 
     150,  -117,   151,  -117,  -117,   152,  -119,  -117,   153,  -119, 
    -117,   154,  -119,  -117,   155,  -119,  -131,  -131,     6,  -146, 
     107,    19,  -122,    21,    19,  -111,  -223,   132,  -111,    21, 
      31,  -106,    16,   107,    19,  -122,    21,    19,  -100,  -223, 
     133,  -101,    21,    31,  -106,    16,    -7,  -132,    -7,    -7, 
    -133,    -7,   156,    39,  -224,    19,  -111,   132,    19,  -111, 
    -223,    27,  -125,    21,    21,    31,  -106,    16,  -224,    19, 
    -111,   133,    19,  -101,  -223,    27,  -125,    21,    21,    31, 
    -106,    16,  -131,   107,    19,  -127,    21,   -99,    31,  -106, 
      16,  -131,  -133,  -131,  -132,  -131,  -146,  -146,    25,  -131, 
      26,  -146,    25,  -129,    27,  -129,    26,  -141,  -131,  -131, 
    -131,    27,  -131,    27,  -131,  -135,  -132,  -135,  -131,  -133, 
    -131,  -131,   157,  -131,    27,  -131,  -134,   156,    39,   158, 
     151,   159,   160,   161,   162,   163,   164,   165,   166,   167, 
     168,   156,    39,   169,   170,   171,   123,   172,   173,   152, 
     154,   153,   155,   159,   163,   165,   164,   161,   174,   175, 
       7,  -136,  -146,  -146,    25,  -131,    26,  -146,    25,  -129, 
      27,  -129,    26,  -141,  -142,  -143,    19,  -130,    21,  -139, 
    -137,  -138,  -140,     8,     9,    10,    11,    23,  -131,  -206, 
      24,    23,  -131,    23,  -131,  -206,    24,    24,  -144,    19, 
    -225,    21,  -145,    19,  -225,    21,  -145,  -146,    12,  -147, 
    -227,    13,   105,  -136,   105,  -147,   105,    19,  -130,  -229, 
      21,   105,  -136,   105,  -147,   105,    19,  -130,    21,   176, 
    -147,   176,    19,  -151,    21,  -131,   142,  -152,   143,  -152, 
    -151,    81,  -151,  -131,  -153,    -1,    -4,  -155,    -9,    20, 
      -5,  -157,  -156,    -6,    20,    -7,  -160,  -159,    20,   -50, 
    -162,  -161,   -11,  -163,   -11,   -12,   -17,  -165,   -17,   -18, 
    -166,   -18,   -26,  -167,   -26,  -168,   -26,  -169,   -32,   -31, 
     -32,  -171,   -32,    20,   -35,  -173,  -172,   -60,   -41,  -148, 
     -56,    20,   -55,  -179,  -178,   -57,    20,   -52,  -182,  -181, 
      31,  -129,    20,   -84,  -185,  -184,    20,   -64,  -187,  -186, 
     -65,    20,   -70,  -190,  -189,    20,   -68,  -192,  -191,   -69, 
     -72,    20,   -73,  -196,  -195,    20,  -131,  -197,  -198,  -197, 
     -75,    20,   -76,  -201,  -200,    20,   -77,  -203,  -202,  -131, 
     -87,  -205,   -87,  -206,  -197,    27,  -208,   -81,  -209,   -91, 
      20,  -204,  -211,  -210,  -212,   -96,    20,  -102,  -214,  -213, 
      20,  -103,  -216,  -215,    20,  -120,    20,  -129,    20,  -120, 
    -113,   141,  -116,    20,  -115,  -222,  -221,  -123,   107,    19, 
    -131,    21,  -131,  -206,    22,  -147,  -227,  -226,    20,  -130, 
      20,  -130,  -228, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_tail *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::tail = &tail_[0];

// Arguments for token actions ...
static const int8 arga_[177] = {
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_arga *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::arga = &arga_[0];

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_argx *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::argx = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_argy *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::argy = 0;

// Boolean matrix ...
static const uint8 Bm_[505] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     2, 
       0,     0,     0,     0,     0,     0,     0,     8,     0,     0, 
       0,     0,     0,     0,   128,     0,     0,     0,     0,     0, 
       0,    16,     0,     0,     0,     0,     0,     0,     8,    12, 
       0,     0,     0,     0,     0,    32,     0,     0,     0,     0, 
       0,     0,     0,     3,     0,     0,     0,     0,     0,   128, 
     141,     8,    64,     0,     0,     0,    64,     1,     0,    72, 
       0,     2,   126,    35,     0,     0,   192,     0,     0,     0, 
       0,     0,    64,     0,     0,     4,   224,     3,     0,   141, 
       8,     0,     0,     0,     0,     0,     0,    17,     0,     0, 
       0,     0,     0,     8,     8,     0,     0,     0,     0,     0, 
     128,    32,     0,   128,     0,     0,     0,     0,     0,    64, 
       0,     0,    32,     0,     2,     0,     0,     0,    32,     8, 
       8,     0,     0,   194,     0,     0,     4,     0,     0,     0, 
       0,     0,     8,    64,     0,     0,     4,   224,     3,     0, 
       0,   128,    64,     0,     0,     4,   224,     3,     0,     0, 
      32,     0,   128,     0,     0,     0,     0,    96,    24,     0, 
       0,     0,     0,     0,     4,     0,     0,     0,     0,   128, 
       0,     0,     0,   128,    64,     0,     0,     0,     4,     0, 
       0,     4,     0,    32,    40,     8,     0,     0,   194,     0, 
       0,     4,     0,   160,     0,     0,     0,     0,     0,     0, 
       0,   137,     0,     0,     0,     0,     0,     0,   136,     0, 
       0,     0,     0,     0,     0,     8,     1,     0,     0,    64, 
       0,     0,     0,     0,     0,    64,    64,     0,     0,     4, 
     224,     3,     0,     0,     1,     0,     0,     0,     0,     0, 
      32,     1,     0,     0,     0,     0,     0,   128,   141,     8, 
      64,     0,    64,     0,    64,     5,   128,   141,     8,    64, 
       0,     0,     0,    68,     1,    32,     8,     8,     0,     0, 
     194,    16,     0,     4,    32,     8,     8,     0,     0,   194, 
      32,     0,     4,     0,     0,     0,     2,     8,     1,     0, 
       0,     0,     0,    64,    16,     0,     0,     0,     0,    32, 
       8,     0,     0,     0,   129,    64,     0,     0,     4,   224, 
       3,     0,     0,     0,     0,     0,     0,     0,     1,     0, 
       0,     0,     0,     0,     0,     0,    12,     0,     0,     2, 
      64,     0,     0,     4,   224,     3,     0,     0,     2,     0, 
       0,    32,     0,     0,    32,    40,     8,     0,    30,   195, 
       0,     0,     4,     0,     0,     0,     0,    30,     1,     0, 
       0,   128,   141,    12,    64,     0,     0,     0,    64,     1, 
       0,     0,     0,     0,     0,     0,   128,     1,     0,     0, 
       0,    64,     0,     0,     4,    96,     3,   128,   141,     8, 
      64,     0,     0,     8,    64,     1,     0,     0,     0,     0, 
       6,     1,     0,     0,    32,     8,     8,     0,    30,   195, 
       0,     0,     4,     8,     0,     0,     0,     0,     0,     0, 
       0,    16,   128,   141,     8,    64,     0,     0,    10,    64, 
       1,     0,    32,     0,    64,     0,     0,     4,   224,     3, 
      24,   128,     0,     0,     0,     0,     0,     0,     0,   129, 
       0,     0,     0,     0,     0,     0,     4,     0,     0,     0, 
       0,     0,     0,     0,    64,     0,     0,     0,    64,     0, 
       0,     0,     0,     0,     0,     0,    32,     0,     0,    65, 
       0,     0,     0,     0,     0,     0,     4,     0,     0,    64, 
       0,     0,     0,     0,     0, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Bm *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Bm = &Bm_[0];

// Boolean matrix row (for state)...
static const uint16 Br_[569] = {
       0,     9,    16,    16,    16,    23,    23,    23,    30,    37, 
      44,    16,    44,     0,    43,    16,    16,     0,     0,     0, 
      51,    59,     0,    23,    68,    51,    68,    37,    74,    79, 
       8,    43,     0,    23,    23,    88,    59,    59,    95,   102, 
     109,    23,    23,     0,   114,   120,    43,    43,    43,    23, 
      43,    16,    16,    16,    16,    16,    23,     0,   128,   128, 
      16,   120,    44,    16,    59,    59,    59,    59,   134,    59, 
      59,   140,     7,   149,    16,     7,   114,   158,    59,    43, 
      43,   163,   114,   114,    16,    59,    16,    16,    16,    16, 
     158,   169,    16,    44,     0,   171,     0,    43,    44,    44, 
       0,    44,     0,   171,   114,   178,    44,   185,    43,    44, 
     193,   193,   202,   202,    59,    23,    23,    23,    23,   128, 
      23,    23,    23,   210,   217,    23,    16,    22,    22,    16, 
     102,   102,   102,   102,    44,    16,   221,   227,    79,   149, 
     233,    22,    16,     7,    79,     7,    95,    59,    59,    16, 
     210,   114,    22,   242,   242,    16,    16,     0,    43,    79, 
      59,    44,    44,     0,    44,    44,   114,     7,     7,     7, 
      44,   242,    59,    59,   249,   242,    59,   102,   171,    23, 
      16,    16,    23,    23,    23,    23,    23,    23,    23,    23, 
     257,   257,    59,    59,    59,    79,    59,    59,    59,    59, 
      59,    59,   102,    59,   266,    59,    44,   275,    16,   284, 
      16,    44,    44,   171,    43,    44,    44,    44,     0,    44, 
     293,    59,    59,   242,    59,    79,   149,    44,    59,   102, 
      59,   299,   305,     0,    43,     0,    23,   249,    23,   312, 
     242,    16,    16,    22,    16,    16,    44,     0,    59,    16, 
      44,    18,    43,   321,    59,   329,   329,   329,   329,   329, 
     329,   329,    79,    59,    59,    79,    59,    59,   233,    22, 
      79,     0,    79,   337,   337,   337,   337,   337,   337,    44, 
       7,   346,    79,    59,    59,   337,     0,     0,    59,   354, 
     363,    28,    16,    79,   227,    79,    95,    59,   242,    44, 
     227,     7,     7,   249,    23,   242,    59,    16,   371,    51, 
      44,    59,   242,    44,    59,   380,     0,    43,   242,    16, 
      59,    16,     7,   388,     0,    59,     7,   337,   242,    16, 
      43,   242,   242,    16,   242,   242,   242,   242,    79,    79, 
      79,    79,    59,    51,    51,   193,   397,   397,   397,   128, 
     128,    59,   266,    79,   193,   406,   406,    79,    21,   414, 
     325,   423,   171,    29,    79,     7,    59,    16,    59,    16, 
       0,    79,     7,     0,    79,     0,    16,   227,   102,   242, 
       7,    23,    23,    59,    16,     7,    74,     7,     0,    23, 
      16,    79,     0,    23,    59,   329,     2,   424,   329,    59, 
       2,    59,   329,   329,   329,   227,    44,    44,    59,   322, 
     432,    79,    22,   432,   432,   441,    40,   275,   284,   324, 
      42,   423,    22,   423,   423,    22,   450,    14,   242,     0, 
      51,   242,   242,    23,    59,    16,    16,    74,    59,   242, 
      16,   171,    79,   242,    59,     0,   242,   242,    79,   242, 
     242,   242,   242,   193,   457,   193,   102,    22,   466,   423, 
       0,   423,    44,    59,    51,    59,    59,   134,    59,    51, 
     471,   471,    59,   227,    16,   471,     0,   471,    59,    59, 
     479,    79,    59,   487,    59,     7,    16,   242,    59,    59, 
      59,   193,     7,    44,    22,   423,   423,     7,    59,    22, 
      22,   227,    18,   321,    44,   242,   478,   478,   478,   478, 
     424,   242,    44,     7,    59,   242,   242,   242,   128,   496, 
       7,    51,    59,    59,    16,    16,     7,     7,    44,   242, 
       7,     7,    59,    44,    59,     7,    79,     7,     7,     7, 
      44,    44,    16,    44,    44,   242,   242,     7,     7,   171, 
     171,   242,    59,   171,   171,    59,    59,     7,   242,    59, 
      59,    44,    44,    44,    59,    44,    44,     7,     0, 
      };

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Br *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Br = &Br_[0];

// Boolean matrix column (displacement) ...
static const uint8 Bc_[177] = {
       0,     0,     0,     0,     0,     0,     0,     0,     1,     1, 
       1,     1,     1,     1,     0,     1,     1,     1,     0,     1, 
       2,     2,     2,     2,     2,     2,     2,     2,     0,     3, 
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
       1,     3,     1,     4,     4,     4,     4,     4,     4,     4, 
       1,     1,     1,     1,     4,     1,     1,     1,     4,     1, 
       1,     4,     4,     5,     4,     4,     5,     1,     5,     5, 
       5,     5,     5,     5,     5,     5,     5,     5,     5,     1, 
       1,     5,     1,     1,     1,     1,     1,     1,     1,     1, 
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
       1,     1,     1,     1,     1,     5,     1,     5,     6,     0, 
       6,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     6,     6,     0,     6,     0,     6,     1, 
       6,     6,     6,     7,     6,     6,     6,     6,     6,     6, 
       6,     7,     7,     7,     7,     7,     7,     7,     7,     7, 
       7,     0,     7,     7,     7,     7,     7,     7,     0,     8, 
       0,     8,     0,     8,     8,     8,     8,     8,     8,     8, 
       8,     8,     8,     8,     8,     8,     8, 
      };

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Bc *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Bc = &Bc_[0];

// Boolean matrix filter/mask value ...
static const uint8 Bf_[177] = {
       1,     2,     4,     8,    16,    32,    64,   128,     1,     2, 
       1,     1,     4,     8,     2,    16,    32,    64,     2,   128, 
       1,     2,     4,     8,    16,    32,    64,   128,     2,     1, 
       2,     4,     8,     8,     8,     8,     8,    16,    32,    64, 
      64,   128,    64,     1,     2,     2,     4,     8,     8,    16, 
      64,    64,    64,    64,    32,    64,    64,    64,    64,    64, 
      64,   128,   128,     1,     4,     4,     2,    64,     4,     4, 
       4,     8,     8,     8,     8,    16,    16,    16,    16,    64, 
      64,    32,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64, 
      64,    64,    64,    64,    64,    64,    64,   128,     1,    32, 
       2,    32,    32,    32,    32,    32,    32,    32,    32,    32, 
      32,    32,    32,     4,     8,    32,    16,    32,    32,    64, 
      64,    64,   128,     1,    64,    64,    64,    64,    64,    64, 
      64,     2,     4,     4,     8,    16,    16,    16,    16,    16, 
      16,   128,    32,    32,    32,    32,    64,   128,   128,     1, 
     128,     1,   128,     1,     1,     1,     2,     2,     2,     2, 
       2,     2,     2,     2,     2,     2,     4, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Bf *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Bf = &Bf_[0];

// Terminal transition matrix ...
static const int16 Tm_[1592] = {
    -297,  -298,  -265,     0,  -259,  -256,   532,   549,  -260,     0, 
     534,  -255,  -263,     0,   542,   550,  -264,     0,   551,   553, 
    -290,     0,   552,   554,  -291,     0,   564,   563,  -201,   205, 
     403,   389,  -204,   254,   224,   406,   290,   255,   408,   407, 
     -84,   256,   463,  -375,  -167,   257,   307,  -170,  -105,   258, 
     466,  -241,  -239,   259,   467,  -242,   351,   260,   465,  -164, 
    -106,   261,   474,   512,  -133,   306,   367,   518,   -85,   308, 
     479,  -176,  -228,   368,   486,   -55,  -230,   435,   487,   540, 
     -39,   440,   489,   543,  -104,   202,   244,  -119,     0,   523, 
    -262,   468,   510,   547,  -273,   -82,   199,   398,  -378,  -249, 
     472,   -83,   200,   399,  -380,     0,   519,  -200,   204,   224, 
    -168,     0,   491,  -261,   461,   498,  -254,  -195,   203,   402, 
    -120,  -202,   228,   404,   393,     0,     0,     0,     0,     0, 
     352,  -103,    70,   232,  -367,  -131,   222,   427,  -296,  -107, 
      81,   242,  -116,  -112,   230,   478,   -59,     0,    79,    80, 
    -240,   314,   484,   528,     0,     0,     0,  -316,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   -61,     0, 
     -62,     0,     0,     0,  -360,     0,  -363,     0,  -360,     0, 
    -363,     0,     0,     0,     0,     0,  -372,   -50,    37,   514, 
     548,     0,     0,     0,  -316,  -362,  -372,     0,     0,  -362, 
    -372,     0,     0,     0,     0,  -348,     0,  -360,     0,  -363, 
    -370,     0,     0,     0,     0,   320,     0,   -60,     0,     0, 
       0,     0,     0,    78,     0,     0,     0,     0,  -362,  -372, 
       0,     0,    36,     0,     0,  -295,     0,     0,     0,     0, 
       0,     0,  -348,     0,  -360,     0,  -363,  -370,     0,  -318, 
       0,     0,     0,     0,  -315,     0,  -317,  -319,  -320,  -321, 
    -322,  -323,  -324,  -325,     0,  -362,  -372,     0,     0,    36, 
     -49,    37,   490,   544,     0,     0,     0,  -316,     0,     0, 
       0,     0,     0,     0,     0,     0,   482,     0,     0,     0, 
       0,  -315,     0,  -317,  -319,  -320,  -321,  -322,  -323,  -324, 
    -325,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,  -300,    37,   465,  -160,     0,     0,     0, 
    -316,     0,     0,     0,     0,  -348,     0,  -360,  -186,  -363, 
    -370,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   412,     0,     0,     0,     0,     0,  -362,  -372, 
       0,     0,    36,     0,  -182,   160,   224,  -118,  -247,   311, 
     556,  -316,     0,     0,     0,     0,     0,     0,  -348,  -318, 
    -360,  -187,  -363,  -370,  -315,     0,  -317,  -319,  -320,  -321, 
    -322,  -323,  -324,  -325,     0,   412,  -203,   249,   434,  -511, 
       0,  -362,  -372,  -330,     0,    36,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -348, 
       0,  -360,  -318,  -363,  -370,     0,     0,  -315,     0,  -317, 
    -319,  -320,  -321,  -322,  -323,  -324,  -325,     0,     0,     0, 
       0,     0,  -362,  -372,     0,     0,    36,   363,   397,   456, 
     436,   488,   541,     0,     0,     0,  -330,     0,     0,     0, 
       0,     0,     0,  -318,     0,     0,     0,  -334,  -315,     0, 
    -317,  -319,  -320,  -321,  -322,  -323,  -324,  -325,     0,     0, 
       0,     0,     0,     0,  -229,   194,   378,   348,     0,  -481, 
       0,  -330,     0,     0,     0,     0,  -337,  -339,  -338,  -340, 
    -329,    66,     0,  -341,     0,  -345,     0,  -342,  -344,  -343, 
    -326,  -327,  -328,  -331,  -332,  -333,  -335,  -336,  -346,  -347, 
    -334,   -78,   197,   384,   349,     0,   458,     0,  -330,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -337, 
    -339,  -338,  -340,  -329,    66,  -334,  -341,     0,  -345,     0, 
    -342,  -344,  -343,  -326,  -327,  -328,  -331,  -332,  -333,  -335, 
    -336,  -346,  -347,     0,   -81,   198,   395,   350,     0,   459, 
       0,  -330,     0,     0,  -337,  -339,  -338,  -340,  -329,    66, 
       0,  -341,  -334,  -345,     0,  -342,  -344,  -343,  -326,  -327, 
    -328,  -331,  -332,  -333,  -335,  -336,  -346,  -347,     0,  -100, 
     201,   401,   354,     0,   522,     0,  -330,     0,     0,     0, 
       0,  -337,  -339,  -338,  -340,  -329,    66,     0,  -341,     0, 
    -345,     0,  -342,  -344,  -343,  -326,  -327,  -328,  -331,  -332, 
    -333,  -335,  -336,  -346,  -347,  -334,  -227,   193,   369,   347, 
    -246,   438,     0,  -330,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -337,  -339,  -338,  -340,  -329,    66, 
    -334,  -341,     0,  -345,     0,  -342,  -344,  -343,  -326,  -327, 
    -328,  -331,  -332,  -333,  -335,  -336,  -346,  -347,     0,  -181, 
      91,   245,  -117,  -305,   297,   555,  -330,     0,     0,  -337, 
    -339,  -338,  -340,  -329,    66,     0,  -341,  -334,  -345,     0, 
    -342,  -344,  -343,  -326,  -327,  -328,  -331,  -332,  -333,  -335, 
    -336,  -346,  -347,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,  -337,  -339,  -338,  -340, 
    -329,    66,     0,  -341,     0,  -345,     0,  -342,  -344,  -343, 
    -326,  -327,  -328,  -331,  -332,  -333,  -335,  -336,  -346,  -347, 
    -334,   218,   181,   224,   345,  -250,   148,   559,  -330,     0, 
       0,     0,     0,   383,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -337, 
    -339,  -338,  -340,  -329,    66,     0,  -341,     0,  -345,     0, 
    -342,  -344,  -343,  -326,  -327,  -328,  -331,  -332,  -333,  -335, 
    -336,  -346,  -347,     0,     0,     0,   182,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,  -334,     0,     0,     0,     0,     0,     0,  -232, 
     180,     0,     0,   183,   184,   185,   186,   187,   188,   189, 
       0,     0,     0,  -102,    69,   231,  -366,  -304,   221,   288, 
    -330,  -337,  -339,  -338,  -340,  -329,    66,   132,  -341,     0, 
    -345,     0,  -342,  -344,  -343,  -326,  -327,  -328,  -331,  -332, 
    -333,  -335,  -336,  -346,  -347,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   123,     0,   115,     0, 
     116,     0,   117,   118,   119,   120,   121,   122,   125,   126, 
     129,   130,   131,   133,  -334,     0,   127,  -217,   128,  -219, 
       0,  -231,  -372,     0,     0,   114,     0,   192,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,  -337,  -339,  -338,  -340,  -329,    66,     0, 
    -341,     0,  -345,     0,  -342,  -344,  -343,  -326,  -327,  -328, 
    -331,  -332,  -333,  -335,  -336,  -346,  -347,   124,   136,    37, 
      74,  -356,  -352,   208,   190,  -316,  -126,    79,    80,    50, 
       0,     0,     0,     0,     0,     0,     0,  -122,  -123,  -124, 
    -125,  -127,  -128,  -129,  -130,     0,     0,   352,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   123,     0,  -348,     0,  -360,  -185,  -363,  -370,   376, 
     292,     0,     0,     0,     0,     0,     0,     0,     0,   191, 
     412,     0,     0,  -121,     0,     0,  -362,  -372,   524,   525, 
      36,   -10,    78,   -67,   -68,    46,    47,     0,   283,   284, 
       0,     0,     0,     0,     0,     0,     0,  -318,   506,   507, 
     508,   509,  -315,     0,  -317,  -319,  -320,  -321,  -322,  -323, 
    -324,  -325,  -180,   196,   366,   346,     0,   342,   560,  -330, 
       0,     0,   124,    50,    51,    54,   132,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   123,     0,   115,     0,   116, 
       0,   117,   118,   119,   120,   121,   122,   125,   126,   129, 
     130,   131,   133,  -334,    45,   127,     0,   128,     0,     0, 
    -231,  -372,     0,     0,   114,     0,     0,    52,    53,    46, 
      47,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,    48,  -337,  -339,  -338,  -340,  -329,    66,     0,  -341, 
       0,  -345,     0,  -342,  -344,  -343,  -326,  -327,  -328,  -331, 
    -332,  -333,  -335,  -336,  -346,  -347,   124,  -101,    39,   224, 
      -8,  -351,   210,   248,  -330,     0,     0,     0,    50,    51, 
      54,   132,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     123,     0,   115,     0,   116,     0,   117,   118,   119,   120, 
     121,   122,   125,   126,   129,   130,   131,   133,  -334,    45, 
     127,  -216,   128,  -218,     0,  -231,  -372,     0,     0,   114, 
    -364,   173,    52,    53,    46,    47,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,    48,  -337,  -339,  -338, 
    -340,  -329,    66,     0,  -341,     0,  -345,     0,  -342,  -344, 
    -343,  -326,  -327,  -328,  -331,  -332,  -333,  -335,  -336,  -346, 
    -347,   124,    19,    11,    63,    62,   -13,   148,   176,  -330, 
     -93,     0,     0,    50,    51,    54,    56,    55,     0,     0, 
       0,    -3,     0,     0,     0,     0,     0,     0,     0,  -134, 
    -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144, 
    -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154, 
    -155,  -156,  -157,  -158,  -159,   150,    59,     0,     0,     0, 
       0,     0,     0,   142,    58,     0,     0,    60,     0,    61, 
       0,    49,   -86,  -334,    45,   -87,   -88,   -89,   -90,    57, 
       0,  -372,   381,   382,   147,     0,    67,    52,    53,    46, 
      47,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,    48,  -337,  -339,  -338,  -340,  -329,    66,   -91,  -341, 
     -92,  -345,   -94,  -342,  -344,  -343,  -326,  -327,  -328,  -331, 
    -332,  -333,  -335,  -336,  -346,  -347,   -95,    17,     9,    27, 
      -6,   -12,    64,   172,  -330,   -93,     2,    12,    50,    51, 
      54,    56,    55,   167,   168,   169,    -4,     3,     4,   -35, 
     -40,   -41,   -42,   -43,  -134,  -135,  -136,  -137,  -138,  -139, 
    -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149, 
    -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159, 
      85,    59,   -61,   453,   568,   -44,  -288,  -361,    16,    58, 
     361,   -46,    60,   -63,    61,   -65,    49,   -86,  -334,    45, 
     -87,   -88,   -89,   -90,    57,   -60,  -372,   319,   321,    15, 
    -365,    21,    52,    53,    46,    47,   444,  -270,  -271,   330, 
    -274,  -275,  -276,  -277,  -278,  -279,    48,  -337,  -339,  -338, 
    -340,  -329,    66,   -91,  -341,   -92,  -345,   -94,  -342,  -344, 
    -343,  -326,  -327,  -328,  -331,  -332,  -333,  -335,  -336,  -346, 
    -347,   -95, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Tm *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Tm = &Tm_[0];

// Terminal transition matrix row ...
static const uint16 Tr_[569] = {
    1467,  1467,  1467,  1467,  1467,  1467,  1467,  1342,  1467,  1467, 
    1467,  1467,  1342,  1467,  1467,  1467,  1467,  1467,  1467,  1467, 
    1467,   978,  1467,  1217,  1467,  1342,  1342,  1467,  1467,  1467, 
    1467,  1342,  1467,   853,   131,   978,   978,   978,   978,  1467, 
     139,   139,   139,  1467,  1467,   978,   978,   978,   978,   689, 
     978,  1467,  1467,  1467,  1467,  1467,   139,  1467,  1217,  1217, 
    1467,   978,   978,  1467,   978,   978,   978,   978,  1342,   978, 
     978,  1342,   978,  1342,  1467,  1217,  1342,   978,   978,   978, 
     978,   978,  1342,  1342,  1467,   354,  1467,  1467,  1467,  1467, 
     978,  1467,  1467,  1217,  1467,  1467,  1467,  1217,   853,   131, 
    1467,   139,  1467,  1342,  1342,   761,   689,   978,   853,   354, 
    1092,  1092,   636,   474,   978,  1092,   511,   564,    95,  1217, 
     101,   599,    84,   117,   107,    28,  1467,   978,  1217,  1467, 
    1217,  1217,  1217,  1217,   761,  1467,  1467,  1342,  1467,   853, 
    1217,   131,  1467,   853,  1467,   131,  1217,   978,   978,  1467, 
     121,  1342,   139,   853,   131,  1467,  1467,  1467,   978,  1467, 
     978,   511,   564,  1467,    95,   101,  1342,   139,   689,   354, 
     599,   139,   978,   978,    84,   689,   978,  1217,  1217,   386, 
    1467,  1467,    32,    36,    40,    44,    48,    52,    56,    60, 
     978,   978,   978,   978,   978,  1467,   978,   978,   978,   978, 
     978,   978,  1217,   978,   978,   978,   117,  1217,  1467,  1217, 
    1467,   107,    28,   853,   853,   121,   386,    32,  1467,    36, 
     978,   978,   978,  1217,   978,  1467,   689,    40,   978,  1217, 
     978,   978,   978,  1467,   978,  1467,    64,    44,    68,   761, 
    1342,  1467,  1467,   354,  1467,  1467,    48,  1467,   150,  1467, 
      52,  1467,   131,  1467,   978,  1467,  1467,  1467,  1467,  1467, 
    1467,  1467,  1467,   978,   978,  1467,   978,   978,   853,  1092, 
    1467,  1467,  1467,   761,  1092,   636,   474,   511,   564,    56, 
      95,   101,  1467,   978,   978,   599,  1467,  1467,   978,  1092, 
    1467,  1467,  1467,  1467,   978,  1467,   354,   978,  1092,    60, 
     131,    84,   117,    64,    72,   636,   978,  1467,   978,   107, 
      68,   978,   474,   150,   978,  1342,  1467,   689,   511,  1467, 
     978,  1467,    28,  1467,  1467,   978,   121,   386,   564,  1467, 
     354,    95,   101,  1467,   599,   117,    28,   121,  1467,  1467, 
    1467,  1467,   978,    32,    36,  1092,   978,   978,   978,  1217, 
    1217,   978,   978,  1467,  1092,  1467,  1467,  1467,  1467,  1217, 
    1467,  1467,   131,  1467,  1467,    40,   978,  1467,   978,  1467, 
    1467,  1467,    44,  1467,  1467,  1467,  1467,   139,  1217,   386, 
     978,    76,   439,   978,  1467,    48,   636,    52,  1467,    80, 
    1467,  1467,  1467,   761,   978,  1467,  1467,  1467,  1467,   978, 
    1467,   978,  1467,  1467,  1467,   689,    72,    76,   978,  1467, 
     978,  1467,   474,   270,   313,   439,   978,   853,   853,  1467, 
    1467,  1467,   511,  1467,  1467,   564,   113,  1467,    40,  1467, 
      56,    48,    52,    90,   978,  1467,  1467,    95,   978,    60, 
    1467,   139,  1467,    68,   187,  1467,   150,    72,  1467,    76, 
     439,    80,   270,  1092,   107,  1092,  1217,   511,  1467,  1467, 
    1467,  1467,    80,   978,   313,   978,   978,   978,   978,   113, 
     131,   131,   978,   354,  1467,   131,  1467,   131,   150,   978, 
     978,  1467,   978,    90,   978,    60,  1467,   187,   978,   978, 
     978,  1092,    64,   270,   101,  1467,  1467,    68,   978,   599, 
      84,   761,   978,   978,   313,    72,  1467,  1467,  1467,  1467, 
    1467,    72,   113,   150,   978,    72,    72,     4,  1217,   139, 
      72,     8,   978,   978,  1467,  1467,    76,   439,    90,    12, 
      80,   270,   978,   187,   978,    90,  1467,   187,     4,    12, 
       4,     8,  1467,    12,    16,    16,    20,    16,    20,   689, 
     354,    72,   978,   761,  1092,   150,   150,    24,    24,   150, 
     150,    20,    24,     2,   978,     0,     1,     2,  1467, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Tr *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Tr = &Tr_[0];

// Terminal transition matrix column ...
static const uint8 Tc_[177] = {
      57,    57,    78,    55,    57,    78,    59,    55,    57,    60, 
      78,    59,    60,    79,     9,    10,     0,    19,    20,     1, 
       2,     3,    61,    82,    83,    84,     4,     5,    21,    22, 
      62,     6,    23,    24,    25,    26,    58,    63,    64,     7, 
      65,    66,    67,    68,    85,    86,    72,    87,    88,    99, 
      69,    70,    73,    74,    75,    76,   106,   108,     8,   110, 
     124,     9,    10,    11,    12,    13,    14,    15,    16,    17, 
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27, 
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37, 
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47, 
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57, 
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67, 
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77, 
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87, 
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97, 
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107, 
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117, 
     118,   119,   120,   121,   122,   123,   124, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Tc *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Tc = &Tc_[0];

// Nonterminal transition matrix ...
static const int16 Nm_[3577] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   100,     0,     0,   206,   362,   286, 
     287,  -432,  -397,     0,     0,     0,     0,  -379,  -514,   433, 
    -115,   -64,  -109,  -115,  -220,  -220,   -45,  -115,  -171,  -109, 
    -109,  -109,  -109,   157,  -205,    32,  -109,   219,   134,  -369, 
      32,  -109,   385,  -171,  -252,  -421,  -251,  -294,  -460,     0, 
    -491,   252,   162,     0,   164,   165,  -289,    32,   211,   227, 
     103,    32,  -289,    32,   310,  -109,  -494,     0,  -252,   158, 
       0,     0,     0,  -400,   101,   102,     0,   161,   102,     0, 
     163,    14,   163,   163,   158,   317,   215,   163,   217,     0, 
     103,    32,   163,   103,    32,     0,   233,  -449,     0,  -306, 
    -161,  -306,   250,   102,   214,    32,   214,    32,  -498,   317, 
       0,  -445,  -449,   253,  -500,  -161,    14,  -251,   103,    32, 
       0,   251,   252,  -396,  -437,    97,     0,    95,   387,   388, 
      -9,  -252,   471,   388,     0,  -252,   539,   388,     0,  -252, 
       0,   234,    96,    93,     0,     0,     0,     0,  -109,     0, 
      94,    97,     0,    95,    98,     0,   234,     0,     0,    75, 
       0,    94,    97,    99,    95,     0,     0,   170,    96,     0, 
      94,    97,   317,    95,    94,    97,   317,    95,   212,    96, 
     317,   216,  -376,    30,   213,  -357,  -359,   213,    96,     0, 
     279,     0,    96,  -377,     0,     0,   213,  -306,     0,    14, 
    -306,     0,   214,    32,     0,   214,    32,  -373,    30,  -306, 
    -357,  -359,   235,  -457,   214,    32,  -453,  -457,  -374,  -442, 
       0,     0,  -165,    32,     0,   213,  -165,    32,   492,     0, 
     247,     0,     0,     0,   213,     0,   213,     0,  -306,   247, 
       0,     0,   246,   214,    32,   213,     0,  -306,     0,  -306, 
       0,   299,   214,    32,   214,    32,     0,     0,  -306,  -268, 
       0,   316,     0,   214,    32,  -267,   252,     0,  -268,   236, 
     316,     0,   315,   236,  -267,   252,  -268,     0,   316,     0, 
       0,   396,  -267,   252,  -268,     0,   316,     0,     0,   400, 
    -267,   252,  -268,     0,   316,     0,     0,   470,  -267,   252, 
    -396,     0,   317,   -99,     0,   538,   477,    -9,  -268,     0, 
     316,   317,   -66,     0,   476,   252,     0,     0,     0,   317, 
      65,   475,  -425,     0,    23,  -109,    22,   317,   450,     0, 
     394,     0,     0,     0,   -14,   317,    -7,   337,     0,     0, 
       0,     0,     0,     0,  -109,  -429,     0,     0,  -392,     0, 
       0,   317,     0,     0,     0,     0,     0,   135,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   494,     0,     0, 
       0,    92,     0,   241,     0,     0,    14,     0,     0,     0, 
    -418,     0,  -502,  -272,     0,     0,     0,     0,     0,     0, 
       0,  -502,  -272,   454,     0,    14,   336,   329,     0,     0, 
    -177,   333,  -272,     0,     0,   106,   329,   109,   107,     0, 
    -196,  -197,   496,     0,   557,  -198,  -199,   113,     0,     0, 
       0,  -306,   -57,     0,     0,     0,   108,    32,  -178,   110, 
     111,     0,     0,   106,     0,   109,   107,     0,  -196,  -197, 
       0,     0,     0,  -198,  -199,   113,     0,     0,     0,  -306, 
       0,     0,     0,     0,   108,    32,     0,   110,   111,   138, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   139,    35,   112,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,     0,     0,     0,     0,     0,   159, 
      35,     0,  -314,  -310,  -349,    30,   112,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   195,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,  -188,     0,     0,     0,     0,   106,     0, 
     109,   107,     0,  -196,  -197,     0,     0,     0,  -198,  -199, 
     113,     0,     0,     0,  -306,     0,     0,     0,     0,   108, 
      32,     0,   110,   111,   225,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,   226,    35,     0,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,     0,     0, 
       0,     0,     0,     0,   270,    35,     0,  -314,  -310,  -349, 
      30,   112,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,   273,    35,     0,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,   274,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,   275,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,   276,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   277, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   278,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,   285,    35,     0,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
    -483,     0,     0,     0,     0,   106,     0,   109,   107,     0, 
    -196,  -197,     0,     0,     0,  -198,  -199,   113,     0,     0, 
       0,  -306,     0,     0,     0,     0,   108,    32,     0,   110, 
     111,   293,    35,     0,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,   295,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,     0,     0,     0, 
       0,   338,    35,     0,  -314,  -310,  -349,    30,   112,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,   339,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,   340,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,   341,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   357, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   364,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,  -189,     0,     0,     0,     0,   106,     0, 
     109,   107,     0,  -196,  -197,     0,     0,     0,  -198,  -199, 
     113,     0,     0,     0,  -306,     0,     0,     0,     0,   108, 
      32,  -190,   110,   111,     0,     0,   106,     0,   109,   107, 
       0,  -196,  -197,     0,     0,     0,  -198,  -199,   113,     0, 
       0,     0,  -306,     0,     0,     0,     0,   108,    32,     0, 
     110,   111,   415,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   442, 
      35,   112,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,  -191,     0,     0,     0, 
       0,   106,     0,   109,   107,     0,  -196,  -197,     0,   112, 
       0,  -198,  -199,   113,     0,     0,     0,  -306,     0,     0, 
       0,     0,   108,    32,     0,   110,   111,   137,     0,    29, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   141,     0,   140,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,   144,    35,     0, 
    -314,  -310,  -349,    30,   112,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,   144,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,   152,     0,    29,    35,     0,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
    -179,     0,     0,     0,     0,   106,     0,   109,   107,     0, 
    -196,  -197,     0,     0,     0,  -198,  -199,   113,     0,     0, 
       0,  -306,     0,     0,     0,     0,   108,    32,     0,   110, 
     111,     0,     0,     0,     0,  -179,     0,     0,     0,     0, 
     106,   143,   109,   107,     0,  -196,  -197,     0,     0,     0, 
    -198,  -199,   113,     0,     0,     0,  -306,     0,   145,     0, 
       0,   108,    32,     0,   110,   111,     0,     0,     0,     0, 
      72,   239,    35,     0,  -314,  -310,  -349,    30,   112,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -441,  -192,    29,    35,     0,  -314, 
    -310,  -349,    30,   112,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,     0,     0,     0,     0,     0,     0, 
       0,   243,     0,    29,    35,     0,  -314,  -310,  -349,    30, 
    -193,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
     -80,     0,    29,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   269, 
       0,   268,    35,     0,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,   272,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,   280,    73,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,   282,    35,     0,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
       0,     0,   294,   281,    29,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,   271,   298,    73,    35,     0,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
     300,     0,    29,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   353, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,     0,     0,   353,    35, 
    -382,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,   371,    35,  -383, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,     0,     0,   377,   370,    29,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,   386,     0,    29,    35,     0, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,   405,     0,    29,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,  -179,     0,     0,     0,     0,   106,     0, 
     109,   107,     0,  -196,  -197,     0,     0,     0,  -198,  -199, 
     113,     0,     0,     0,  -306,     0,     0,     0,     0,   108, 
      32,     0,   110,   111,   282,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,     0,     0,  -179,   416,     0,     0,     0,   106,     0, 
     109,   107,     0,  -196,  -197,     0,     0,     0,  -198,  -199, 
     113,     0,     0,     0,  -306,     0,     0,     0,     0,   108, 
      32,   112,   110,   111,   428,    73,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,     0,     0,     0,     0,   371,    35,   409,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,     0,     0,   429,   437,     0,    29, 
      35,   112,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,     0,     0,     0,     0, 
       0,   448,    35,     0,  -314,  -310,  -349,    30,  -194,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,   448,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,     0,   272,    35, 
     447,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,  -477,   449,   411,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,   473,     0,    29,    35,     0, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,     0,     0,     0,  -179,     0,     0, 
       0,     0,   106,     0,   109,   107,     0,  -196,  -197,     0, 
       0,  -486,  -198,  -199,   113,     0,     0,     0,  -306,     0, 
       0,     0,     0,   108,    32,  -179,   110,   111,     0,     0, 
     106,     0,   109,   107,     0,  -196,  -197,     0,     0,     0, 
    -198,  -199,   113,     0,     0,     0,  -306,     0,     0,     0, 
       0,   108,    32,     0,   110,   111,  -518,    73,    35,     0, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,     0,   112,   371,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,     0,     0,  -450,     0,     0,     0, 
       0,     0,  -184,   112,   374,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,     0,     0,   272,    35,     0,  -314,  -310,  -349,    30, 
    -215,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
     501,     0,    29,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   448, 
      35,     0,  -314,  -310,  -349,    30,  -468,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,  -281,     0, 
       0,     0,     0,     0,     0,     0,   497,     0,   505,   481, 
      35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353, 
    -354,  -355,    33,    34,    31,    32,   448,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,   448,    35,     0,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
       0,     0,     0,   448,    35,   511,  -314,  -310,  -349,    30, 
       0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
     448,    35,   515,  -314,  -310,  -349,    30,     0,  -357,  -359, 
    -353,  -354,  -355,    33,    34,    31,    32,     0,     0,  -179, 
       0,     0,   516,     0,   106,     0,   109,   107,     0,  -196, 
    -197,     0,     0,     0,  -198,  -199,   113,     0,     0,   517, 
    -306,     0,     0,     0,     0,   108,    32,     0,   110,   111, 
     529,     0,    29,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   535, 
       0,     0,     0,     0,     0,   536,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,   537,     0,     0,     0,     0,   112,   536,    35, 
       0,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,   448,    35,     0, 
    -314,  -310,  -349,    30,  -214,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,   262,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,     0,   263,   264,   265,    35,   545,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,     0,   266,   267,  -293,     0,   391,    35,     0,  -314, 
     392,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,   324,  -476,     0,   411,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,  -476,     0,   411,    35,     0,  -314,  -310,  -349, 
      30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34,    31, 
      32,     0,     0,     0,  -476,     0,   411,    35,     0,  -314, 
    -310,  -349,    30,    14,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,     0,     0,   480,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   481,    35,   410, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,  -425,     0,     0,     0,   413,    72, 
      73,    35,     0,  -314,  -310,  -349,    30,     0,  -357,  -359, 
    -353,  -354,  -355,    33,    34,    31,    32,   380,    73,    35, 
     414,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,  -257,     0,     0,     0, 
    -258,    73,    35,   304,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,     0,  -257, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,  -504,  -258,    73,    35,     0,  -314,  -310,  -349,    30, 
     379,  -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32, 
       0,  -257,     0,     0,     0,  -258,    73,    35,     0,  -314, 
    -310,  -349,    30,   469,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,  -257,  -258,    73,    35,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,  -257,   521,  -258,    73,    35,     0, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,   -97,  -257,  -427,     0,   546,     0, 
       0,     0,     0,     0,  -311,  -349,    30,     0,  -357,  -359, 
    -353,  -354,  -355,    33,    34,    31,    32,     0,   558,   451, 
       0,  -258,    73,    35,     0,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,   567, 
    -257,     0,     0,     0,   166,     0,     0,   322,     0,     0, 
       0,     0,   326,     0,   323,   313,   327,   325,     0,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,   324,  -502,  -272,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,  -253,     0,   374,    35,   329,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,   375,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -467, 
       0,     0,     0,    14,  -258,    73,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,     0,  -257,     0,     0,     0,     0,   373,     0, 
       0,     0,     0,     0,   372,  -258,    73,    35,   504,  -314, 
    -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33, 
      34,    31,    32,     0,  -257,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,  -253,     0,   561, 
    -258,    73,    35,     0,  -314,  -310,  -349,    30,     0,  -357, 
    -359,  -353,  -354,  -355,    33,    34,    31,    32,     0,  -257, 
       0,     0,     0,     0,     0,     0,     0,     0,  -253,     0, 
       0,  -258,    73,    35,   562,  -314,  -310,  -349,    30,     0, 
    -357,  -359,  -353,  -354,  -355,    33,    34,    31,    32,     0, 
    -257,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,  -253,     0,   565,  -258,    73,    35,     0, 
    -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354,  -355, 
      33,    34,    31,    32,     0,  -257,     0,     0,     0,     0, 
       0,     0,  -425,     0,  -253,     0,     0,     0,    71,    35, 
     566,  -314,  -310,  -349,    30,     0,  -357,  -359,  -353,  -354, 
    -355,    33,    34,    31,    32,     0,     0,   452,     0,   -56, 
       0,     0,     0,     0,  -425,     0,     0,     0,     0,  -253, 
       0,  -221,   390,  -485,     0,     0,   460,     0,     0,     0, 
       0,   238,     0,     0,     0,     0,  -109,  -429,     0,   335, 
    -222,  -225,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,  -224,     0,     0,     0,     0,     0,     0, 
       0,  -502,  -272,    89,     0,   229,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   329,  -223,     0,     0, 
       0,     0,  -226,     0,     0,     0,     0,    18,     0,     0, 
       0,     0,     0,  -502,  -272,     0,     0,   418,     0,     0, 
       0,     0,     0,     0,     0,     0,   531,     0,   329,   -97, 
       0,  -427,     0,    28,  -414,    29,    35,     0,  -314,  -310, 
    -349,    30,     0,  -357,  -359,  -353,  -354,  -355,    33,    34, 
      31,    32,     0,     0,   443,     0,     0,   419,     0,     0, 
       0,     0,   106,     0,   109,   107,  -420,  -196,  -197,   -69, 
       0,   -70,  -198,  -199,   113,     0,     0,     0,  -306,   151, 
     -71,   -72,     0,   108,    32,     0,   110,   111,   -73,   -74, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   -76,     0,     0,     0,     0,     0,     0,  -502,  -272, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   329,     0,   -75,     0,     0,     0,   520, 
     -77,  -179,     0,     0,     0,   112,   106,     0,   109,   107, 
    -416,  -196,  -197,   -69,     0,   -70,  -198,  -199,   113,     0, 
       0,     0,  -306,     0,   -71,   -72,     0,   108,    32,     0, 
     110,   111,   -73,   -74,     0,  -284,     0,  -509,     0,  -425, 
       0,     0,     0,  -419,     0,   -76,   -69,    65,   -70,     7, 
       0,     0,     0,     0,     0,     0,     0,   -71,   -72,  -436, 
       0,  -163,  -429,     0,     0,   -73,   -74,     0,     0,   -75, 
       0,     0,     0,     0,   -77,     0,     0,     0,   -76,   112, 
       0,     0,     0,     0,     0,   359,     0,     0,    87,     0, 
     156,     0,     0,     0,    83,     0,     0,     0,     0,     0, 
       0,     0,   -75,     0,     0,     0,   358,   -77,     0,     0, 
       0,  -465,     0,   332,     0,     0,     0,     0,   333,  -272, 
     296,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   527,     0,   -28,     0,   -33,     0,   502,   -98,  -412, 
     -25,   -30,    44,    41,   -26,   -15,     0,   -16,    42,   -19, 
      40,     0,     0,     0,     0,     0,   -17,   -18,   -27,     0, 
      43,     0,     0,   446,   -20,   -21,     0,     0,     0,     0, 
       0,   -31,     0,     0,     0,     0,     0,   -23,     0,     0, 
       0,     0,     0,  -391,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   -22,     0,     0,     0,     0,   -24,     0,     0,     0, 
       0,   -34,   -32,     0,     0,     0,     0,  -502,  -272,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   329,  -285,  -396,  -509,     0,  -425,   -29,     0, 
       0,    -9,  -410,   425,  -221,    65,  -485,     0,   -52,     0, 
       0,     0,     0,     0,     0,     0,   -51,  -436,     0,  -109, 
    -429,     0,     0,  -222,  -225,     0,     0,     0,     0,     0, 
      -7,     0,     0,     0,     0,     0,  -224,     0,     0,   423, 
     426,     0,    13,     0,     0,     0,    88,     0,   177,     0, 
       0,     0,   104,     0,     0,     0,     0,     0,     0,     0, 
    -223,     0,     0,     0,     0,  -226,     0,     0,     0,     0, 
      14,   334,     0,     0,     0,     0,   333,  -272,   343,     0, 
     417,     0,     0,     0,     0,     0,     0,     0,     0,   530, 
       0,  -404,  -283,  -406,  -509,   503,   -66,  -411,     0,     0, 
       6,     0,     0,  -408,    65,   -38,     0,     0,  -389,     0, 
       0,     0,     0,   441,   -36,   457,  -436,     0,    -5,  -429, 
       0,   331,   -37,   533,     0,    10,    26,     0,     0,   302, 
       0,     0,     0,   240,     0,   291,     0,     0,   423,   495, 
       0,    86,  -505,     0,     0,     0,     0,   155,     0,     0, 
       0,    82,     0,     0,     0,     0,     0,     0,     0,   -58, 
       0,   464,     0,     0,  -418,     0,     0,     0,  -464,   309, 
     301,     0,     0,     0,     0,  -502,  -272,   223,     0,   209, 
     356,     0,     0,     0,     0,     0,     0,     0,   526,     0, 
     329,  -269,     0,     0,   500,     0,  -411,  -403,  -282,    -1, 
    -509,  -236,   -97,  -238,  -427,  -459,     5,  -409,   425,  -407, 
      65,   -38,  -431,   -52,  -389,  -358,  -490,  -233,  -234,   178, 
     -36,   422,  -436,  -237,    -5,  -429,  -471,   328,   -37,    -2, 
       1,     8,    24,  -394,    20,   153,  -399,    38,  -402,    25, 
     220,   462,   421,   424,   423,   426,   289,  -387,   445,  -423, 
     175,  -235,    76,   149,    90,  -434,   174,    77,  -439,   171, 
    -111,  -444,   312,  -447,   303,   493,  -452,   430,  -455,   305, 
     420,    84,  -462,   237,  -479,   360,   154,  -470,   431,  -473, 
     432,  -502,  -272,   146,   455,   207,   355,  -488,   344,   105, 
    -493,   318,  -496,   439,   485,   513,   329,  -266,  -507,   483, 
     499,   179,  -411,  -516,    68,  -520,   365, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Nm *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Nm = &Nm_[0];

// Nonterminal transition matrix row ...
static const uint16 Nr_[569] = {
 3467,  3467,  3467,  3361,  3064,  3467,  3361,  3467,  3467,  3262, 
 3467,  2829,  3467,  3467,  3467,   327,   317,  3467,  3467,  3361, 
 3467,  2924,  3467,  3467,  3163,  3467,  3163,   308,  3467,  3467, 
 3467,  3467,  3467,  3467,  3467,  2509,  2797,  2349,  3467,   131, 
 3467,  3361,  3064,  3467,  3467,  3361,  3064,  3262,  2829,  3467, 
  327,   151,   162,   171,     3,    74,  3262,  3467,   410,   438, 
    4,   317,  3467,     5,  1038,   458,   475,  1057,  3467,  1076, 
 1093,  3467,  3467,  3467,    13,  3467,  3467,  2924,  1112,  3163, 
  308,  3467,  3361,  3064,    11,   498,    77,    12,    14,    15, 
 2509,  3467,   175,  3467,  3467,  3467,  3467,  3467,  3467,  3467, 
 3467,  3467,  3467,  3467,  3262,  3467,  3467,  3467,  3467,  3467, 
 1140,  1175,  3467,  3467,   515,  3467,  3467,  3467,  3467,   543, 
 3467,  3467,  3467,   176,     0,  3467,     6,  3467,  3361,    18, 
  186,    88,   189,    90,  3467,    23,  3467,  3467,  3467,  3467, 
 3467,  3467,     1,  3467,  3361,  3467,  3467,   563,   580,    19, 
  201,  2829,  3467,  3467,  3467,    83,   206,  3467,  2797,  3467, 
 1200,  3467,  3467,  3361,  3467,  3467,   327,  3467,  3467,  3467, 
 3467,  3467,  1235,  1262,  3467,  3467,  1281,   238,  3467,  3467, 
  102,   100,  3467,  3467,  3467,  3467,  3467,  3467,  3467,  3467, 
 2193,  2213,  1300,   603,  1317,  3467,   620,   637,   654,   671, 
  688,   705,   198,  1335,  1352,   722,  3467,   750,     7,   750, 
    8,  3467,  3467,  3467,  3467,  3467,  3467,  3467,  3467,  3467, 
 3361,   770,  1373,  3467,   787,  3064,  3467,  3467,  1392,   247, 
 1411,  3361,  3361,  3467,  2349,  3467,  3467,  3467,  3467,  3361, 
 3467,    24,   125,  3467,    10,    44,  3467,  3467,  2531,   244, 
 3467,  3467,  3467,  3467,  2565,  3467,  3361,  3064,  3262,  2829, 
  327,   317,  3467,   810,   827,  3467,   844,   861,  3467,  3467, 
 3262,  3467,  3467,  3467,  3467,  3467,  3467,  3467,  3467,  3467, 
 3467,  3467,  3467,  1428,  1447,  3467,  3467,  3361,   878,  3031, 
 3064,  3467,     9,  3467,  3467,  3467,  3467,   895,  3467,  3467, 
 3467,  3467,  3467,  3467,  3467,  3467,  1466,    26,  2595,  3064, 
 3467,  1487,  3467,  3467,  2367,  3467,  3467,  3467,  3467,    27, 
 1506,   114,  3467,  2829,  3467,  2235,  3467,   327,  3467,   253, 
 3467,  3467,  3467,   261,  3467,  3467,  3467,  3467,  3467,  3467, 
 3467,  3467,  1525,  3467,  3467,  1553,  2254,  2273,  2295,   923, 
  951,   971,  1573,  3467,  1603,  3262,  2829,  3467,  3467,  2957, 
 3467,  3467,  3467,  3467,  3467,  3467,  1624,    98,  1645,   210, 
 3467,  3467,  3467,  3467,  3467,  3467,     2,  3467,   227,  3467, 
 3467,  3467,  3467,  1668,    29,  3467,  3467,  3467,  3467,  3467, 
   48,  3467,  3467,  3361,   988,  2924,  3467,  3467,  3163,  1690, 
 3361,  1707,   308,  2509,  2797,  3467,  3467,  3467,  1727,  3467, 
 1747,   317,  3467,  1747,  1747,  3467,  3467,   750,   750,  3467, 
 3467,  3361,  3467,  3064,  3262,  3467,  2829,  3467,  3467,  3361, 
 3467,  3467,  3467,  3467,  2390,   269,   118,  3467,  1766,  3467, 
  293,  3467,  3467,  3467,  2326,  3467,  3467,  3467,  3467,  3467, 
 3467,  3467,  3467,  1797,  3467,  1825,   236,  3467,  3467,   327, 
 3361,   317,  3467,  1846,  3467,  1865,  1893,  3467,  1912,  3467, 
 3467,  3361,  1931,  3467,    51,  3064,  3467,  3262,  2634,  1948, 
 3467,  3467,  1988,  3467,  2005,  3467,    40,  3467,  2022,  2042, 
 2059,  2089,  3467,  3467,  3467,  2829,  2924,  3467,  2422,  3467, 
 3467,  3467,  3467,  3467,  3467,  3361,  3467,  3361,  3064,  3262, 
 3361,  3064,  3467,  3467,  2111,  3262,  2829,  3467,  1016,  3361, 
 3467,  3467,  2134,  2157,   277,   122,  3467,  3467,  3467,  3467, 
 3467,  3467,  2176,  3467,  2445,  3467,  3467,  3467,  3467,  3467, 
 3467,  3467,    46,  3467,  3467,  3467,  3467,  3467,  3467,  3467, 
 3467,   327,  2465,  3467,  3467,  2665,  2700,  3467,  3467,  2731, 
 2766,  3467,  3467,  3467,  2486,  3467,  3467,  3467,  3467, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Nr *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Nr = &Nr_[0];

// Nonterminal transition matrix column ...
static const uint8 Nc_[521] = {
   50,    50,    50,     2,     2,     9,    17,    50,    50,     2, 
    2,     9,     9,     9,    17,    50,    50,    50,    50,    50, 
   50,    50,    50,    50,    50,    50,    50,    50,    50,    50, 
   50,    50,    50,    50,    50,    32,     0,     0,     0,     2, 
   44,    44,    44,    44,    44,     9,    78,    73,    73,    12, 
   10,    11,    11,    24,    16,    17,    17,    50,    32,    32, 
   68,   105,     0,     2,    44,    78,    73,    73,    73,     9, 
    9,     9,     9,     9,     9,     9,     9,     9,    12,    10, 
   11,    14,    23,    24,    16,    16,    17,    17,    17,    17, 
   17,    17,    17,    17,    17,    17,    17,     7,     7,     7, 
   31,    32,    68,    44,    73,   105,   105,     0,    50,    78, 
    2,     9,     9,    12,    10,    11,    15,    15,    15,    25, 
   25,    38,    38,    38,    38,    38,    79,    79,    79,    79, 
   79,     5,    14,     7,    10,    10,    10,    10,    10,    10, 
   10,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
   10,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
   23,    24,    11,    15,    16,    17,    31,    25,     8,     8, 
   32,    68,    44,    44,    73,    73,    29,    38,    79,   105, 
  105,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
    0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
    0,     0,     0,     0,     0,    50,    78,     2,     5,     5, 
    5,     7,     7,     7,     9,     9,    10,    10,    11,    11, 
   12,    14,    14,    14,    14,    14,    14,    15,    15,    16, 
   16,    17,     8,    19,    19,    19,    19,    19,    19,    20, 
   21,    22,    22,    23,    24,    31,    31,    31,    25,    25, 
   25,    32,    68,    44,    44,    44,    44,    73,    29,    26, 
   26,    26,    26,    26,    26,    26,    30,    38,    38,    79, 
   84,    84,    84,    85,    51,    51,    51,    51,    51,    51, 
  105,   105,   105,   105,   105,   105,     0,    50,     1,    78, 
   54,    54,     2,     2,     2,     3,     3,     4,     4,     5, 
    6,     7,     7,     8,     8,     8,     8,     9,    10,    10, 
   11,    11,    11,    11,    11,    12,    12,    12,    12,    12, 
   12,    12,    12,    12,    12,    12,    13,    13,    13,    13, 
   13,    13,    13,    13,    13,    13,    13,    13,    13,    13, 
   13,    13,    13,    13,    13,    13,    13,    13,    14,    15, 
   15,    15,    15,    15,    15,    15,    15,    16,    16,    16, 
   17,    18,    19,    20,    21,    22,    23,    23,    23,    24, 
   25,    26,    27,    28,    28,    28,    29,    29,    29,    30, 
   30,    31,    31,    31,    31,    32,    33,    33,    34,    34, 
   35,    35,    36,    37,    37,    38,    38,    39,    40,    40, 
   41,    42,    42,    43,    43,    44,    44,    45,    45,    46, 
   46,    47,    47,    48,    48,    49,    49,    50,    50,    51, 
   51,    52,    53,    53,    54,    54,    55,    55,    56,    56, 
   57,    57,    58,    59,    59,    60,    60,    61,    62,    62, 
   63,    63,    64,    65,    65,    66,    67,    67,    68,    68, 
   69,    70,    70,    71,    72,    72,    73,    73,    74,    74, 
   75,    76,    76,    77,    78,    78,    79,    79,    80,    81, 
   81,    82,    83,    83,    84,    84,    85,    85,    86,    86, 
   87,    87,    88,    88,    89,    89,    90,    91,    91,    92, 
   92,    93,    94,    94,    95,    96,    96,    97,    97,    98, 
   98,    99,    99,   100,   100,   101,   102,   102,   103,   103, 
  104,   104,   105,   105,   106,   107,   107,   108,   108,   109, 
  109, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Nc *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Nc = &Nc_[0];

// Reduction matrix ...
static const uint16 Rm_[153] = {
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,   350, 
     350,   369,   350,   350,     0,   350,   350,     0,     0,     0, 
     350,     0,   350,     0,     0,   350,     0,     0,   426,     0, 
       0,     0,     0,     0,   435,     0,     0,     0,     0,     0, 
     426,     0,     0,     0,     0,     5,     0,   163,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     5,     0,     0, 
       0,     0,   113,     0,   113,     0,     0,     0,     0,   114, 
     113,     0,     0,     0,     0,     0,     0,     0,   206,   206, 
       0,     0,     0,     0,     0,     0,   303,     0,     0,     0, 
     303,     0,     0,     0,     0,   515,     0,   109,   515,     0, 
       0,   109,     0,     0,   109,     0,   109,     0,     0,   515, 
       0,   413,     0,     0,   413,     0,     0,     0,     0,     0, 
       0,     0,    48,     0,     0,     0,     0,     0,     0,   492, 
       0,     0,     0,     0,     0,     0,     0,   267,     0,     0, 
     267,   492,     0, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Rm *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Rm = &Rm_[0];

// Reduction matrix row ...
static const int16 Rr_[569] = {
     386,     0,     0,     0,     0,   388,   388,     0,     0,   395, 
       0,     0,     0,   393,    11,     0,     0,   390,   401,   390, 
       0,     0,   398,     0,     0,     0,     0,   395,     0,   307, 
       0,   -17,   515,     0,   368,     0,     0,     0,     0,   395, 
     -36,   435,   435,   -53,   458,   417,   424,   424,   424,    96, 
     424,     0,     0,     0,     0,     0,   435,   489,     0,     0, 
       0,   417,     0,     0,     0,     0,     0,     0,   371,   512, 
     512,   478,     0,   308,     0,     0,   428,   426,     0,     0, 
       0,     0,   428,   428,     0,     0,     0,     0,     0,     0, 
     426,     0,     0,     0,   438,   440,   -69,     0,     0,     0, 
     433,     0,   422,     0,   428,     0,     0,     0,   -85,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,   482,   482,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   312,     0, 
     307,     0,     0,     0,   478,     0,     0,     0,     0,     0, 
       0,   428,     0,     0,     0,   448,   456,   461,   424,   169, 
       0,     0,     0,   401,     0,     0,   428,     0,     0,     0, 
       0,   110,     0,     0,     0,    79,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   474,   478,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,   303,     0,     0,     0,   415,     0, 
     405,     0,     0,   513,     0,   478,     0,     0,     0,     0, 
       0,     0,     0,   446,   424,   454,     0,     0,     0,   308, 
     108,     0,     0,     0,     0,     0,     0,   443,     0,     0, 
       0,   492,   245,     0,     0,   501,   501,     0,     0,   501, 
       0,   501,   208,     0,     0,   211,     0,     0,   307,     0, 
     478,   487,   475,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,   381,     0,     0,     0,   484,   484,     0,     0, 
       0,     0,     0,   313,     0,   463,     0,     0,   519,     0, 
       0,     0,     0,     0,     0,   162,     0,     0,   174,     0, 
       0,     0,   132,     0,     0,     0,   251,   248,   243,     0, 
       0,     0,     0,   292,  -101,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,   209,   210, 
     212,   213,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,   385,     0,   482,   482,   207,     0,     0, 
       0,   413,     0,     0,   309,     0,     0,   448,     0,   456, 
     451,   166,     0,   469,   175,   472,     0,     0,     0,     0, 
     258,     0,     0,     0,     0,     0,     0,     0,   495,     0, 
       0,   302,   310,     0,     0,   501,   503,     0,   501,     0, 
     503,     0,   501,   501,   501,     0,     0,     0,   474,   183, 
       0,   478,   480,     0,     0,     0,   384,     0,     0,     0, 
       0,    47,     0,    53,  -120,     0,     0,     0,   517,   451, 
       0,   172,   173,     0,     0,     0,     0,     0,     0,   244, 
       0,     0,   301,     0,     0,   506,     0,   497,   287,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
     413,     0,     0,     0,     0,     0,   174,     0,   474,     0, 
     508,   508,     0,     0,     0,   508,  -134,   508,     0,     0, 
     280,   286,     0,     0,     0,     0,     0,   499,     0,     0, 
       0,     0,     0,     0,     0,    54,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,   497,     0,     0,     0,     0, 
       0,   497,     0,     0,     0,   497,   497,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,   299,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,   497,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Rr *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Rr = &Rr_[0];

// Reduction matrix column ...
static const uint8 Rc_[177] = {
       0,     0,     0,     0,     1,     0,     0,     0,     0,     0, 
       0,     0,     0,     2,     0,     0,     3,     0,     0,     4, 
       5,     6,     7,     8,     9,    10,     9,     9,     0,     0, 
       0,    11,     0,     0,     0,     0,     0,     0,    12,    13, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     9,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    14,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,    15,     0,     0,     0,     0,     0,     0, 
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     6,     6,     6,     6,    13,    18,     0,     6, 
       0,     6,     0,     6,     6,     6,     6,     6,     6,     6, 
       6,     6,     6,     6,     6,     6,     0, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_Rc *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::Rc = &Rc_[0];

// Production lengths (minus one) ...
static const int8 PL_[521] = {
       1,     0,     0,     6,     5,     0,     3,     0,     4,     0, 
       3,     0,     3,     5,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,    10,     0,     0,     0,     4, 
       0,     0,     0,     0,     0,     0,     2,     0,     0,     3, 
       5,     0,     0,     0,     2,     3,     0,     0,     0,     0, 
       0,     0,     0,     5,     0,     6,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     3,     1, 
       2,     3,     3,     3,     4,     5,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     1,     1, 
       3,     2,     2,     2,     3,     4,     5,     2,     1,     0, 
       1,     1,     5,     0,     0,     0,     2,     2,     2,     4, 
       4,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     4,     1,     5,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       5,     0,     4,     0,     4,     0,     0,     4,     4,     1, 
       4,     0,     1,     1,    -1,     0,     4,     1,     1,     0, 
       0,     1,     1,     4,     6,     5,     5,     5,     1,     4, 
       4,     8,     1,     1,     4,     2,     0,     0,     0,     0, 
       2,     2,     2,     2,     2,     0,     0,     2,     2,     3, 
       3,     2,     3,     3,     3,     2,     2,     5,     2,     5, 
       0,     0,     0,     0,     0,     0,     0,     1,     5,     1, 
       5,     0,     2,     0,     0,     0,     0,     0,     0,     2, 
       3,     4,     4,     1,     1,     0,     3,     5,     0,     3, 
       5,     0,     0,     0,     4,     6,    12,     0,     0,     9, 
       9,     7,     8,     9,     9,    12,     2,     0,     0,     2, 
       0,     0,     0,     4,     0,     0,     0,     0,     0,     0, 
       0,     1,     2,     2,     2,     2,     0,     0,     0,     0, 
      12,    12,     0,     1,     2,     0,     0,    13,    13,     0, 
       7,     2,     1,     0,     3,     5,     0,     0,     0,     4, 
       0,     1,     2,     4,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       0,     3,     5,     0,     0,     0,     2,     0,     1,     0, 
       0,     0,     0,     0,     3,     6,     3,     3,     0,     0, 
       0,     1,     0,     1,     1,     4,     1,     1,     3,     1, 
       3,     0,     1,     1,     2,     0,    -1,     1,    -1,     0, 
      -1,     1,     1,    -1,     1,    -1,     0,     1,    -1,     1, 
       1,    -1,     1,     0,     1,    -1,     0,     0,     1,     0, 
       1,     0,     1,    -1,     1,    -1,     1,    -1,     0,     0, 
       1,     1,    -1,     1,    -1,     0,    -1,     0,    -1,     0, 
      -1,     0,     1,    -1,     1,    -1,     0,     1,    -1,     1, 
      -1,     1,     1,    -1,     1,     1,    -1,     1,    -1,     0, 
       1,    -1,     1,     1,    -1,     1,    -1,     0,    -1,     0, 
       1,    -1,     1,     1,     0,     1,    -1,     0,     1,    -1, 
       1,     1,    -1,     1,    -1,     0,     0,     1,    -1,     1, 
      -1,     0,    -1,     1,    -1,     1,     1,    -1,     1,    -1, 
       1,     1,    -1,     1,     1,    -1,     1,    -1,     1,    -1, 
       3,    -1,     0,    -1,     1,     1,    -1,     1,    -1,     0, 
      -1,     3,    -1,     1,     1,    -1,     1,    -1,     1,    -1, 
       2, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_PL *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::PL = &PL_[0];

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_nd_fterm *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nd_fterm = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_nd_term *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nd_term = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_nd_faction *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nd_faction = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_nd_action *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nd_action = 0;

// Terminal action number ...
static const int8 tact_numb_[177] = {
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
       1,     1,     1,     1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
      -1,    -1,    -1,    -1,    -1,    -1,    -1, 
};

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_tact_numb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::tact_numb = &tact_numb_[0];

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_node_numb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::node_numb = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_nact_numb *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nact_numb = 0;

template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
const T_reverse *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::reverse = 0;

void verilog_init_actions(lrstar_parser *parser); /* User-supplied */
void verilog_term_actions(lrstar_parser *parser); /* User-supplied */
static init_func_t verilog_init_funcs_[2] = {
   verilog_init_actions,
   verilog_term_actions
};

// Init action function pointers ...
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
init_func_t *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::init_func = &verilog_init_funcs_[0];

int verilog_error(lrstar_parser *parser, int &t);
int verilog_lookup(lrstar_parser *parser, int &t);
// Terminal action function pointers ...
static tact_func_t verilog_tact_funcs_[2] = {
   verilog_error,
   verilog_lookup,
};

// Terminal action function pointers ...
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
tact_func_t *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::tact_func = &verilog_tact_funcs_[0];

// Node action function pointers ...
template<typename T_term_symb, typename T_head_symb, typename T_tact_name, typename T_node_name, typename T_text_str, typename T_head_numb, typename T_f_tail, typename T_tail, typename T_arga, typename T_argx, typename T_argy, typename T_Bm, typename T_Br, typename T_Bc, typename T_Bf, typename T_Tm, typename T_Tr, typename T_Tc, typename T_Nm, typename T_Nr, typename T_Nc, typename T_Rm, typename T_Rr, typename T_Rc, typename T_PL, typename T_nd_fterm, typename T_nd_term, typename T_nd_faction, typename T_nd_action, typename T_tact_numb, typename T_node_numb, typename T_nact_numb, typename T_reverse>
nact_func_t *templ_lrstar_parser_tables<T_term_symb, T_head_symb, T_tact_name, T_node_name, T_text_str, T_head_numb, T_f_tail, T_tail, T_arga, T_argx, T_argy, T_Bm, T_Br, T_Bc, T_Bf, T_Tm, T_Tr, T_Tc, T_Nm, T_Nr, T_Nc, T_Rm, T_Rr, T_Rc, T_PL, T_nd_fterm, T_nd_term, T_nd_faction, T_nd_action, T_tact_numb, T_node_numb, T_nact_numb, T_reverse>::nact_func = 0;


#endif

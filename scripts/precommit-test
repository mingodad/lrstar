#!/bin/bash
#
# Copyright (c) 2023 Logic Magicians Software
#
#  This script is used to ensure that the lrstar and dfa program do
#  not generate different output than a previous version.
#
#  The text log files that are output by lrstar and dfa include memory
#  utilization and execution time.  These will vary from run-to-run.
#  It is up to the user of this tool to ensure that the times & memory
#  utilization have not gotten worse in an unjustifiable way.
#
# BSD 3 License
#
set -o errexit;
set -o nounset;
set -o pipefail;

SCRIPT="${0}";
PN=${SCRIPT##*/};      # Program name (remove all before last '/').
DN=${SCRIPT%/*};       # Directory name (removall all after last '/').

function lrstar ()
{
    local lrstar="$(lrstar-path)";
    local grm="${1}";
    local grm_name="$(basename "${grm}")";
    local grm_dir="$(dirname "${grm}")";

    pushd "${grm_dir}" >/dev/null;
    "${lrstar}" "${grm_name}";
    popd >/dev/null
}


function dfa ()
{
    local dfa="$(dfa-path)";
    local lgr="${1}";
    local lgr_name="$(basename "${lgr}")";
    local lgr_dir="$(dirname "${lgr}")";

    pushd "${lgr_dir}" >/dev/null;
    "${dfa}" "${lgr_name}";
    popd >/dev/null;
}


function process ()
{
    local grm_dir="${1}";
    local grm_name="$(basename "${grm_dir}")";
    local grm="${grm_dir}/${grm_name}.grm";
    local lgr="${grm_dir}/${grm_name}.lgr";
    local makefile="${grm_dir}/Makefile"

    if [ -r "${grm}" ] ; then
        lrstar "${grm}";
    else
        echo "${grm} does not exist";
    fi;

    if [ -r "${lgr}" ] ; then
        dfa "${lgr}";
    else
        echo "${lgr} does not exist.";
    fi;

    if [ -r "${lgr}" ] ; then
        # The lexical grammer exists, the project should be able to
        # build into an executable with the generated Makefile.
        rm -f "${grm_dir}/*.o";
        make \
            -C "${grm_dir}" \
            LRSTAR_INSTALL_ROOT=/tmp/lrstar/${LRSTAR_BUILD_TYPE}/usr/local
    fi;
}


function main ()
{
    if [ -v LRSTAR_DIR ] ; then
        local grammars="${LRSTAR_DIR}/grammars";
        local examples="${LRSTAR_DIR}/examples";

        cd ${LRSTAR_DIR};
        for grm in ${grammars}/* ${examples}/*; do
            # The Kotlin lexical grammer is not a dfa grammer, so skip
            # testing until that can be sorted out.
            if [ "$(basename ${grm})" != "Kotlin" ] ; then
                process "${grm}";
            fi;
        done;
    else
        echo "LRSTAR environment is not set up.";
        false;
    fi;
}

main "${@}";
